; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -I.\RTE\_Flash -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=526 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;1091   */
;;;1092   static void AppTaskCreate (void)
000000  b51f              PUSH     {r0-r4,lr}
;;;1093   {
;;;1094   //    xTaskCreate( vTaskTaskUserIF,   	/* 任务函数  */
;;;1095   //                 "vTaskUserIF",     	/* 任务名    */
;;;1096   //                 512,               	/* 任务栈大小，单位word，也就是4字节 */
;;;1097   //                 NULL,              	/* 任务参数  */
;;;1098   //                 1,                 	/* 任务优先级*/
;;;1099   //                 &xHandleTaskUserIF );  /* 任务句柄  */
;;;1100   //	
;;;1101   //	
;;;1102   
;;;1103   
;;;1104   	xTaskCreate( vTaskLCD,    		/* 任务函数  */
000002  2000              MOVS     r0,#0
000004  4a14              LDR      r2,|L1.88|
000006  2304              MOVS     r3,#4
000008  e9cd2001          STRD     r2,r0,[sp,#4]
00000c  9300              STR      r3,[sp,#0]
00000e  9003              STR      r0,[sp,#0xc]
000010  4603              MOV      r3,r0
000012  f44f7200          MOV      r2,#0x200
000016  a111              ADR      r1,|L1.92|
000018  4813              LDR      r0,|L1.104|
00001a  f7fffffe          BL       xTaskGenericCreate
;;;1105                    "vTaskLCD",  		/* 任务名    */
;;;1106                    STKSIZE_TaskLCD,         		/* 任务栈大小，单位word，也就是4字节 */
;;;1107                    NULL,        		/* 任务参数  */
;;;1108                    PRIO_TaskLCD,      /* 任务优先级*/
;;;1109                    &xHandleTaskLCD ); /* 任务句柄  */
;;;1110   	
;;;1111   	xTaskCreate( vTaskMotorCtrl,     		/* 任务函数  */
00001e  2000              MOVS     r0,#0
000020  4a12              LDR      r2,|L1.108|
000022  2303              MOVS     r3,#3
000024  e9cd2001          STRD     r2,r0,[sp,#4]
000028  9300              STR      r3,[sp,#0]
00002a  9003              STR      r0,[sp,#0xc]
00002c  4603              MOV      r3,r0
00002e  f44f7200          MOV      r2,#0x200
000032  a10f              ADR      r1,|L1.112|
000034  4812              LDR      r0,|L1.128|
000036  f7fffffe          BL       xTaskGenericCreate
;;;1112                    "vTaskMotorCtrl",   		/* 任务名    */
;;;1113                    STKSIZE_TaskMotorCtrl,     /* 任务栈大小，单位word，也就是4字节 */
;;;1114                    NULL,           		    /* 任务参数  */
;;;1115                    PRIO_TaskMotorCtrl,        /* 任务优先级*/
;;;1116                    &xHandleTaskMotorCtrl );  /* 任务句柄  */
;;;1117   	
;;;1118       xTaskCreate( vTaskSensor,     		    /* 任务函数  */
00003a  2000              MOVS     r0,#0
00003c  4a11              LDR      r2,|L1.132|
00003e  2301              MOVS     r3,#1
000040  e9cd2001          STRD     r2,r0,[sp,#4]
000044  9300              STR      r3,[sp,#0]
000046  9003              STR      r0,[sp,#0xc]
000048  4603              MOV      r3,r0
00004a  2280              MOVS     r2,#0x80
00004c  a10e              ADR      r1,|L1.136|
00004e  4811              LDR      r0,|L1.148|
000050  f7fffffe          BL       xTaskGenericCreate
;;;1119                    "vTaskSensor",   		    /* 任务名    */
;;;1120                    STKSIZE_TaskSensor,        /* 任务栈大小，单位word，也就是4字节 */
;;;1121                    NULL,           		    /* 任务参数  */
;;;1122                    PRIO_TaskSensor,           /* 任务优先级*/
;;;1123                    &xHandleTaskSensor );      /* 任务句柄  */
;;;1124   }
000054  bd1f              POP      {r0-r4,pc}
;;;1125   
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      xHandleTaskLCD
                  |L1.92|
00005c  76546173          DCB      "vTaskLCD",0
000060  6b4c4344
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
                          DCD      vTaskLCD
                  |L1.108|
                          DCD      xHandleTaskMotorCtrl
                  |L1.112|
000070  76546173          DCB      "vTaskMotorCtrl",0
000074  6b4d6f74
000078  6f724374
00007c  726c00  
00007f  00                DCB      0
                  |L1.128|
                          DCD      vTaskMotorCtrl
                  |L1.132|
                          DCD      xHandleTaskSensor
                  |L1.136|
000088  76546173          DCB      "vTaskSensor",0
00008c  6b53656e
000090  736f7200
                  |L1.148|
                          DCD      vTaskSensor

                          AREA ||i.P_GetMsgFromUart||, CODE, READONLY, ALIGN=1

                  P_GetMsgFromUart PROC
;;;63     
;;;64     uint16_t P_GetMsgFromUart(COM_PORT_E _ucPort, uint8_t *msg)
000000  b5f8              PUSH     {r3-r7,lr}
;;;65     {
000002  4607              MOV      r7,r0
000004  460d              MOV      r5,r1
;;;66     	uint16_t i=0;
000006  2400              MOVS     r4,#0
;;;67         uint8_t tem8=0;
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
;;;68         uint32_t tem32 = 0;
00000c  2600              MOVS     r6,#0
;;;69         
;;;70         if( comGetLen(_ucPort) > 3 ) //收接收数据
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       comGetLen
000014  2803              CMP      r0,#3
000016  dd28              BLE      |L2.106|
;;;71         {
;;;72             while( comGetLen(_ucPort) )
000018  e022              B        |L2.96|
                  |L2.26|
;;;73             {
;;;74                 comGetChar(_ucPort, &tem8);
00001a  4669              MOV      r1,sp
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       comGetChar
;;;75                 if( i == 0 )
000022  b954              CBNZ     r4,|L2.58|
;;;76                 {
;;;77                     if( tem8 == 0xEE ) 
000024  f89d0000          LDRB     r0,[sp,#0]
000028  28ee              CMP      r0,#0xee
00002a  d116              BNE      |L2.90|
;;;78                     {
;;;79                         *( msg + i++ ) = tem8;
00002c  f89d2000          LDRB     r2,[sp,#0]
000030  4620              MOV      r0,r4
000032  1c61              ADDS     r1,r4,#1
000034  b28c              UXTH     r4,r1
000036  542a              STRB     r2,[r5,r0]
000038  e00f              B        |L2.90|
                  |L2.58|
;;;80                     }
;;;81                 }else
;;;82                 {
;;;83                     *( msg + i++ ) = tem8;
00003a  f89d2000          LDRB     r2,[sp,#0]
00003e  4620              MOV      r0,r4
000040  1c61              ADDS     r1,r4,#1
000042  b28c              UXTH     r4,r1
000044  542a              STRB     r2,[r5,r0]
;;;84                     
;;;85                     tem32 = ((tem32<<8)|tem8);                           //拼接最后4个字节，组成一个32位整数
000046  f89d0000          LDRB     r0,[sp,#0]
00004a  ea402606          ORR      r6,r0,r6,LSL #8
;;;86                     if( tem32 == 0xFFFCFFFF )
00004e  f46f3040          MVN      r0,#0x30000
000052  4286              CMP      r6,r0
000054  d101              BNE      |L2.90|
;;;87                     {
;;;88                         return i;
000056  4620              MOV      r0,r4
                  |L2.88|
;;;89                     }
;;;90     //                if( i > 13 )
;;;91     //                {
;;;92     //                    if( tem8 == 0xFF ) 
;;;93     //                    {
;;;94     //                        return i;
;;;95     //                    }else
;;;96     //                    {
;;;97     //                        return 0;
;;;98     //                    }
;;;99     //                }
;;;100                }
;;;101                vTaskDelay(pdMS_TO_TICKS(1));
;;;102            }
;;;103        }
;;;104        return 0;
;;;105    }
000058  bdf8              POP      {r3-r7,pc}
                  |L2.90|
00005a  2001              MOVS     r0,#1                 ;101
00005c  f7fffffe          BL       vTaskDelay
                  |L2.96|
000060  4638              MOV      r0,r7                 ;72
000062  f7fffffe          BL       comGetLen
000066  2800              CMP      r0,#0                 ;72
000068  d1d7              BNE      |L2.26|
                  |L2.106|
00006a  2000              MOVS     r0,#0                 ;104
00006c  e7f4              B        |L2.88|
;;;106    
                          ENDP


                          AREA ||i.TMY_ParaInit||, CODE, READONLY, ALIGN=2

                  TMY_ParaInit PROC
;;;107    //默认参数
;;;108    void TMY_ParaInit( void )
000000  4811              LDR      r0,|L3.72|
;;;109    {
;;;110    	//步进电机初始化
;;;111        //方向
;;;112    	Motor.state.bit.dir = UP;
000002  7880              LDRB     r0,[r0,#2]  ; Motor
000004  f0200001          BIC      r0,r0,#1
000008  490f              LDR      r1,|L3.72|
00000a  7088              STRB     r0,[r1,#2]
;;;113        //速度
;;;114    	Motor.speed = SLOW;
00000c  2001              MOVS     r0,#1
00000e  7008              STRB     r0,[r1,#0]
;;;115    	Motor.gear = GEAR_SLOW_NORMAL_FAST; //慢中快速，默认有效
000010  2002              MOVS     r0,#2
000012  7048              STRB     r0,[r1,#1]
;;;116        //SetTextValue(0, 16,"停止\x00");
;;;117        
;;;118        //频率
;;;119        //SetTextValue(0, 17,"0");
;;;120        
;;;121    	Motor.max_step = MAX_STEP_18ML; //最大步数
000014  480d              LDR      r0,|L3.76|
000016  6088              STR      r0,[r1,#8]  ; Motor
;;;122    	Motor.counter_step = 0; //步数
000018  2000              MOVS     r0,#0
00001a  6048              STR      r0,[r1,#4]  ; Motor
;;;123    	
;;;124    	//其它初始化
;;;125    	Tmy.pressure = 0; //压力
00001c  490c              LDR      r1,|L3.80|
00001e  60c8              STR      r0,[r1,#0xc]  ; Tmy
;;;126    	Tmy.power_percent = 100; //电量
000020  2064              MOVS     r0,#0x64
000022  7208              STRB     r0,[r1,#8]
;;;127    	
;;;128        Tmy.Key.zdpk = 1; //自动排空，默认有效
000024  4608              MOV      r0,r1
000026  7940              LDRB     r0,[r0,#5]  ; Tmy
000028  f0200002          BIC      r0,r0,#2
00002c  1c80              ADDS     r0,r0,#2
00002e  7148              STRB     r0,[r1,#5]
;;;129        Tmy.Key.hx = 1; //回吸，默认有效
000030  4608              MOV      r0,r1
000032  7940              LDRB     r0,[r0,#5]  ; Tmy
000034  f0200001          BIC      r0,r0,#1
000038  1c40              ADDS     r0,r0,#1
00003a  7148              STRB     r0,[r1,#5]
;;;130        Tmy.Key.zh = 0; //1.8ml，默认有效
00003c  4608              MOV      r0,r1
00003e  7940              LDRB     r0,[r0,#5]  ; Tmy
000040  f0200008          BIC      r0,r0,#8
000044  7148              STRB     r0,[r1,#5]
;;;131    }
000046  4770              BX       lr
;;;132    
                          ENDP

                  |L3.72|
                          DCD      Motor
                  |L3.76|
                          DCD      0x0003b97e
                  |L3.80|
                          DCD      Tmy

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;167    */
;;;168    int main(void)
000000  2001              MOVS     r0,#1
000002  f3808810          MSR      PRIMASK,r0
000006  bf00              NOP      
;;;169    {
;;;170    	/* 
;;;171    	  在启动调度前，为了防止初始化STM32外设时有中断服务程序执行，这里禁止全局中断(除了NMI和HardFault)。
;;;172    	  这样做的好处是：
;;;173    	  1. 防止执行的中断服务程序中有FreeRTOS的API函数。
;;;174    	  2. 保证系统正常启动，不受别的中断影响。
;;;175    	  3. 关于是否关闭全局中断，大家根据自己的实际情况设置即可。
;;;176    	  在移植文件port.c中的函数prvStartFirstTask中会重新开启全局中断。通过指令cpsie i开启，__set_PRIMASK(1)
;;;177    	  和cpsie i是等效的。
;;;178         */
;;;179    	__set_PRIMASK(1);  
;;;180    	
;;;181    	/* 硬件初始化 */
;;;182    	bsp_Init(); 
000008  f7fffffe          BL       bsp_Init
;;;183    	debug_en( 1 );
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       debug_en
;;;184    	
;;;185    	TMY_ParaInit();
000012  f7fffffe          BL       TMY_ParaInit
;;;186    	start_set();
000016  f7fffffe          BL       start_set
;;;187    	
;;;188    	/* 创建任务 */
;;;189    	AppTaskCreate();
00001a  f7fffffe          BL       AppTaskCreate
;;;190    	
;;;191        /* 启动调度，开始执行任务 */
;;;192        vTaskStartScheduler();
00001e  f7fffffe          BL       vTaskStartScheduler
;;;193    
;;;194    	/* 
;;;195    	  如果系统正常启动是不会运行到这里的，运行到这里极有可能是用于定时器任务或者空闲任务的
;;;196    	  heap空间不足造成创建失败，此要加大FreeRTOSConfig.h文件中定义的heap大小：
;;;197    	  #define configTOTAL_HEAP_SIZE	      ( ( size_t ) ( 17 * 1024 ) )
;;;198    	*/
;;;199    	while(1);
000022  bf00              NOP      
                  |L4.36|
000024  e7fe              B        |L4.36|
;;;200    }
;;;201    
                          ENDP


                          AREA ||i.start_set||, CODE, READONLY, ALIGN=2

                  start_set PROC
;;;133    
;;;134    void start_set( void )
000000  b510              PUSH     {r4,lr}
;;;135    {
;;;136        if(RCC_GetFlagStatus(RCC_FLAG_PORRST))
000002  207b              MOVS     r0,#0x7b
000004  f7fffffe          BL       RCC_GetFlagStatus
000008  b118              CBZ      r0,|L5.18|
;;;137        {
;;;138            debug_usr("power reset:");//上电重启
00000a  a00d              ADR      r0,|L5.64|
00000c  f7fffffe          BL       debug_usr
000010  e002              B        |L5.24|
                  |L5.18|
;;;139        }else
;;;140        {
;;;141            debug_usr("other reset:");//软重启
000012  a00f              ADR      r0,|L5.80|
000014  f7fffffe          BL       debug_usr
                  |L5.24|
;;;142        }
;;;143        
;;;144        //debug_usr("%d %d\r\n", data_saved.data.n_reset, data_saved.data.n_error);//
;;;145        
;;;146        RCC->CSR|=0X1000000    ; //清除中断标示
000018  4811              LDR      r0,|L5.96|
00001a  6a40              LDR      r0,[r0,#0x24]
00001c  f0407080          ORR      r0,r0,#0x1000000
000020  490f              LDR      r1,|L5.96|
000022  6248              STR      r0,[r1,#0x24]
;;;147        
;;;148        //debug_usr("Train num : %02x%02x max_room_n:%d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;149        //printf("Train num : %02x%02x max_room_n:%d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;150        
;;;151        debug_usr("************************************\r\n");
000024  a00f              ADR      r0,|L5.100|
000026  f7fffffe          BL       debug_usr
;;;152        debug_usr("          推麻仪 IV型\r\n\r\n");
00002a  a018              ADR      r0,|L5.140|
00002c  f7fffffe          BL       debug_usr
;;;153        debug_usr("Version : %s\r\n", HW_VER);
000030  a11d              ADR      r1,|L5.168|
000032  a01f              ADR      r0,|L5.176|
000034  f7fffffe          BL       debug_usr
;;;154        //printf("ID : %c%d - %02d\r\n", Train.TrainType, ( ( ( (uint16_t)Train.TrainNum[0]) << 8 ) + Train.TrainNum[1]), Train.max_room_n );
;;;155        //printf("ID : %02x%02x - %d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;156        
;;;157        printf("************************************\r\n");
000038  a00a              ADR      r0,|L5.100|
00003a  f7fffffe          BL       __2printf
;;;158    }
00003e  bd10              POP      {r4,pc}
;;;159    
                          ENDP

                  |L5.64|
000040  706f7765          DCB      "power reset:",0
000044  72207265
000048  7365743a
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L5.80|
000050  6f746865          DCB      "other reset:",0
000054  72207265
000058  7365743a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L5.96|
                          DCD      0x40021000
                  |L5.100|
000064  2a2a2a2a          DCB      "************************************\r\n",0
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a2a
000084  2a2a2a2a
000088  0d0a00  
00008b  00                DCB      0
                  |L5.140|
00008c  20202020          DCB      "          ",205,198,194,233,210,199," IV",208,205,"\r\n"
000090  20202020
000094  2020cdc6
000098  c2e9d2c7
00009c  204956d0
0000a0  cd0d0a  
0000a3  0d0a00            DCB      "\r\n",0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L5.168|
0000a8  56312e30          DCB      "V1.0.0",0
0000ac  2e3000  
0000af  00                DCB      0
                  |L5.176|
0000b0  56657273          DCB      "Version : %s\r\n",0
0000b4  696f6e20
0000b8  3a202573
0000bc  0d0a00  
0000bf  00                DCB      0

                          AREA ||i.vTaskLCD||, CODE, READONLY, ALIGN=2

                  vTaskLCD PROC
;;;354    */
;;;355    static void vTaskLCD(void *pvParameters)
000000  f7fffffe          BL       ULCD_Init
;;;356    {      
;;;357    //    uint8_t err, tem8;
;;;358        
;;;359        ULCD_Init();
;;;360        printf( "vTaskLCD\r\n" );
000004  a006              ADR      r0,|L6.32|
000006  f7fffffe          BL       __2printf
;;;361        bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;362        
;;;363        //vTaskDelay(pdMS_TO_TICKS(10000));
;;;364        
;;;365        //LCD_ParaInit( );
;;;366        
;;;367        while(1)
000010  e004              B        |L6.28|
                  |L6.18|
;;;368        {
;;;369            vTaskDelay(1);
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       vTaskDelay
;;;370            ULCD_Task();
000018  f7fffffe          BL       ULCD_Task
                  |L6.28|
00001c  e7f9              B        |L6.18|
;;;371            
;;;372    //        if( lg_lcd_init == 1 )
;;;373    //        {
;;;374    //            //SetBuzzer(100);
;;;375    //            lg_lcd_init = 2;
;;;376    //            LCD_ParaInit();
;;;377    //            Tmy.State.bit.InitPara = 1;
;;;378    //        }
;;;379            
;;;380        }
;;;381    }
;;;382    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
000020  76546173          DCB      "vTaskLCD\r\n",0
000024  6b4c4344
000028  0d0a00  
00002b  00                DCB      0

                          AREA ||i.vTaskMotorCtrl||, CODE, READONLY, ALIGN=2

                  vTaskMotorCtrl PROC
;;;392    
;;;393    static void vTaskMotorCtrl(void *pvParameters)
000000  b508              PUSH     {r3,lr}
;;;394    {
;;;395        uint8_t key_v, tem8;
;;;396        //uint8_t  key_state, key_state_c;
;;;397        uint8_t count_init_down;
;;;398        
;;;399        uint8_t dg_sta_c;
;;;400        
;;;401        MOTOR_Init( 1000 );
000002  f44f707a          MOV      r0,#0x3e8
000006  f7fffffe          BL       MOTOR_Init
;;;402        key_v = 0;
00000a  2600              MOVS     r6,#0
;;;403        MOTOR_SetDir( UP );
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       MOTOR_SetDir
;;;404        
;;;405        Motor.max_hx_step = 31495;
000012  f6473007          MOV      r0,#0x7b07
000016  49fa              LDR      r1,|L7.1024|
000018  6108              STR      r0,[r1,#0x10]  ; Motor
;;;406        
;;;407        count_init_down = 0;
00001a  2700              MOVS     r7,#0
;;;408        dev_sta = DEV_INIT;
00001c  2000              MOVS     r0,#0
00001e  49f9              LDR      r1,|L7.1028|
000020  7008              STRB     r0,[r1,#0]
;;;409        dg_sta = DG_INIT;
000022  2001              MOVS     r0,#1
000024  49f8              LDR      r1,|L7.1032|
000026  7008              STRB     r0,[r1,#0]
;;;410        
;;;411        while(1)
000028  e3a0              B        |L7.1900|
                  |L7.42|
;;;412        {
;;;413            vTaskDelay(2);
00002a  2002              MOVS     r0,#2
00002c  f7fffffe          BL       vTaskDelay
;;;414    		
;;;415    		//key_state = bsp_GetKeyState( KID_SYRINGE );
;;;416    		//key_state_c = key_state;
;;;417    			
;;;418    		key_v = bsp_GetKey();
000030  f7fffffe          BL       bsp_GetKey
000034  4606              MOV      r6,r0
;;;419            
;;;420            switch( key_v ) //
000036  2e19              CMP      r6,#0x19
000038  d002              BEQ      |L7.64|
00003a  2e1a              CMP      r6,#0x1a
00003c  d164              BNE      |L7.264|
00003e  e044              B        |L7.202|
                  |L7.64|
;;;421    		{
;;;422    		    case PEDAL_DOWN : //按下脚踏，电机运行
;;;423    			
;;;424    				timer_pedal_up = 0;
000040  2000              MOVS     r0,#0
000042  49f2              LDR      r1,|L7.1036|
000044  7008              STRB     r0,[r1,#0]
;;;425    		        
;;;426    				if( dg_sta == DG_UP ) //顶杆上升期间
000046  48f0              LDR      r0,|L7.1032|
000048  7800              LDRB     r0,[r0,#0]  ; dg_sta
00004a  2806              CMP      r0,#6
00004c  d13c              BNE      |L7.200|
;;;427    		        {   
;;;428    					//自动给药情况下，按下脚踏，停机?
;;;429    					if( Tmy.State.bit.zdgy )
00004e  48f0              LDR      r0,|L7.1040|
000050  7980              LDRB     r0,[r0,#6]  ; Tmy
000052  f3c01080          UBFX     r0,r0,#6,#1
000056  b170              CBZ      r0,|L7.118|
;;;430    					{
;;;431    					    timer_pedal_down = 1;
000058  2001              MOVS     r0,#1
00005a  49ee              LDR      r1,|L7.1044|
00005c  7008              STRB     r0,[r1,#0]
;;;432    					    Tmy.State.bit.zdgy = 0; //取消自动给药
00005e  48ec              LDR      r0,|L7.1040|
000060  7980              LDRB     r0,[r0,#6]  ; Tmy
000062  f0200040          BIC      r0,r0,#0x40
000066  49ea              LDR      r1,|L7.1040|
000068  7188              STRB     r0,[r1,#6]
;;;433    					    //播放语音:自动给药取消？
;;;434    					    SetTextValue(0,26,"自动给药取消");
00006a  a2eb              ADR      r2,|L7.1048|
00006c  211a              MOVS     r1,#0x1a
00006e  2000              MOVS     r0,#0
000070  f7fffffe          BL       SetTextValue
000074  e028              B        |L7.200|
                  |L7.118|
;;;435    					    
;;;436    					}else //非自动给药
;;;437    					{
;;;438        					timer_pedal_down = 1;
000076  2001              MOVS     r0,#1
000078  49e6              LDR      r1,|L7.1044|
00007a  7008              STRB     r0,[r1,#0]
;;;439        					//Tmy.State.bit.zdgy = 0;//取消自动给药
;;;440        					
;;;441            	            Motor.speed++;
00007c  48e0              LDR      r0,|L7.1024|
00007e  7800              LDRB     r0,[r0,#0]  ; Motor
000080  1c40              ADDS     r0,r0,#1
000082  49df              LDR      r1,|L7.1024|
000084  7008              STRB     r0,[r1,#0]
;;;442            	            if( Motor.speed > 3 ) 
000086  4608              MOV      r0,r1
000088  7800              LDRB     r0,[r0,#0]  ; Motor
00008a  2803              CMP      r0,#3
00008c  dd01              BLE      |L7.146|
;;;443            	            {
;;;444            	                Motor.speed = 1;
00008e  2001              MOVS     r0,#1
000090  7008              STRB     r0,[r1,#0]
                  |L7.146|
;;;445            	            }
;;;446            	            
;;;447            	            tem8 = MOTOR_SPEED_INDEX[Motor.gear][Motor.speed-1];
000092  48db              LDR      r0,|L7.1024|
000094  7840              LDRB     r0,[r0,#1]  ; Motor
000096  eb000040          ADD      r0,r0,r0,LSL #1
00009a  49e3              LDR      r1,|L7.1064|
00009c  eb010140          ADD      r1,r1,r0,LSL #1
0000a0  48d7              LDR      r0,|L7.1024|
0000a2  7800              LDRB     r0,[r0,#0]  ; Motor
0000a4  1e40              SUBS     r0,r0,#1
0000a6  f8115010          LDRB     r5,[r1,r0,LSL #1]
;;;448            	            Tmy.speed = tem8;
0000aa  48d9              LDR      r0,|L7.1040|
0000ac  7105              STRB     r5,[r0,#4]
;;;449            	             
;;;450            	            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度
0000ae  49df              LDR      r1,|L7.1068|
0000b0  f8310015          LDRH     r0,[r1,r5,LSL #1]
0000b4  f7fffffe          BL       MOTOR_SetSpeed
;;;451            	            SetTextValue(0, 16, &MOTOR_SPEED_DISPLAY[tem8][0]); 
0000b8  eb0500c5          ADD      r0,r5,r5,LSL #3
0000bc  49dc              LDR      r1,|L7.1072|
0000be  1842              ADDS     r2,r0,r1
0000c0  2110              MOVS     r1,#0x10
0000c2  2000              MOVS     r0,#0
0000c4  f7fffffe          BL       SetTextValue
                  |L7.200|
;;;452            	            //SetTextInt32(0, 17, MOTOR_SPEED_CYCLE[tem8], 0, 1);
;;;453            	            //Tmy.work_state = STA_MOVE;
;;;454    					}
;;;455    		        }
;;;456    		        
;;;457    		        break;
0000c8  e01f              B        |L7.266|
                  |L7.202|
;;;458    		    case PEDAL_UP : //抬起脚踏
;;;459    			
;;;460    				timer_pedal_down = 0;
0000ca  2000              MOVS     r0,#0
0000cc  49d1              LDR      r1,|L7.1044|
0000ce  7008              STRB     r0,[r1,#0]
;;;461    				
;;;462    		        if( dg_sta == DG_UP ) //顶杆上升期间
0000d0  48cd              LDR      r0,|L7.1032|
0000d2  7800              LDRB     r0,[r0,#0]  ; dg_sta
0000d4  2806              CMP      r0,#6
0000d6  d116              BNE      |L7.262|
;;;463    		        {
;;;464    					if( Tmy.State.bit.zdgy ) //自动给药
0000d8  48cd              LDR      r0,|L7.1040|
0000da  7980              LDRB     r0,[r0,#6]  ; Tmy
0000dc  f3c01080          UBFX     r0,r0,#6,#1
0000e0  b988              CBNZ     r0,|L7.262|
;;;465        		        {
;;;466    						;//自动给药
;;;467    					}else //非自动给药
;;;468    					{
;;;469    						//Motor.speed = 0;
;;;470    						MOTOR_Stop(); //电机停止
0000e2  f7fffffe          BL       MOTOR_Stop
;;;471    						timer_pedal_up = 1;//启动脚踏抬起计时
0000e6  2001              MOVS     r0,#1
0000e8  49c8              LDR      r1,|L7.1036|
0000ea  7008              STRB     r0,[r1,#0]
;;;472    						
;;;473    						SetTextValue(0, 16,"停止\x00");
0000ec  a2d1              ADR      r2,|L7.1076|
0000ee  2110              MOVS     r1,#0x10
0000f0  2000              MOVS     r0,#0
0000f2  f7fffffe          BL       SetTextValue
;;;474    						SetTextInt32(0, 17, 0, 0, 1);
0000f6  2001              MOVS     r0,#1
0000f8  2300              MOVS     r3,#0
0000fa  461a              MOV      r2,r3
0000fc  2111              MOVS     r1,#0x11
0000fe  9000              STR      r0,[sp,#0]
000100  4618              MOV      r0,r3
000102  f7fffffe          BL       SetTextInt32
                  |L7.262|
;;;475    						//Tmy.work_state = STA_IDLE;
;;;476    					}
;;;477        	        }
;;;478    	            break;
000106  e000              B        |L7.266|
                  |L7.264|
;;;479    //		    case ZERO_UNDETECT : //
;;;480    //		        Motor.state.bit.zero = 0;
;;;481    //		        SetTextValue(0,18,"未触底");
;;;482    //		        break;
;;;483    //	        case ZERO_DETECT : //
;;;484    //	            Motor.state.bit.zero = 1;
;;;485    //		        MOTOR_Stop();
;;;486    //		        Motor.counter_step = 0;
;;;487    //		        SetTextValue(0,18,"已触底");
;;;488    //		    case SYRINGE_UNDETECT : //
;;;489    ////		        Motor.state.bit.zero = 0;
;;;490    //		        //SetTextValue(0,18,"1.8ml");
;;;491    //		        break;
;;;492    //	        case SYRINGE_DETECT : //
;;;493    ////	            Motor.state.bit.zero = 1;
;;;494    ////		        MOTOR_Stop();
;;;495    ////		        Motor.counter_step = 0;
;;;496    //		        //SetTextValue(0,18,"2.2ml");
;;;497    //		        break;
;;;498    //	             
;;;499    		    default : break;
000108  bf00              NOP      
                  |L7.266|
00010a  bf00              NOP                            ;457
;;;500    		}
;;;501            
;;;502    		if( dg_sta == DG_UP ) //顶杆上升期间
00010c  48be              LDR      r0,|L7.1032|
00010e  7800              LDRB     r0,[r0,#0]  ; dg_sta
000110  2806              CMP      r0,#6
000112  d15d              BNE      |L7.464|
;;;503    		{
;;;504    			if( timer_pedal_up > DLY_PEDAL_UP_MOTOR_STOP ) //抬起脚踏时间大于 DLY_PEDAL_UP_MOTOR_STOP 秒
000114  48bd              LDR      r0,|L7.1036|
000116  7800              LDRB     r0,[r0,#0]  ; timer_pedal_up
000118  2802              CMP      r0,#2
00011a  dd24              BLE      |L7.358|
;;;505    			{
;;;506    				timer_pedal_up = 0;
00011c  2000              MOVS     r0,#0
00011e  49bb              LDR      r1,|L7.1036|
000120  7008              STRB     r0,[r1,#0]
;;;507    				Motor.speed = 0; //恢复速度
000122  49b7              LDR      r1,|L7.1024|
000124  7008              STRB     r0,[r1,#0]
;;;508    				   if( Tmy.Key.hx )//&& (!Motor.state.bit.dir) )//回吸模式有效 Motor.state.bit.dir
000126  48ba              LDR      r0,|L7.1040|
000128  7940              LDRB     r0,[r0,#5]  ; Tmy
00012a  f0000001          AND      r0,r0,#1
00012e  b1d0              CBZ      r0,|L7.358|
;;;509    				   {
;;;510    				        if(!Tmy.State.bit.zdgy) //非自动给药
000130  48b7              LDR      r0,|L7.1040|
000132  7980              LDRB     r0,[r0,#6]  ; Tmy
000134  f3c01080          UBFX     r0,r0,#6,#1
000138  b9a8              CBNZ     r0,|L7.358|
;;;511        				    {
;;;512        						if( ( Tmy.speed == SLOW )   //常慢速
00013a  48b5              LDR      r0,|L7.1040|
00013c  7900              LDRB     r0,[r0,#4]  ; Tmy
00013e  2801              CMP      r0,#1
000140  d007              BEQ      |L7.338|
;;;513        						 || ( Tmy.speed == NORMAL ) //中速
000142  48b3              LDR      r0,|L7.1040|
000144  7900              LDRB     r0,[r0,#4]  ; Tmy
000146  2802              CMP      r0,#2
000148  d003              BEQ      |L7.338|
;;;514        						 || ( Tmy.speed == FAST ) ) //快速 
00014a  48b1              LDR      r0,|L7.1040|
00014c  7900              LDRB     r0,[r0,#4]  ; Tmy
00014e  2803              CMP      r0,#3
000150  d109              BNE      |L7.358|
                  |L7.338|
;;;515        						{
;;;516        							Motor.counter_hx_step = Motor.counter_step - Motor.max_hx_step;
000152  48ab              LDR      r0,|L7.1024|
000154  6840              LDR      r0,[r0,#4]  ; Motor
000156  49aa              LDR      r1,|L7.1024|
000158  6909              LDR      r1,[r1,#0x10]  ; Motor
00015a  1a40              SUBS     r0,r0,r1
00015c  49a8              LDR      r1,|L7.1024|
00015e  60c8              STR      r0,[r1,#0xc]  ; Motor
;;;517        							//Tmy.state.bit.hx = 1;
;;;518        							dg_sta = DG_HX_DOWN;//Tmy.work_state = STA_HX_DOWN;
000160  200b              MOVS     r0,#0xb
000162  49a9              LDR      r1,|L7.1032|
000164  7008              STRB     r0,[r1,#0]
                  |L7.358|
;;;519        							//MOTOR_SetDir( DOWN );
;;;520        							//MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度
;;;521        							//SetTextValue(0,18,"回吸下降");
;;;522        						}
;;;523        				    }
;;;524    				   }
;;;525    			}
;;;526    			
;;;527    			//自动给药判断
;;;528    			if( ( Tmy.speed == SLOWEST )   //慢慢速
000166  48aa              LDR      r0,|L7.1040|
000168  7900              LDRB     r0,[r0,#4]  ; Tmy
00016a  b118              CBZ      r0,|L7.372|
;;;529    			 || ( Tmy.speed == SLOW    ) ) //常慢速
00016c  48a8              LDR      r0,|L7.1040|
00016e  7900              LDRB     r0,[r0,#4]  ; Tmy
000170  2801              CMP      r0,#1
000172  d12d              BNE      |L7.464|
                  |L7.372|
;;;530    			{
;;;531    				if( ( !Tmy.State.bit.zdgy ) && ( timer_pedal_down > TIME_ZDGY_ENABLE ) ) //按下脚踏时间大于TIME_CRUISE_START秒
000174  48a6              LDR      r0,|L7.1040|
000176  7980              LDRB     r0,[r0,#6]  ; Tmy
000178  f3c01080          UBFX     r0,r0,#6,#1
00017c  b990              CBNZ     r0,|L7.420|
00017e  48a5              LDR      r0,|L7.1044|
000180  7800              LDRB     r0,[r0,#0]  ; timer_pedal_down
000182  2805              CMP      r0,#5
000184  dd0e              BLE      |L7.420|
;;;532    				{
;;;533    					Tmy.State.bit.zdgy = 1; //进入自动给药
000186  48a2              LDR      r0,|L7.1040|
000188  7980              LDRB     r0,[r0,#6]  ; Tmy
00018a  f0200040          BIC      r0,r0,#0x40
00018e  3040              ADDS     r0,r0,#0x40
000190  499f              LDR      r1,|L7.1040|
000192  7188              STRB     r0,[r1,#6]
;;;534    					SetTextValue(0,26,"自动给药...");
000194  a2a9              ADR      r2,|L7.1084|
000196  211a              MOVS     r1,#0x1a
000198  2000              MOVS     r0,#0
00019a  f7fffffe          BL       SetTextValue
;;;535    					//play_sound('a:/sounds/zdgy.mp3');
;;;536    					PlayMusic("a:/sounds/zdgy.mp3"); //EE 94 41 3A 2F 53 6F 75 6E 64 73 2F 7A 64 67 79 2E 6D 70 33 FF FC FF FF 
00019e  a0aa              ADR      r0,|L7.1096|
0001a0  f7fffffe          BL       PlayMusic
                  |L7.420|
;;;537    					//播放语音:即将进入巡航模式
;;;538    					//如果2秒内，抬脚，进入巡航模式
;;;539    					//如果2秒内，没有抬脚，不进入巡航模式
;;;540    				}
;;;541    				
;;;542    				if( ( Tmy.State.bit.zdgy ) && ( timer_pedal_down > TIME_ZDGY_CANCLE ) ) //按下脚踏时间大于5秒
0001a4  489a              LDR      r0,|L7.1040|
0001a6  7980              LDRB     r0,[r0,#6]  ; Tmy
0001a8  f3c01080          UBFX     r0,r0,#6,#1
0001ac  b180              CBZ      r0,|L7.464|
0001ae  4899              LDR      r0,|L7.1044|
0001b0  7800              LDRB     r0,[r0,#0]  ; timer_pedal_down
0001b2  2807              CMP      r0,#7
0001b4  dd0c              BLE      |L7.464|
;;;543    				{
;;;544    					Tmy.State.bit.zdgy = 0;//取消自动给药
0001b6  4896              LDR      r0,|L7.1040|
0001b8  7980              LDRB     r0,[r0,#6]  ; Tmy
0001ba  f0200040          BIC      r0,r0,#0x40
0001be  4994              LDR      r1,|L7.1040|
0001c0  7188              STRB     r0,[r1,#6]
;;;545    					timer_pedal_down = 0;
0001c2  2000              MOVS     r0,#0
0001c4  4993              LDR      r1,|L7.1044|
0001c6  7008              STRB     r0,[r1,#0]
;;;546    					//播放语音:巡航模式取消？
;;;547    					SetTextValue(0,26,"自动给药取消");
0001c8  a293              ADR      r2,|L7.1048|
0001ca  211a              MOVS     r1,#0x1a
0001cc  f7fffffe          BL       SetTextValue
                  |L7.464|
;;;548    					//如果2秒内，抬脚，进入巡航模式
;;;549    					//如果2秒内，没有抬脚，不进入巡航模式
;;;550    				}
;;;551    			}
;;;552    		}
;;;553    
;;;554            switch( dg_sta )
0001d0  488d              LDR      r0,|L7.1032|
0001d2  7800              LDRB     r0,[r0,#0]  ; dg_sta
0001d4  2810              CMP      r0,#0x10
0001d6  d27c              BCS      |L7.722|
0001d8  e8dff000          TBB      [pc,r0]
0001dc  c8082a4d          DCB      0xc8,0x08,0x2a,0x4d
0001e0  fd9ffcfb          DCB      0xfd,0x9f,0xfc,0xfb
0001e4  e4faf9f8          DCB      0xe4,0xfa,0xf9,0xf8
0001e8  7b7bf7f6          DCB      0x7b,0x7b,0xf7,0xf6
;;;555            {
;;;556                case DG_INIT : //上电，参数初始化
;;;557                    if( dg_sta_c != dg_sta )
0001ec  4886              LDR      r0,|L7.1032|
0001ee  7800              LDRB     r0,[r0,#0]  ; dg_sta
0001f0  4284              CMP      r4,r0
0001f2  d001              BEQ      |L7.504|
;;;558                    {
;;;559                        dg_sta_c = dg_sta;
0001f4  4884              LDR      r0,|L7.1032|
0001f6  7804              LDRB     r4,[r0,#0]  ; dg_sta
                  |L7.504|
;;;560                        //SetTextValue(0,26,"初始化...");
;;;561                    }
;;;562                    
;;;563                    if( !Tmy.State.bit.InitPara ) //参数尚未初始化
0001f8  4885              LDR      r0,|L7.1040|
0001fa  7980              LDRB     r0,[r0,#6]  ; Tmy
0001fc  f0000001          AND      r0,r0,#1
000200  b968              CBNZ     r0,|L7.542|
;;;564                    {
;;;565                        if( lg_lcd_init == 1 )
000202  4896              LDR      r0,|L7.1116|
000204  7800              LDRB     r0,[r0,#0]  ; lg_lcd_init
000206  2801              CMP      r0,#1
000208  d111              BNE      |L7.558|
;;;566                        {
;;;567                            //lg_lcd_init = 2;
;;;568                            LCD_ParaInit();
00020a  f7fffffe          BL       LCD_ParaInit
;;;569                            Tmy.State.bit.InitPara = 1;
00020e  4880              LDR      r0,|L7.1040|
000210  7980              LDRB     r0,[r0,#6]  ; Tmy
000212  f0200001          BIC      r0,r0,#1
000216  1c40              ADDS     r0,r0,#1
000218  497d              LDR      r1,|L7.1040|
00021a  7188              STRB     r0,[r1,#6]
00021c  e007              B        |L7.558|
                  |L7.542|
;;;570                        }
;;;571                        //Tmy.State.bit.InitPara = 1;
;;;572                    }else //参数初始化完成
;;;573                    {
;;;574                        SetTextValue(0,26,"LCD初始化完成。");
00021e  a290              ADR      r2,|L7.1120|
000220  211a              MOVS     r1,#0x1a
000222  2000              MOVS     r0,#0
000224  f7fffffe          BL       SetTextValue
;;;575                        dg_sta = DG_INIT_DOWN;//顶杆归零
000228  2003              MOVS     r0,#3
00022a  4977              LDR      r1,|L7.1032|
00022c  7008              STRB     r0,[r1,#0]
                  |L7.558|
;;;576                    }
;;;577                    
;;;578                    break;
00022e  e29c              B        |L7.1898|
;;;579                
;;;580                case DG_INIT_UP : //上电初始化过程，顶杆不在零位，先归零，然后再先上升一小段再归零
;;;581                    
;;;582                    if( dg_sta_c != dg_sta )
000230  4875              LDR      r0,|L7.1032|
000232  7800              LDRB     r0,[r0,#0]  ; dg_sta
000234  4284              CMP      r4,r0
000236  d006              BEQ      |L7.582|
;;;583                    {
;;;584                        dg_sta_c = dg_sta;
000238  4873              LDR      r0,|L7.1032|
00023a  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;585                        SetTextValue(0,26,"检测归零传感器,上升...");
00023c  a28c              ADR      r2,|L7.1136|
00023e  211a              MOVS     r1,#0x1a
000240  2000              MOVS     r0,#0
000242  f7fffffe          BL       SetTextValue
                  |L7.582|
;;;586                    }
;;;587                    
;;;588                    if( !Tmy.Sensor.bit.bottom )//检测离开底部
000246  4872              LDR      r0,|L7.1040|
000248  79c0              LDRB     r0,[r0,#7]  ; Tmy
00024a  f0000001          AND      r0,r0,#1
00024e  b910              CBNZ     r0,|L7.598|
;;;589                    {
;;;590                        dg_sta = DG_INIT_DOWN;//再次复位
000250  2003              MOVS     r0,#3
000252  496d              LDR      r1,|L7.1032|
000254  7008              STRB     r0,[r1,#0]
                  |L7.598|
;;;591                    }
;;;592                    
;;;593                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
000256  486e              LDR      r0,|L7.1040|
000258  7800              LDRB     r0,[r0,#0]  ; Tmy
00025a  2801              CMP      r0,#1
00025c  d00a              BEQ      |L7.628|
;;;594                    {
;;;595                        MOTOR_Stop();//步进电机停止
00025e  f7fffffe          BL       MOTOR_Stop
;;;596                        MOTOR_SetDir( UP );//方向上升
000262  2000              MOVS     r0,#0
000264  f7fffffe          BL       MOTOR_SetDir
;;;597                        MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度 XXX
000268  2086              MOVS     r0,#0x86
00026a  f7fffffe          BL       MOTOR_SetSpeed
;;;598                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
00026e  2001              MOVS     r0,#1
000270  4967              LDR      r1,|L7.1040|
000272  7008              STRB     r0,[r1,#0]
                  |L7.628|
;;;599                    }else //步进电机在上升
;;;600                    {
;;;601    //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;602    //                    {
;;;603    //                        dg_sta = DG_STOP;//停止
;;;604    //                    }
;;;605                    }
;;;606                    
;;;607                    break;
000274  e279              B        |L7.1898|
;;;608                case DG_INIT_DOWN : //上电初始化过程，顶杆不在零位，先归零，然后再先上升一小段再归零
;;;609                    
;;;610                    if( dg_sta_c != dg_sta )
000276  4864              LDR      r0,|L7.1032|
000278  7800              LDRB     r0,[r0,#0]  ; dg_sta
00027a  4284              CMP      r4,r0
00027c  d006              BEQ      |L7.652|
;;;611                    {
;;;612                        dg_sta_c = dg_sta;
00027e  4862              LDR      r0,|L7.1032|
000280  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;613                        SetTextValue(0,26,"顶杆归零...");
000282  a281              ADR      r2,|L7.1160|
000284  211a              MOVS     r1,#0x1a
000286  2000              MOVS     r0,#0
000288  f7fffffe          BL       SetTextValue
                  |L7.652|
;;;614                    }
;;;615                    
;;;616                    if( key_v == ZERO_DETECT )//检测到触底
00028c  2e1d              CMP      r6,#0x1d
00028e  d10f              BNE      |L7.688|
;;;617                    {
;;;618                        Tmy.Sensor.bit.bottom = 1;
000290  485f              LDR      r0,|L7.1040|
000292  79c0              LDRB     r0,[r0,#7]  ; Tmy
000294  f0200001          BIC      r0,r0,#1
000298  1c40              ADDS     r0,r0,#1
00029a  495d              LDR      r1,|L7.1040|
00029c  71c8              STRB     r0,[r1,#7]
;;;619        		        MOTOR_Stop();
00029e  f7fffffe          BL       MOTOR_Stop
;;;620        		        Motor.counter_step = 0;
0002a2  2000              MOVS     r0,#0
0002a4  4956              LDR      r1,|L7.1024|
0002a6  6048              STR      r0,[r1,#4]  ; Motor
;;;621        		        SetTextValue(0,18,"已触底");
0002a8  a27a              ADR      r2,|L7.1172|
0002aa  2112              MOVS     r1,#0x12
0002ac  f7fffffe          BL       SetTextValue
                  |L7.688|
;;;622                    }
;;;623                    
;;;624                    if( Tmy.Sensor.bit.bottom )//到达底部
0002b0  4857              LDR      r0,|L7.1040|
0002b2  79c0              LDRB     r0,[r0,#7]  ; Tmy
0002b4  f0000001          AND      r0,r0,#1
0002b8  b1f8              CBZ      r0,|L7.762|
;;;625                    {
;;;626                        if( !count_init_down ) //第一次触底
0002ba  b95f              CBNZ     r7,|L7.724|
;;;627                        {
;;;628                            SetTextValue(0,26,"已触底");
0002bc  a275              ADR      r2,|L7.1172|
0002be  211a              MOVS     r1,#0x1a
0002c0  2000              MOVS     r0,#0
0002c2  f7fffffe          BL       SetTextValue
;;;629                            count_init_down++;
0002c6  1c78              ADDS     r0,r7,#1
0002c8  b2c7              UXTB     r7,r0
;;;630                            dg_sta = DG_INIT_UP;//上升一段
0002ca  2002              MOVS     r0,#2
0002cc  494e              LDR      r1,|L7.1032|
0002ce  7008              STRB     r0,[r1,#0]
0002d0  e022              B        |L7.792|
                  |L7.722|
0002d2  e249              B        |L7.1896|
                  |L7.724|
;;;631                        }else //第二次触底
;;;632                        {
;;;633                            SetBuzzer(100);
0002d4  2064              MOVS     r0,#0x64
0002d6  f7fffffe          BL       SetBuzzer
;;;634                            SetTextValue(0,26,"顶杆归零完成");
0002da  a270              ADR      r2,|L7.1180|
0002dc  211a              MOVS     r1,#0x1a
0002de  2000              MOVS     r0,#0
0002e0  f7fffffe          BL       SetTextValue
;;;635                            Tmy.State.bit.init = 1; //初始化完成
0002e4  484a              LDR      r0,|L7.1040|
0002e6  7980              LDRB     r0,[r0,#6]  ; Tmy
0002e8  f0200002          BIC      r0,r0,#2
0002ec  1c80              ADDS     r0,r0,#2
0002ee  4948              LDR      r1,|L7.1040|
0002f0  7188              STRB     r0,[r1,#6]
;;;636                            dg_sta = DG_STOP_BOT;//停在底部
0002f2  2005              MOVS     r0,#5
0002f4  4944              LDR      r1,|L7.1032|
0002f6  7008              STRB     r0,[r1,#0]
0002f8  e00e              B        |L7.792|
                  |L7.762|
;;;637                            //dev_sta = DEV_STANDBY;//设备待机  
;;;638                        }
;;;639                        
;;;640                    }else //未到达底部
;;;641                    {
;;;642                        if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机不是在下降
0002fa  4845              LDR      r0,|L7.1040|
0002fc  7800              LDRB     r0,[r0,#0]  ; Tmy
0002fe  2802              CMP      r0,#2
000300  d00a              BEQ      |L7.792|
;;;643                        {
;;;644                            MOTOR_Stop();//步进电机停止
000302  f7fffffe          BL       MOTOR_Stop
;;;645                            MOTOR_SetDir( DOWN );//方向下降
000306  2001              MOVS     r0,#1
000308  f7fffffe          BL       MOTOR_SetDir
;;;646                            MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度 XXX
00030c  2086              MOVS     r0,#0x86
00030e  f7fffffe          BL       MOTOR_SetSpeed
;;;647                            Tmy.Motor.state = MOTOR_DOWN;//更改步进电机状态
000312  2002              MOVS     r0,#2
000314  493e              LDR      r1,|L7.1040|
000316  7008              STRB     r0,[r1,#0]
                  |L7.792|
;;;648                        }else //步进电机在下降
;;;649                        {
;;;650        //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;651        //                    {
;;;652        //                        dg_sta = DG_STOP;//停止
;;;653        //                    }
;;;654                        }
;;;655                    }
;;;656                    break;
000318  e227              B        |L7.1898|
;;;657                
;;;658                case DG_STOP_BOT : //停留在底部
;;;659                    //触底步数归零
;;;660                    MOTOR_ClrStep( );
00031a  f7fffffe          BL       MOTOR_ClrStep
;;;661                    
;;;662                    if( dg_sta_c != dg_sta )
00031e  483a              LDR      r0,|L7.1032|
000320  7800              LDRB     r0,[r0,#0]  ; dg_sta
000322  4284              CMP      r4,r0
000324  d006              BEQ      |L7.820|
;;;663                    {
;;;664                        dg_sta_c = dg_sta;
000326  4838              LDR      r0,|L7.1032|
000328  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;665                        SetTextValue(0,26,"触底待机");
00032a  a260              ADR      r2,|L7.1196|
00032c  211a              MOVS     r1,#0x1a
00032e  2000              MOVS     r0,#0
000330  f7fffffe          BL       SetTextValue
                  |L7.820|
;;;666                    }
;;;667                    
;;;668                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
000334  4836              LDR      r0,|L7.1040|
000336  7800              LDRB     r0,[r0,#0]  ; Tmy
000338  b148              CBZ      r0,|L7.846|
;;;669                    {
;;;670                        MOTOR_Stop();//步进电机停止
00033a  f7fffffe          BL       MOTOR_Stop
;;;671                        MOTOR_SetDir( UP );//方向上升
00033e  2000              MOVS     r0,#0
000340  f7fffffe          BL       MOTOR_SetDir
;;;672                        Tmy.Motor.state = MOTOR_STOP;//更改步进电机状态
000344  2000              MOVS     r0,#0
000346  4932              LDR      r1,|L7.1040|
000348  7008              STRB     r0,[r1,#0]
;;;673                        MOTOR_ClrStep( ); //步数清零
00034a  f7fffffe          BL       MOTOR_ClrStep
                  |L7.846|
;;;674                    }
;;;675                    
;;;676                    if( key_v == PEDAL_DOWN ) //检测到踩脚踏
00034e  2e19              CMP      r6,#0x19
000350  d10b              BNE      |L7.874|
;;;677                    {
;;;678                        if( Tmy.Key.zdpk ) //自动排空
000352  482f              LDR      r0,|L7.1040|
000354  7940              LDRB     r0,[r0,#5]  ; Tmy
000356  f3c00040          UBFX     r0,r0,#1,#1
00035a  b118              CBZ      r0,|L7.868|
;;;679                        {
;;;680                           // SetTextValue(0,26,"自动排空...");
;;;681                            dg_sta = DG_ZDPK_UP;//顶杆上升
00035c  2008              MOVS     r0,#8
00035e  492a              LDR      r1,|L7.1032|
000360  7008              STRB     r0,[r1,#0]
000362  e002              B        |L7.874|
                  |L7.868|
;;;682                        }else
;;;683                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;684                        {
;;;685                            //SetTextValue(0,26,"顶杆上升...");
;;;686                            dg_sta = DG_UP;//顶杆上升
000364  2006              MOVS     r0,#6
000366  4928              LDR      r1,|L7.1032|
000368  7008              STRB     r0,[r1,#0]
                  |L7.874|
;;;687                        }
;;;688                    }
;;;689    //                if(  )//顶杆检查按键按下
;;;690    //                {
;;;691    //                    if( dev_sta == DEV_FIX )//顶杆检查
;;;692    //                    {
;;;693    //                        dg_sta = DG_FIX_UP;//顶杆检查上升
;;;694    //                    }
;;;695    //                }
;;;696                    
;;;697    //                if( key_v == PEDAL_DOWN )//检测到脚踏按下
;;;698    //                {
;;;699    //                    if( dev_sta == DEV_RUN )//设备运行状态
;;;700    //                    {
;;;701    //                        dg_sta = DG_UP;//顶杆上升
;;;702    //                    }else
;;;703    //                    if( dev_sta == DEV_FIX )//顶杆检查
;;;704    //                    {
;;;705    //                        dg_sta = DG_FIX_UP;//顶杆检查上升
;;;706    //                    }
;;;707    //                }
;;;708    
;;;709                    break;
00036a  e1fe              B        |L7.1898|
;;;710                        
;;;711                case DG_STOP : //停止
;;;712                    
;;;713                    if( dg_sta_c != dg_sta )
00036c  4826              LDR      r0,|L7.1032|
00036e  7800              LDRB     r0,[r0,#0]  ; dg_sta
000370  4284              CMP      r4,r0
000372  d006              BEQ      |L7.898|
;;;714                    {
;;;715                        dg_sta_c = dg_sta;
000374  4824              LDR      r0,|L7.1032|
000376  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;716                        SetTextValue(0,26,"待机");
000378  a24d              ADR      r2,|L7.1200|
00037a  211a              MOVS     r1,#0x1a
00037c  2000              MOVS     r0,#0
00037e  f7fffffe          BL       SetTextValue
                  |L7.898|
;;;717                    }
;;;718                    
;;;719                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
000382  4823              LDR      r0,|L7.1040|
000384  7800              LDRB     r0,[r0,#0]  ; Tmy
000386  b120              CBZ      r0,|L7.914|
;;;720                    {
;;;721                        MOTOR_Stop();//步进电机停止
000388  f7fffffe          BL       MOTOR_Stop
;;;722                        //MOTOR_SetDir( UP );//方向上升
;;;723                        Tmy.Motor.state = MOTOR_STOP;//更改步进电机状态
00038c  2000              MOVS     r0,#0
00038e  4920              LDR      r1,|L7.1040|
000390  7008              STRB     r0,[r1,#0]
                  |L7.914|
;;;724                        //MOTOR_ClrStep( ); //步数清零
;;;725                    }
;;;726                    
;;;727                    if( key_v == PEDAL_DOWN )//检测到脚踏按下
000392  2e19              CMP      r6,#0x19
000394  d105              BNE      |L7.930|
;;;728                    {
;;;729                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;730                        {
;;;731                            timer_pedal_down = 1; //开始脚踏按下计时
000396  2001              MOVS     r0,#1
000398  491e              LDR      r1,|L7.1044|
00039a  7008              STRB     r0,[r1,#0]
;;;732                            dg_sta = DG_UP;//顶杆上升
00039c  2006              MOVS     r0,#6
00039e  491a              LDR      r1,|L7.1032|
0003a0  7008              STRB     r0,[r1,#0]
                  |L7.930|
;;;733                        }
;;;734                    }//else
;;;735    //                if( key_v == PEDAL_DOWN )//检测复位键按下
;;;736    //                {
;;;737    //                    if( )//设备运行状态
;;;738    //                    {
;;;739    //                        dg_sta = DG_RESET_DOWN;//复位下降
;;;740    //                    }
;;;741    //                    ;
;;;742    //                }
;;;743                    break;
0003a2  e1e2              B        |L7.1898|
;;;744                    
;;;745                case DG_ZDPK_UP : //自动排空
;;;746                    
;;;747                    if( dg_sta_c != dg_sta )
0003a4  4818              LDR      r0,|L7.1032|
0003a6  7800              LDRB     r0,[r0,#0]  ; dg_sta
0003a8  4284              CMP      r4,r0
0003aa  d006              BEQ      |L7.954|
;;;748                    {
;;;749                        dg_sta_c = dg_sta;
0003ac  4816              LDR      r0,|L7.1032|
0003ae  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;750                        SetTextValue(0,26,"自动排空...");
0003b0  a241              ADR      r2,|L7.1208|
0003b2  211a              MOVS     r1,#0x1a
0003b4  2000              MOVS     r0,#0
0003b6  f7fffffe          BL       SetTextValue
                  |L7.954|
;;;751                    }
;;;752                    
;;;753                    if( Motor.counter_step > STEP_MAX_ZDPK ) //到达自动排空步数
0003ba  4811              LDR      r0,|L7.1024|
0003bc  6840              LDR      r0,[r0,#4]  ; Motor
0003be  f6487189          MOV      r1,#0x8f89
0003c2  4288              CMP      r0,r1
0003c4  d90b              BLS      |L7.990|
;;;754                    {
;;;755                        dg_sta = DG_STOP;//电机停止
0003c6  e007              B        |L7.984|
0003c8  e1b3              B        |L7.1842|
0003ca  e191              B        |L7.1776|
0003cc  e129              B        |L7.1570|
0003ce  e163              B        |L7.1688|
0003d0  e078              B        |L7.1220|
0003d2  e0fd              B        |L7.1488|
0003d4  e08e              B        |L7.1268|
0003d6  e0d9              B        |L7.1420|
                  |L7.984|
0003d8  2000              MOVS     r0,#0
0003da  490b              LDR      r1,|L7.1032|
0003dc  7008              STRB     r0,[r1,#0]
                  |L7.990|
;;;756                    }
;;;757                    
;;;758                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
0003de  480c              LDR      r0,|L7.1040|
0003e0  7800              LDRB     r0,[r0,#0]  ; Tmy
0003e2  2801              CMP      r0,#1
0003e4  d00a              BEQ      |L7.1020|
;;;759                    {
;;;760                        MOTOR_Stop();//步进电机停止
0003e6  f7fffffe          BL       MOTOR_Stop
;;;761                        MOTOR_SetDir( UP );//方向上升
0003ea  2000              MOVS     r0,#0
0003ec  f7fffffe          BL       MOTOR_SetDir
;;;762                        MOTOR_SetSpeed( CYCLE_ZDPK ); //设置电机速
0003f0  2086              MOVS     r0,#0x86
0003f2  f7fffffe          BL       MOTOR_SetSpeed
;;;763                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
0003f6  2001              MOVS     r0,#1
0003f8  4905              LDR      r1,|L7.1040|
0003fa  7008              STRB     r0,[r1,#0]
                  |L7.1020|
;;;764                    }else //步进电机在上升
;;;765                    {
;;;766                        ;
;;;767                    }
;;;768                    
;;;769                    break;
0003fc  e1b5              B        |L7.1898|
0003fe  0000              DCW      0x0000
                  |L7.1024|
                          DCD      Motor
                  |L7.1028|
                          DCD      dev_sta
                  |L7.1032|
                          DCD      dg_sta
                  |L7.1036|
                          DCD      timer_pedal_up
                  |L7.1040|
                          DCD      Tmy
                  |L7.1044|
                          DCD      timer_pedal_down
                  |L7.1048|
000418  d7d4b6af          DCB      215,212,182,175,184,248,210,169,200,161,207,251,0
00041c  b8f8d2a9
000420  c8a1cffb
000424  00      
000425  00                DCB      0
000426  00                DCB      0
000427  00                DCB      0
                  |L7.1064|
                          DCD      MOTOR_SPEED_INDEX
                  |L7.1068|
                          DCD      MOTOR_SPEED_CYCLE
                  |L7.1072|
                          DCD      MOTOR_SPEED_DISPLAY
                  |L7.1076|
000434  cda3d6b9          DCB      205,163,214,185,0
000438  00      
000439  00                DCB      0
00043a  00                DCB      0
00043b  00                DCB      0
                  |L7.1084|
00043c  d7d4b6af          DCB      215,212,182,175,184,248,210,169,"...",0
000440  b8f8d2a9
000444  2e2e2e00
                  |L7.1096|
000448  613a2f73          DCB      "a:/sounds/zdgy.mp3",0
00044c  6f756e64
000450  732f7a64
000454  67792e6d
000458  703300  
00045b  00                DCB      0
                  |L7.1116|
                          DCD      lg_lcd_init
                  |L7.1120|
000460  4c4344b3          DCB      "LCD",179,245,202,188,187,175,205,234,179,201,161,163,0
000464  f5cabcbb
000468  afcdeab3
00046c  c9a1a300
                  |L7.1136|
000470  bcecb2e2          DCB      188,236,178,226,185,233,193,227,180,171,184,208,198,247,","
000474  b9e9c1e3
000478  b4abb8d0
00047c  c6f72c  
00047f  c9cfc9fd          DCB      201,207,201,253,"...",0
000483  2e2e2e00
000487  00                DCB      0
                  |L7.1160|
000488  b6a5b8cb          DCB      182,165,184,203,185,233,193,227,"...",0
00048c  b9e9c1e3
000490  2e2e2e00
                  |L7.1172|
000494  d2d1b4a5          DCB      210,209,180,165,181,215,0
000498  b5d700  
00049b  00                DCB      0
                  |L7.1180|
00049c  b6a5b8cb          DCB      182,165,184,203,185,233,193,227,205,234,179,201,0
0004a0  b9e9c1e3
0004a4  cdeab3c9
0004a8  00      
0004a9  00                DCB      0
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L7.1196|
0004ac  b4a5b5d7          DCB      180,165,181,215
                  |L7.1200|
0004b0  b4fdbbfa          DCB      180,253,187,250,0
0004b4  00      
0004b5  00                DCB      0
0004b6  00                DCB      0
0004b7  00                DCB      0
                  |L7.1208|
0004b8  d7d4b6af          DCB      215,212,182,175,197,197,191,213,"...",0
0004bc  c5c5bfd5
0004c0  2e2e2e00
                  |L7.1220|
;;;770                
;;;771                case DG_ECPK_UP : //二次排空
;;;772                    
;;;773                    if( Motor.counter_step > STEP_MAX_ECPK ) //到达自动排空步数
0004c4  48aa              LDR      r0,|L7.1904|
0004c6  6840              LDR      r0,[r0,#4]  ; Motor
0004c8  f5b05f4d          CMP      r0,#0x3340
0004cc  d902              BLS      |L7.1236|
;;;774                    {
;;;775                        dg_sta = DG_STOP;//电机停止
0004ce  2000              MOVS     r0,#0
0004d0  49a8              LDR      r1,|L7.1908|
0004d2  7008              STRB     r0,[r1,#0]
                  |L7.1236|
;;;776                    }
;;;777                    
;;;778                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
0004d4  48a8              LDR      r0,|L7.1912|
0004d6  7800              LDRB     r0,[r0,#0]  ; Tmy
0004d8  2801              CMP      r0,#1
0004da  d00a              BEQ      |L7.1266|
;;;779                    {
;;;780                        MOTOR_Stop();//步进电机停止
0004dc  f7fffffe          BL       MOTOR_Stop
;;;781                        MOTOR_SetDir( UP );//方向上升
0004e0  2000              MOVS     r0,#0
0004e2  f7fffffe          BL       MOTOR_SetDir
;;;782                        MOTOR_SetSpeed( CYCLE_ZDPK ); //设置电机速度 XXX
0004e6  2086              MOVS     r0,#0x86
0004e8  f7fffffe          BL       MOTOR_SetSpeed
;;;783                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
0004ec  2001              MOVS     r0,#1
0004ee  49a2              LDR      r1,|L7.1912|
0004f0  7008              STRB     r0,[r1,#0]
                  |L7.1266|
;;;784                    }else //步进电机在上升
;;;785                    {
;;;786                        ;
;;;787                    }
;;;788                    
;;;789                    break;
0004f2  e13a              B        |L7.1898|
                  |L7.1268|
;;;790                    
;;;791                case DG_UP : //顶杆上升
;;;792                    
;;;793                    if( dg_sta_c != dg_sta )
0004f4  489f              LDR      r0,|L7.1908|
0004f6  7800              LDRB     r0,[r0,#0]  ; dg_sta
0004f8  4284              CMP      r4,r0
0004fa  d006              BEQ      |L7.1290|
;;;794                    {
;;;795                        dg_sta_c = dg_sta;
0004fc  489d              LDR      r0,|L7.1908|
0004fe  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;796                        SetTextValue(0,26,"顶杆上升...");
000500  a29e              ADR      r2,|L7.1916|
000502  211a              MOVS     r1,#0x1a
000504  2000              MOVS     r0,#0
000506  f7fffffe          BL       SetTextValue
                  |L7.1290|
;;;797                    }
;;;798                    
;;;799                    if( ( Motor.counter_step >= Motor.max_step ) //到达顶部
00050a  4899              LDR      r0,|L7.1904|
00050c  6840              LDR      r0,[r0,#4]  ; Motor
00050e  4998              LDR      r1,|L7.1904|
000510  6889              LDR      r1,[r1,#8]  ; Motor
000512  4288              CMP      r0,r1
000514  d204              BCS      |L7.1312|
;;;800                     || ( Tmy.Sensor.bit.top ) )
000516  4898              LDR      r0,|L7.1912|
000518  79c0              LDRB     r0,[r0,#7]  ; Tmy
00051a  f3c00040          UBFX     r0,r0,#1,#1
00051e  b128              CBZ      r0,|L7.1324|
                  |L7.1312|
;;;801                    {
;;;802                        MOTOR_Stop();//这个是冗余操作，多一次保护
000520  f7fffffe          BL       MOTOR_Stop
;;;803                        dg_sta = DG_STOP_TOP;//停留在顶部
000524  2004              MOVS     r0,#4
000526  4993              LDR      r1,|L7.1908|
000528  7008              STRB     r0,[r1,#0]
00052a  e02e              B        |L7.1418|
                  |L7.1324|
;;;804                    }else
;;;805                    {
;;;806                        if( Tmy.Motor.state != MOTOR_UP ) //步进电机未上升
00052c  4892              LDR      r0,|L7.1912|
00052e  7800              LDRB     r0,[r0,#0]  ; Tmy
000530  2801              CMP      r0,#1
000532  d02a              BEQ      |L7.1418|
;;;807                        {
;;;808                            Motor.speed = 1;
000534  2001              MOVS     r0,#1
000536  498e              LDR      r1,|L7.1904|
000538  7008              STRB     r0,[r1,#0]
;;;809                            tem8 = MOTOR_SPEED_INDEX[Motor.gear][Motor.speed-1];
00053a  4608              MOV      r0,r1
00053c  7840              LDRB     r0,[r0,#1]  ; Motor
00053e  eb000040          ADD      r0,r0,r0,LSL #1
000542  4991              LDR      r1,|L7.1928|
000544  eb010140          ADD      r1,r1,r0,LSL #1
000548  4889              LDR      r0,|L7.1904|
00054a  7800              LDRB     r0,[r0,#0]  ; Motor
00054c  1e40              SUBS     r0,r0,#1
00054e  f8115010          LDRB     r5,[r1,r0,LSL #1]
;;;810            	            Tmy.speed = tem8;
000552  4889              LDR      r0,|L7.1912|
000554  7105              STRB     r5,[r0,#4]
;;;811            	             
;;;812            	            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度
000556  498d              LDR      r1,|L7.1932|
000558  f8310015          LDRH     r0,[r1,r5,LSL #1]
00055c  f7fffffe          BL       MOTOR_SetSpeed
;;;813            	            SetTextValue(0, 16, &MOTOR_SPEED_DISPLAY[tem8][0]); 
000560  eb0500c5          ADD      r0,r5,r5,LSL #3
000564  498a              LDR      r1,|L7.1936|
000566  1842              ADDS     r2,r0,r1
000568  2110              MOVS     r1,#0x10
00056a  2000              MOVS     r0,#0
00056c  f7fffffe          BL       SetTextValue
;;;814        	            
;;;815                            MOTOR_Stop(); //电机暂停
000570  f7fffffe          BL       MOTOR_Stop
;;;816                            MOTOR_SetDir( UP ); //设置电机方向
000574  2000              MOVS     r0,#0
000576  f7fffffe          BL       MOTOR_SetDir
;;;817                            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度，运行
00057a  4984              LDR      r1,|L7.1932|
00057c  f8310015          LDRH     r0,[r1,r5,LSL #1]
000580  f7fffffe          BL       MOTOR_SetSpeed
;;;818                            
;;;819                            //SetTextValue(0,18,"顶杆检查上升"); //更新提示
;;;820                        
;;;821                            Tmy.Motor.state = MOTOR_UP;//
000584  2001              MOVS     r0,#1
000586  497c              LDR      r1,|L7.1912|
000588  7008              STRB     r0,[r1,#0]
                  |L7.1418|
;;;822                        }
;;;823                    }
;;;824                    
;;;825    //                if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
;;;826    //                {
;;;827    //                    MOTOR_Stop();//步进电机停止
;;;828    //                    MOTOR_SetDir( UP );//方向上升
;;;829    //                    MOTOR_SetSpeed( CYCLE_KSJ ); //设置电机速度 XXX
;;;830    //                    Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
;;;831    //                }else //步进电机在上升
;;;832    //                {
;;;833    //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;834    //                    {
;;;835    //                        dg_sta = DG_STOP;//停止
;;;836    //                    }
;;;837    //                }
;;;838                    
;;;839                    break;
00058a  e0ee              B        |L7.1898|
                  |L7.1420|
;;;840                
;;;841                case DG_STOP_TOP : //停留在顶部
;;;842                    
;;;843                    if( dg_sta_c != dg_sta )
00058c  4879              LDR      r0,|L7.1908|
00058e  7800              LDRB     r0,[r0,#0]  ; dg_sta
000590  4284              CMP      r4,r0
000592  d006              BEQ      |L7.1442|
;;;844                    {
;;;845                        dg_sta_c = dg_sta;
000594  4877              LDR      r0,|L7.1908|
000596  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;846                        SetTextValue(0,26,"到顶停机待机");
000598  a27e              ADR      r2,|L7.1940|
00059a  211a              MOVS     r1,#0x1a
00059c  2000              MOVS     r0,#0
00059e  f7fffffe          BL       SetTextValue
                  |L7.1442|
;;;847                    }
;;;848                    
;;;849                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
0005a2  4875              LDR      r0,|L7.1912|
0005a4  7800              LDRB     r0,[r0,#0]  ; Tmy
0005a6  b138              CBZ      r0,|L7.1464|
;;;850                    {
;;;851                        MOTOR_Stop();//电机暂停
0005a8  f7fffffe          BL       MOTOR_Stop
;;;852                        MOTOR_SetDir( DOWN ); //方向下降
0005ac  2001              MOVS     r0,#1
0005ae  f7fffffe          BL       MOTOR_SetDir
;;;853                        Tmy.Motor.state = MOTOR_STOP;//更改电机状态
0005b2  2000              MOVS     r0,#0
0005b4  4970              LDR      r1,|L7.1912|
0005b6  7008              STRB     r0,[r1,#0]
                  |L7.1464|
;;;854                    }
;;;855                    
;;;856                    if( key_v == PEDAL_DOWN ) //检测到踩脚踏 // || ( key_v == PEDAL_DOWN ) ) //或 按复位键
0005b8  2e19              CMP      r6,#0x19
0005ba  d108              BNE      |L7.1486|
;;;857                    {
;;;858                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;859                        {
;;;860                            SetTextValue(0,26,"顶杆归零...");
0005bc  f2af1238          ADR      r2,|L7.1160|
0005c0  211a              MOVS     r1,#0x1a
0005c2  2000              MOVS     r0,#0
0005c4  f7fffffe          BL       SetTextValue
;;;861                            dg_sta = DG_FIX_DOWN;//顶杆归零
0005c8  200f              MOVS     r0,#0xf
0005ca  496a              LDR      r1,|L7.1908|
0005cc  7008              STRB     r0,[r1,#0]
                  |L7.1486|
;;;862                        }
;;;863                    }
;;;864                    
;;;865    				if( 1 )//在xxx速度下，到顶后自动归零
;;;866    				{
;;;867    					;
;;;868    				}
;;;869    				
;;;870                    break;
0005ce  e0cc              B        |L7.1898|
                  |L7.1488|
;;;871                    
;;;872                case DG_DOWN : //顶杆下降 可能没有此状态！！！
;;;873                    
;;;874                    if( dg_sta_c != dg_sta )
0005d0  4868              LDR      r0,|L7.1908|
0005d2  7800              LDRB     r0,[r0,#0]  ; dg_sta
0005d4  4284              CMP      r4,r0
0005d6  d006              BEQ      |L7.1510|
;;;875                    {
;;;876                        dg_sta_c = dg_sta;
0005d8  4866              LDR      r0,|L7.1908|
0005da  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;877                        SetTextValue(0,26,"顶杆下降...");
0005dc  a271              ADR      r2,|L7.1956|
0005de  211a              MOVS     r1,#0x1a
0005e0  2000              MOVS     r0,#0
0005e2  f7fffffe          BL       SetTextValue
                  |L7.1510|
;;;878                    }
;;;879                    
;;;880                    if(Tmy.Sensor.bit.bottom) //到达底部
0005e6  4864              LDR      r0,|L7.1912|
0005e8  79c0              LDRB     r0,[r0,#7]  ; Tmy
0005ea  f0000001          AND      r0,r0,#1
0005ee  b110              CBZ      r0,|L7.1526|
;;;881                    {
;;;882                        dg_sta = DG_STOP_TOP;//停留在底部
0005f0  2004              MOVS     r0,#4
0005f2  4960              LDR      r1,|L7.1908|
0005f4  7008              STRB     r0,[r1,#0]
                  |L7.1526|
;;;883                    }
;;;884                    
;;;885                    if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机不是在下降
0005f6  4860              LDR      r0,|L7.1912|
0005f8  7800              LDRB     r0,[r0,#0]  ; Tmy
0005fa  2802              CMP      r0,#2
0005fc  d00b              BEQ      |L7.1558|
;;;886                    {
;;;887                        MOTOR_Stop();//步进电机停止
0005fe  f7fffffe          BL       MOTOR_Stop
;;;888                        MOTOR_SetDir( DOWN );//方向上升
000602  2001              MOVS     r0,#1
000604  f7fffffe          BL       MOTOR_SetDir
;;;889                        MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度 XXX
000608  2026              MOVS     r0,#0x26
00060a  f7fffffe          BL       MOTOR_SetSpeed
;;;890                        Tmy.Motor.state = MOTOR_DOWN;//更改步进电机状态
00060e  2002              MOVS     r0,#2
000610  4959              LDR      r1,|L7.1912|
000612  7008              STRB     r0,[r1,#0]
000614  e004              B        |L7.1568|
                  |L7.1558|
;;;891                    }else //步进电机在下降
;;;892                    {
;;;893                        if( key_v == PEDAL_UP )//检测到脚踏抬起
000616  2e1a              CMP      r6,#0x1a
000618  d102              BNE      |L7.1568|
;;;894                        {
;;;895                            dg_sta = DG_STOP;//停止
00061a  2000              MOVS     r0,#0
00061c  4955              LDR      r1,|L7.1908|
00061e  7008              STRB     r0,[r1,#0]
                  |L7.1568|
;;;896                        }
;;;897                    }
;;;898                    break;
000620  e0a3              B        |L7.1898|
                  |L7.1570|
;;;899                    
;;;900                case DG_HX_DOWN : //回吸下降
;;;901    			
;;;902                    if( dg_sta_c != dg_sta )
000622  4854              LDR      r0,|L7.1908|
000624  7800              LDRB     r0,[r0,#0]  ; dg_sta
000626  4284              CMP      r4,r0
000628  d006              BEQ      |L7.1592|
;;;903                    {
;;;904                        dg_sta_c = dg_sta;
00062a  4852              LDR      r0,|L7.1908|
00062c  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;905                        SetTextValue(0,26,"回吸下降...");
00062e  a260              ADR      r2,|L7.1968|
000630  211a              MOVS     r1,#0x1a
000632  2000              MOVS     r0,#0
000634  f7fffffe          BL       SetTextValue
                  |L7.1592|
;;;906                    }
;;;907                    
;;;908                    if( Motor.counter_step < Motor.counter_hx_step-1 )//到达回吸底部
000638  484d              LDR      r0,|L7.1904|
00063a  6841              LDR      r1,[r0,#4]  ; Motor
00063c  68c0              LDR      r0,[r0,#0xc]  ; Motor
00063e  1e40              SUBS     r0,r0,#1
000640  4281              CMP      r1,r0
000642  d214              BCS      |L7.1646|
;;;909                    {
;;;910                        MOTOR_Stop();//电机停止
000644  f7fffffe          BL       MOTOR_Stop
;;;911                        Motor.counter_hx_step = Motor.counter_step + Motor.max_hx_step;
000648  4849              LDR      r0,|L7.1904|
00064a  6840              LDR      r0,[r0,#4]  ; Motor
00064c  4948              LDR      r1,|L7.1904|
00064e  6909              LDR      r1,[r1,#0x10]  ; Motor
000650  4408              ADD      r0,r0,r1
000652  4947              LDR      r1,|L7.1904|
000654  60c8              STR      r0,[r1,#0xc]  ; Motor
;;;912                        
;;;913                        if( Tmy.speed == SLOW )   //常慢速
000656  4848              LDR      r0,|L7.1912|
000658  7900              LDRB     r0,[r0,#4]  ; Tmy
00065a  2801              CMP      r0,#1
00065c  d103              BNE      |L7.1638|
;;;914                        {
;;;915                            vTaskDelay(pdMS_TO_TICKS(1000));//延时1秒
00065e  f44f707a          MOV      r0,#0x3e8
000662  f7fffffe          BL       vTaskDelay
                  |L7.1638|
;;;916                        }
;;;917                        dg_sta = DG_HX_UP;//
000666  200a              MOVS     r0,#0xa
000668  4942              LDR      r1,|L7.1908|
00066a  7008              STRB     r0,[r1,#0]
00066c  e013              B        |L7.1686|
                  |L7.1646|
;;;918                    }else
;;;919                    {
;;;920                        if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机未下降
00066e  4842              LDR      r0,|L7.1912|
000670  7800              LDRB     r0,[r0,#0]  ; Tmy
000672  2802              CMP      r0,#2
000674  d00f              BEQ      |L7.1686|
;;;921                        {
;;;922                            MOTOR_Stop(); //电机暂停
000676  f7fffffe          BL       MOTOR_Stop
;;;923                            MOTOR_SetDir( DOWN ); //设置电机方向
00067a  2001              MOVS     r0,#1
00067c  f7fffffe          BL       MOTOR_SetDir
;;;924                            MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度，运行
000680  2086              MOVS     r0,#0x86
000682  f7fffffe          BL       MOTOR_SetSpeed
;;;925                            SetTextValue(0,18,"回吸下降"); //更新提示
000686  a24d              ADR      r2,|L7.1980|
000688  2112              MOVS     r1,#0x12
00068a  2000              MOVS     r0,#0
00068c  f7fffffe          BL       SetTextValue
;;;926                            Tmy.Motor.state = MOTOR_DOWN;//
000690  2002              MOVS     r0,#2
000692  4939              LDR      r1,|L7.1912|
000694  7008              STRB     r0,[r1,#0]
                  |L7.1686|
;;;927                        }
;;;928                    }
;;;929                    
;;;930    //	            if( Motor.counter_step > Motor.counter_hx_step ) //
;;;931    //	            {
;;;932    //	                ;//行进中
;;;933    //	            }else //到达回吸底部
;;;934    //	            {
;;;935    //	                MOTOR_Stop();
;;;936    //	                dg_sta = DG_HX_UP;//
;;;937    //                    Motor.counter_hx_step = Motor.counter_step + Motor.max_hx_step;
;;;938    //                    MOTOR_SetDir( UP );
;;;939    //	                MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度
;;;940    //                    SetTextValue(0,18,"回吸上升");
;;;941    //                    if( Tmy.speed == SLOW )   //常慢速
;;;942    //                    {
;;;943    //                        vTaskDelay(pdMS_TO_TICKS(1000));//延时1秒
;;;944    //                    }
;;;945    //	            }
;;;946    	            
;;;947    	            break;
000696  e068              B        |L7.1898|
                  |L7.1688|
;;;948    	            
;;;949    	        case DG_HX_UP : //回吸上升
;;;950    	            
;;;951    	            if( dg_sta_c != dg_sta )
000698  4836              LDR      r0,|L7.1908|
00069a  7800              LDRB     r0,[r0,#0]  ; dg_sta
00069c  4284              CMP      r4,r0
00069e  d006              BEQ      |L7.1710|
;;;952                    {
;;;953                        dg_sta_c = dg_sta;
0006a0  4834              LDR      r0,|L7.1908|
0006a2  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;954                        SetTextValue(0,26,"回吸上升...");
0006a4  a248              ADR      r2,|L7.1992|
0006a6  211a              MOVS     r1,#0x1a
0006a8  2000              MOVS     r0,#0
0006aa  f7fffffe          BL       SetTextValue
                  |L7.1710|
;;;955                    }
;;;956                    
;;;957                    if( Motor.counter_step > Motor.counter_hx_step-1 )//到达回吸顶部
0006ae  4830              LDR      r0,|L7.1904|
0006b0  6841              LDR      r1,[r0,#4]  ; Motor
0006b2  68c0              LDR      r0,[r0,#0xc]  ; Motor
0006b4  1e40              SUBS     r0,r0,#1
0006b6  4281              CMP      r1,r0
0006b8  d905              BLS      |L7.1734|
;;;958                    {
;;;959                        MOTOR_Stop(); //电机停止
0006ba  f7fffffe          BL       MOTOR_Stop
;;;960                        //Tmy.state.bit.hx = 0;
;;;961                        dg_sta = DG_STOP; //
0006be  2000              MOVS     r0,#0
0006c0  492c              LDR      r1,|L7.1908|
0006c2  7008              STRB     r0,[r1,#0]
0006c4  e013              B        |L7.1774|
                  |L7.1734|
;;;962                    }else
;;;963                    {
;;;964                        if( Tmy.Motor.state != MOTOR_UP ) //步进电机未下降
0006c6  482c              LDR      r0,|L7.1912|
0006c8  7800              LDRB     r0,[r0,#0]  ; Tmy
0006ca  2801              CMP      r0,#1
0006cc  d00f              BEQ      |L7.1774|
;;;965                        {
;;;966                            MOTOR_Stop(); //电机暂停
0006ce  f7fffffe          BL       MOTOR_Stop
;;;967                            MOTOR_SetDir( UP ); //设置电机方向
0006d2  2000              MOVS     r0,#0
0006d4  f7fffffe          BL       MOTOR_SetDir
;;;968                            MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度，运行
0006d8  2086              MOVS     r0,#0x86
0006da  f7fffffe          BL       MOTOR_SetSpeed
;;;969                            SetTextValue(0,18,"回吸上升"); //更新提示
0006de  a23d              ADR      r2,|L7.2004|
0006e0  2112              MOVS     r1,#0x12
0006e2  2000              MOVS     r0,#0
0006e4  f7fffffe          BL       SetTextValue
;;;970                            Tmy.Motor.state = MOTOR_UP;//
0006e8  2001              MOVS     r0,#1
0006ea  4923              LDR      r1,|L7.1912|
0006ec  7008              STRB     r0,[r1,#0]
                  |L7.1774|
;;;971                        }
;;;972                    }
;;;973                    
;;;974    //	            if( Motor.counter_step < Motor.counter_hx_step ) 
;;;975    //	            {
;;;976    //	                ;//行进中
;;;977    //	            }else //到达回吸顶部
;;;978    //	            {
;;;979    //	                MOTOR_Stop();
;;;980    //	                Tmy.state.bit.hx = 0;
;;;981    //	                Tmy.work_state = STA_STANDBY;
;;;982    //	            }
;;;983    	            
;;;984    	            break;
0006ee  e03c              B        |L7.1898|
                  |L7.1776|
;;;985    	            
;;;986                case DG_FIX_UP : //顶杆检查上升
;;;987                    
;;;988                    if( ( Motor.counter_step >= Motor.max_step ) //到达顶部
0006f0  481f              LDR      r0,|L7.1904|
0006f2  6840              LDR      r0,[r0,#4]  ; Motor
0006f4  491e              LDR      r1,|L7.1904|
0006f6  6889              LDR      r1,[r1,#8]  ; Motor
0006f8  4288              CMP      r0,r1
0006fa  d204              BCS      |L7.1798|
;;;989                     || ( Tmy.Sensor.bit.top ) )
0006fc  481e              LDR      r0,|L7.1912|
0006fe  79c0              LDRB     r0,[r0,#7]  ; Tmy
000700  f3c00040          UBFX     r0,r0,#1,#1
000704  b128              CBZ      r0,|L7.1810|
                  |L7.1798|
;;;990                    {
;;;991                        MOTOR_Stop();//这个是冗余操作，多一次保护
000706  f7fffffe          BL       MOTOR_Stop
;;;992                        dg_sta = DG_STOP_TOP;//停留在顶部
00070a  2004              MOVS     r0,#4
00070c  4919              LDR      r1,|L7.1908|
00070e  7008              STRB     r0,[r1,#0]
000710  e00e              B        |L7.1840|
                  |L7.1810|
;;;993                    }else
;;;994                    {
;;;995                        if( Tmy.Motor.state != MOTOR_UP ) //步进电机未上升
000712  4819              LDR      r0,|L7.1912|
000714  7800              LDRB     r0,[r0,#0]  ; Tmy
000716  2801              CMP      r0,#1
000718  d00a              BEQ      |L7.1840|
;;;996                        {
;;;997                            MOTOR_Stop(); //电机暂停
00071a  f7fffffe          BL       MOTOR_Stop
;;;998                            MOTOR_SetDir( UP ); //设置电机方向
00071e  2000              MOVS     r0,#0
000720  f7fffffe          BL       MOTOR_SetDir
;;;999                            MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度，运行
000724  2026              MOVS     r0,#0x26
000726  f7fffffe          BL       MOTOR_SetSpeed
;;;1000                           //SetTextValue(0,18,"顶杆检查上升"); //更新提示
;;;1001                       
;;;1002                           Tmy.Motor.state = MOTOR_UP;//
00072a  2001              MOVS     r0,#1
00072c  4912              LDR      r1,|L7.1912|
00072e  7008              STRB     r0,[r1,#0]
                  |L7.1840|
;;;1003                       }
;;;1004                   }
;;;1005                   
;;;1006                   break;
000730  e01b              B        |L7.1898|
                  |L7.1842|
;;;1007                   
;;;1008               case DG_FIX_DOWN : //顶杆检查下降
;;;1009                   
;;;1010                   if( Tmy.Sensor.bit.bottom )//检测到底
000732  4811              LDR      r0,|L7.1912|
000734  79c0              LDRB     r0,[r0,#7]  ; Tmy
000736  f0000001          AND      r0,r0,#1
00073a  b128              CBZ      r0,|L7.1864|
;;;1011                   {
;;;1012                       MOTOR_Stop();//这个是冗余操作，多一次保护
00073c  f7fffffe          BL       MOTOR_Stop
;;;1013                       dg_sta = DG_STOP_BOT;//
000740  2005              MOVS     r0,#5
000742  490c              LDR      r1,|L7.1908|
000744  7008              STRB     r0,[r1,#0]
000746  e00e              B        |L7.1894|
                  |L7.1864|
;;;1014                   }else
;;;1015                   {
;;;1016                       if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机未下降
000748  480b              LDR      r0,|L7.1912|
00074a  7800              LDRB     r0,[r0,#0]  ; Tmy
00074c  2802              CMP      r0,#2
00074e  d00a              BEQ      |L7.1894|
;;;1017                       {
;;;1018                           MOTOR_Stop(); //电机暂停
000750  f7fffffe          BL       MOTOR_Stop
;;;1019                           MOTOR_SetDir( DOWN ); //设置电机方向
000754  2001              MOVS     r0,#1
000756  f7fffffe          BL       MOTOR_SetDir
;;;1020                           MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度，运行
00075a  2026              MOVS     r0,#0x26
00075c  f7fffffe          BL       MOTOR_SetSpeed
;;;1021                           //SetTextValue(0,18,"顶杆检查下降"); //更新提示
;;;1022                       
;;;1023                           Tmy.Motor.state = MOTOR_DOWN;//
000760  2002              MOVS     r0,#2
000762  4905              LDR      r1,|L7.1912|
000764  7008              STRB     r0,[r1,#0]
                  |L7.1894|
;;;1024                       }
;;;1025                   }
;;;1026                   
;;;1027                   break;
000766  e000              B        |L7.1898|
                  |L7.1896|
;;;1028               
;;;1029               default : 
;;;1030                   break;
000768  bf00              NOP      
                  |L7.1898|
00076a  bf00              NOP                            ;578
                  |L7.1900|
00076c  e45d              B        |L7.42|
;;;1031           }
;;;1032           
;;;1033       }
;;;1034   }
;;;1035   
                          ENDP

00076e  0000              DCW      0x0000
                  |L7.1904|
                          DCD      Motor
                  |L7.1908|
                          DCD      dg_sta
                  |L7.1912|
                          DCD      Tmy
                  |L7.1916|
00077c  b6a5b8cb          DCB      182,165,184,203,201,207,201,253,"...",0
000780  c9cfc9fd
000784  2e2e2e00
                  |L7.1928|
                          DCD      MOTOR_SPEED_INDEX
                  |L7.1932|
                          DCD      MOTOR_SPEED_CYCLE
                  |L7.1936|
                          DCD      MOTOR_SPEED_DISPLAY
                  |L7.1940|
000794  b5bdb6a5          DCB      181,189,182,165,205,163,187,250,180,253,187,250,0
000798  cda3bbfa
00079c  b4fdbbfa
0007a0  00      
0007a1  00                DCB      0
0007a2  00                DCB      0
0007a3  00                DCB      0
                  |L7.1956|
0007a4  b6a5b8cb          DCB      182,165,184,203,207,194,189,181,"...",0
0007a8  cfc2bdb5
0007ac  2e2e2e00
                  |L7.1968|
0007b0  bbd8cefc          DCB      187,216,206,252,207,194,189,181,"...",0
0007b4  cfc2bdb5
0007b8  2e2e2e00
                  |L7.1980|
0007bc  bbd8cefc          DCB      187,216,206,252,207,194,189,181,0
0007c0  cfc2bdb5
0007c4  00      
0007c5  00                DCB      0
0007c6  00                DCB      0
0007c7  00                DCB      0
                  |L7.1992|
0007c8  bbd8cefc          DCB      187,216,206,252,201,207,201,253,"...",0
0007cc  c9cfc9fd
0007d0  2e2e2e00
                  |L7.2004|
0007d4  bbd8cefc          DCB      187,216,206,252,201,207,201,253,0
0007d8  c9cfc9fd
0007dc  00      
0007dd  00                DCB      0
0007de  00                DCB      0
0007df  00                DCB      0

                          AREA ||i.vTaskSensor||, CODE, READONLY, ALIGN=2

                  vTaskSensor PROC
;;;230    */
;;;231    static void vTaskSensor(void *pvParameters)
000000  2400              MOVS     r4,#0
;;;232    {
;;;233    	uint8_t tem8 = 0;
;;;234    	
;;;235    //    SoftWdtInit( vTaskSensor_ID, 10 );
;;;236        
;;;237        //timer_sensor = 4;
;;;238        while( 1 )
000002  e07b              B        |L8.252|
                  |L8.4|
;;;239        {
;;;240    //        SoftWdtFed( vTaskSensor_ID );
;;;241            
;;;242            //vTaskDelay( pdMS_TO_TICKS(1000) );//
;;;243            vTaskDelay( 2 );
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       vTaskDelay
;;;244            
;;;245            ADC1_GetV();
00000a  f7fffffe          BL       ADC1_GetV
;;;246            //Tmy.pressure = HX711_Read();
;;;247            
;;;248            //bsp_KeyScan();
;;;249            if( tem8 != Tmy.Sensor.bit.bottom )
00000e  483c              LDR      r0,|L8.256|
000010  79c0              LDRB     r0,[r0,#7]  ; Tmy
000012  f0000001          AND      r0,r0,#1
000016  42a0              CMP      r0,r4
000018  d013              BEQ      |L8.66|
;;;250            {
;;;251                tem8 = Tmy.Sensor.bit.bottom;
00001a  4839              LDR      r0,|L8.256|
00001c  79c0              LDRB     r0,[r0,#7]  ; Tmy
00001e  f0000401          AND      r4,r0,#1
;;;252                
;;;253                if( Tmy.Sensor.bit.bottom ) //触底检测
000022  4837              LDR      r0,|L8.256|
000024  79c0              LDRB     r0,[r0,#7]  ; Tmy
000026  f0000001          AND      r0,r0,#1
00002a  b128              CBZ      r0,|L8.56|
;;;254                {
;;;255                    SetTextValue(0,29,"已触底"); //已触底
00002c  a235              ADR      r2,|L8.260|
00002e  211d              MOVS     r1,#0x1d
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       SetTextValue
000036  e004              B        |L8.66|
                  |L8.56|
;;;256                }else
;;;257                {
;;;258                    SetTextValue(0,29,"未触底"); //未触底
000038  a234              ADR      r2,|L8.268|
00003a  211d              MOVS     r1,#0x1d
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       SetTextValue
                  |L8.66|
;;;259                }
;;;260            }
;;;261            
;;;262            if( bsp_GetKeyState( KID_ZERO ) ) //触底检测
000042  2009              MOVS     r0,#9
000044  f7fffffe          BL       bsp_GetKeyState
000048  b130              CBZ      r0,|L8.88|
;;;263            {
;;;264                Tmy.Sensor.bit.bottom = 0; //未触底
00004a  482d              LDR      r0,|L8.256|
00004c  79c0              LDRB     r0,[r0,#7]  ; Tmy
00004e  f0200001          BIC      r0,r0,#1
000052  492b              LDR      r1,|L8.256|
000054  71c8              STRB     r0,[r1,#7]
000056  e006              B        |L8.102|
                  |L8.88|
;;;265            }else
;;;266            {
;;;267                Tmy.Sensor.bit.bottom = 1; //已触底
000058  4829              LDR      r0,|L8.256|
00005a  79c0              LDRB     r0,[r0,#7]  ; Tmy
00005c  f0200001          BIC      r0,r0,#1
000060  1c40              ADDS     r0,r0,#1
000062  4927              LDR      r1,|L8.256|
000064  71c8              STRB     r0,[r1,#7]
                  |L8.102|
;;;268            }
;;;269            
;;;270            //if( Motor.counter_step > Motor.counter_hx_step-1 ) //触顶检测 //if( bsp_GetKeyState( KID_ZERO ) ) 
;;;271            if( Motor.counter_step >= Motor.max_step )//触顶检测
000066  482b              LDR      r0,|L8.276|
000068  6840              LDR      r0,[r0,#4]  ; Motor
00006a  492a              LDR      r1,|L8.276|
00006c  6889              LDR      r1,[r1,#8]  ; Motor
00006e  4288              CMP      r0,r1
000070  d307              BCC      |L8.130|
;;;272            {
;;;273                Tmy.Sensor.bit.top = 1; //已触顶
000072  4823              LDR      r0,|L8.256|
000074  79c0              LDRB     r0,[r0,#7]  ; Tmy
000076  f0200002          BIC      r0,r0,#2
00007a  1c80              ADDS     r0,r0,#2
00007c  4920              LDR      r1,|L8.256|
00007e  71c8              STRB     r0,[r1,#7]
000080  e005              B        |L8.142|
                  |L8.130|
;;;274            }else
;;;275            {
;;;276                Tmy.Sensor.bit.top = 0; //未触顶
000082  481f              LDR      r0,|L8.256|
000084  79c0              LDRB     r0,[r0,#7]  ; Tmy
000086  f0200002          BIC      r0,r0,#2
00008a  491d              LDR      r1,|L8.256|
00008c  71c8              STRB     r0,[r1,#7]
                  |L8.142|
;;;277            }
;;;278            
;;;279    //        if( Tmy.State.bit.init ) //初始化完成
;;;280    //        {
;;;281    //            if( Motor.counter_step == 0 )//触低底检测
;;;282    //            {
;;;283    //                Tmy.Sensor.bit.bottom = 1; //已触底
;;;284    //            }else
;;;285    //            {
;;;286    //                Tmy.Sensor.bit.bottom = 0; //未触底
;;;287    //            }
;;;288    //        }
;;;289            
;;;290            if( bsp_GetKeyState( KID_SYRINGE ) ) //注射器类型
00008e  200a              MOVS     r0,#0xa
000090  f7fffffe          BL       bsp_GetKeyState
000094  b138              CBZ      r0,|L8.166|
;;;291            {
;;;292                Tmy.Sensor.bit.SyringeType = SYRINGE_2ML2; //2.2ml
000096  481a              LDR      r0,|L8.256|
000098  79c0              LDRB     r0,[r0,#7]  ; Tmy
00009a  f0200004          BIC      r0,r0,#4
00009e  1d00              ADDS     r0,r0,#4
0000a0  4917              LDR      r1,|L8.256|
0000a2  71c8              STRB     r0,[r1,#7]
0000a4  e005              B        |L8.178|
                  |L8.166|
;;;293            }else
;;;294            {
;;;295                Tmy.Sensor.bit.SyringeType = SYRINGE_1ML8; //1.8ml
0000a6  4816              LDR      r0,|L8.256|
0000a8  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000aa  f0200004          BIC      r0,r0,#4
0000ae  4914              LDR      r1,|L8.256|
0000b0  71c8              STRB     r0,[r1,#7]
                  |L8.178|
;;;296            }
;;;297            
;;;298            if( bsp_GetKeyState( KID_SYRINGE ) ) //注射器插入状态 XXX
0000b2  200a              MOVS     r0,#0xa
0000b4  f7fffffe          BL       bsp_GetKeyState
0000b8  b138              CBZ      r0,|L8.202|
;;;299            {
;;;300                Tmy.Sensor.bit.SyringeState = SYRINGE_ON; //已插入
0000ba  4811              LDR      r0,|L8.256|
0000bc  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000be  f0200008          BIC      r0,r0,#8
0000c2  3008              ADDS     r0,r0,#8
0000c4  490e              LDR      r1,|L8.256|
0000c6  71c8              STRB     r0,[r1,#7]
0000c8  e005              B        |L8.214|
                  |L8.202|
;;;301            }else
;;;302            {
;;;303                Tmy.Sensor.bit.SyringeState = SYRINGE_OFF; //未插入
0000ca  480d              LDR      r0,|L8.256|
0000cc  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000ce  f0200008          BIC      r0,r0,#8
0000d2  490b              LDR      r1,|L8.256|
0000d4  71c8              STRB     r0,[r1,#7]
                  |L8.214|
;;;304            }
;;;305            
;;;306            if( Tmy.pressure > MAX_PRESSURE ) //过压
0000d6  480a              LDR      r0,|L8.256|
0000d8  68c0              LDR      r0,[r0,#0xc]  ; Tmy
0000da  f5b07f7a          CMP      r0,#0x3e8
0000de  d907              BLS      |L8.240|
;;;307            {
;;;308                Tmy.Sensor.bit.OverPressure = 1; //已插入
0000e0  4807              LDR      r0,|L8.256|
0000e2  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000e4  f0200010          BIC      r0,r0,#0x10
0000e8  3010              ADDS     r0,r0,#0x10
0000ea  4905              LDR      r1,|L8.256|
0000ec  71c8              STRB     r0,[r1,#7]
0000ee  e005              B        |L8.252|
                  |L8.240|
;;;309            }else
;;;310            {
;;;311                Tmy.Sensor.bit.OverPressure = 0; //未插入
0000f0  4803              LDR      r0,|L8.256|
0000f2  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000f4  f0200010          BIC      r0,r0,#0x10
0000f8  4901              LDR      r1,|L8.256|
0000fa  71c8              STRB     r0,[r1,#7]
                  |L8.252|
0000fc  e782              B        |L8.4|
;;;312            }
;;;313        }
;;;314    }
;;;315    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L8.256|
                          DCD      Tmy
                  |L8.260|
000104  d2d1b4a5          DCB      210,209,180,165,181,215,0
000108  b5d700  
00010b  00                DCB      0
                  |L8.268|
00010c  ceb4b4a5          DCB      206,180,180,165,181,215,0
000110  b5d700  
000113  00                DCB      0
                  |L8.276|
                          DCD      Motor

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Tmy
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  dg_sta
000000  00                DCB      0x00
                  dev_sta
000001  000000            DCB      0x00,0x00,0x00
                  xHandleTaskLCD
                          DCD      0x00000000
                  xHandleTaskMotorCtrl
                          DCD      0x00000000
                  xHandleTaskSensor
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_251558ba____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_251558ba____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_251558ba____REVSH|
#line 128
|__asm___6_main_c_251558ba____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
