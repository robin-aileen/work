; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -ID:\MyDoc\MyPrj\MyGitPrj\TmyV01\Project\MDK-ARM(uV4)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.AppTaskCreate||, CODE, READONLY, ALIGN=2

                  AppTaskCreate PROC
;;;1129   */
;;;1130   static void AppTaskCreate (void)
000000  b51f              PUSH     {r0-r4,lr}
;;;1131   {
;;;1132   //    xTaskCreate( vTaskTaskUserIF,   	/* 任务函数  */
;;;1133   //                 "vTaskUserIF",     	/* 任务名    */
;;;1134   //                 512,               	/* 任务栈大小，单位word，也就是4字节 */
;;;1135   //                 NULL,              	/* 任务参数  */
;;;1136   //                 1,                 	/* 任务优先级*/
;;;1137   //                 &xHandleTaskUserIF );  /* 任务句柄  */
;;;1138   //	
;;;1139   //	
;;;1140   
;;;1141   
;;;1142   	xTaskCreate( vTaskLCD,    		/* 任务函数  */
000002  2000              MOVS     r0,#0
000004  4a14              LDR      r2,|L1.88|
000006  2304              MOVS     r3,#4
000008  e9cd2001          STRD     r2,r0,[sp,#4]
00000c  9300              STR      r3,[sp,#0]
00000e  9003              STR      r0,[sp,#0xc]
000010  4603              MOV      r3,r0
000012  f44f7200          MOV      r2,#0x200
000016  a111              ADR      r1,|L1.92|
000018  4813              LDR      r0,|L1.104|
00001a  f7fffffe          BL       xTaskGenericCreate
;;;1143                    "vTaskLCD",  		/* 任务名    */
;;;1144                    STKSIZE_TaskLCD,         		/* 任务栈大小，单位word，也就是4字节 */
;;;1145                    NULL,        		/* 任务参数  */
;;;1146                    PRIO_TaskLCD,      /* 任务优先级*/
;;;1147                    &xHandleTaskLCD ); /* 任务句柄  */
;;;1148   	
;;;1149   	xTaskCreate( vTaskMotorCtrl,     		/* 任务函数  */
00001e  2000              MOVS     r0,#0
000020  4a12              LDR      r2,|L1.108|
000022  2303              MOVS     r3,#3
000024  e9cd2001          STRD     r2,r0,[sp,#4]
000028  9300              STR      r3,[sp,#0]
00002a  9003              STR      r0,[sp,#0xc]
00002c  4603              MOV      r3,r0
00002e  f44f7200          MOV      r2,#0x200
000032  a10f              ADR      r1,|L1.112|
000034  4812              LDR      r0,|L1.128|
000036  f7fffffe          BL       xTaskGenericCreate
;;;1150                    "vTaskMotorCtrl",   		/* 任务名    */
;;;1151                    STKSIZE_TaskMotorCtrl,     /* 任务栈大小，单位word，也就是4字节 */
;;;1152                    NULL,           		    /* 任务参数  */
;;;1153                    PRIO_TaskMotorCtrl,        /* 任务优先级*/
;;;1154                    &xHandleTaskMotorCtrl );  /* 任务句柄  */
;;;1155   	
;;;1156       xTaskCreate( vTaskSensor,     		    /* 任务函数  */
00003a  2000              MOVS     r0,#0
00003c  4a11              LDR      r2,|L1.132|
00003e  2301              MOVS     r3,#1
000040  e9cd2001          STRD     r2,r0,[sp,#4]
000044  9300              STR      r3,[sp,#0]
000046  9003              STR      r0,[sp,#0xc]
000048  4603              MOV      r3,r0
00004a  2280              MOVS     r2,#0x80
00004c  a10e              ADR      r1,|L1.136|
00004e  4811              LDR      r0,|L1.148|
000050  f7fffffe          BL       xTaskGenericCreate
;;;1157                    "vTaskSensor",   		    /* 任务名    */
;;;1158                    STKSIZE_TaskSensor,        /* 任务栈大小，单位word，也就是4字节 */
;;;1159                    NULL,           		    /* 任务参数  */
;;;1160                    PRIO_TaskSensor,           /* 任务优先级*/
;;;1161                    &xHandleTaskSensor );      /* 任务句柄  */
;;;1162   }
000054  bd1f              POP      {r0-r4,pc}
;;;1163   
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      xHandleTaskLCD
                  |L1.92|
00005c  76546173          DCB      "vTaskLCD",0
000060  6b4c4344
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
                          DCD      vTaskLCD
                  |L1.108|
                          DCD      xHandleTaskMotorCtrl
                  |L1.112|
000070  76546173          DCB      "vTaskMotorCtrl",0
000074  6b4d6f74
000078  6f724374
00007c  726c00  
00007f  00                DCB      0
                  |L1.128|
                          DCD      vTaskMotorCtrl
                  |L1.132|
                          DCD      xHandleTaskSensor
                  |L1.136|
000088  76546173          DCB      "vTaskSensor",0
00008c  6b53656e
000090  736f7200
                  |L1.148|
                          DCD      vTaskSensor

                          AREA ||i.P_GetMsgFromUart||, CODE, READONLY, ALIGN=1

                  P_GetMsgFromUart PROC
;;;63     
;;;64     uint16_t P_GetMsgFromUart(COM_PORT_E _ucPort, uint8_t *msg)
000000  b5f8              PUSH     {r3-r7,lr}
;;;65     {
000002  4607              MOV      r7,r0
000004  460d              MOV      r5,r1
;;;66     	uint16_t i=0;
000006  2400              MOVS     r4,#0
;;;67         uint8_t tem8=0;
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
;;;68         uint32_t tem32 = 0;
00000c  2600              MOVS     r6,#0
;;;69         
;;;70         if( comGetLen(_ucPort) > 3 ) //收接收数据
00000e  4638              MOV      r0,r7
000010  f7fffffe          BL       comGetLen
000014  2803              CMP      r0,#3
000016  dd28              BLE      |L2.106|
;;;71         {
;;;72             while( comGetLen(_ucPort) )
000018  e022              B        |L2.96|
                  |L2.26|
;;;73             {
;;;74                 comGetChar(_ucPort, &tem8);
00001a  4669              MOV      r1,sp
00001c  4638              MOV      r0,r7
00001e  f7fffffe          BL       comGetChar
;;;75                 if( i == 0 )
000022  b954              CBNZ     r4,|L2.58|
;;;76                 {
;;;77                     if( tem8 == 0xEE ) 
000024  f89d0000          LDRB     r0,[sp,#0]
000028  28ee              CMP      r0,#0xee
00002a  d116              BNE      |L2.90|
;;;78                     {
;;;79                         *( msg + i++ ) = tem8;
00002c  f89d2000          LDRB     r2,[sp,#0]
000030  4620              MOV      r0,r4
000032  1c61              ADDS     r1,r4,#1
000034  b28c              UXTH     r4,r1
000036  542a              STRB     r2,[r5,r0]
000038  e00f              B        |L2.90|
                  |L2.58|
;;;80                     }
;;;81                 }else
;;;82                 {
;;;83                     *( msg + i++ ) = tem8;
00003a  f89d2000          LDRB     r2,[sp,#0]
00003e  4620              MOV      r0,r4
000040  1c61              ADDS     r1,r4,#1
000042  b28c              UXTH     r4,r1
000044  542a              STRB     r2,[r5,r0]
;;;84                     
;;;85                     tem32 = ((tem32<<8)|tem8);                           //拼接最后4个字节，组成一个32位整数
000046  f89d0000          LDRB     r0,[sp,#0]
00004a  ea402606          ORR      r6,r0,r6,LSL #8
;;;86                     if( tem32 == 0xFFFCFFFF )
00004e  f46f3040          MVN      r0,#0x30000
000052  4286              CMP      r6,r0
000054  d101              BNE      |L2.90|
;;;87                     {
;;;88                         return i;
000056  4620              MOV      r0,r4
                  |L2.88|
;;;89                     }
;;;90     //                if( i > 13 )
;;;91     //                {
;;;92     //                    if( tem8 == 0xFF ) 
;;;93     //                    {
;;;94     //                        return i;
;;;95     //                    }else
;;;96     //                    {
;;;97     //                        return 0;
;;;98     //                    }
;;;99     //                }
;;;100                }
;;;101                vTaskDelay(pdMS_TO_TICKS(1));
;;;102            }
;;;103        }
;;;104        return 0;
;;;105    }
000058  bdf8              POP      {r3-r7,pc}
                  |L2.90|
00005a  2001              MOVS     r0,#1                 ;101
00005c  f7fffffe          BL       vTaskDelay
                  |L2.96|
000060  4638              MOV      r0,r7                 ;72
000062  f7fffffe          BL       comGetLen
000066  2800              CMP      r0,#0                 ;72
000068  d1d7              BNE      |L2.26|
                  |L2.106|
00006a  2000              MOVS     r0,#0                 ;104
00006c  e7f4              B        |L2.88|
;;;106    
                          ENDP


                          AREA ||i.TMY_ParaInit||, CODE, READONLY, ALIGN=2

                  TMY_ParaInit PROC
;;;107    //默认参数
;;;108    void TMY_ParaInit( void )
000000  4811              LDR      r0,|L3.72|
;;;109    {
;;;110    	//步进电机初始化
;;;111        //方向
;;;112    	Motor.state.bit.dir = UP;
000002  7880              LDRB     r0,[r0,#2]  ; Motor
000004  f0200001          BIC      r0,r0,#1
000008  490f              LDR      r1,|L3.72|
00000a  7088              STRB     r0,[r1,#2]
;;;113        //速度
;;;114    	Motor.speed = SLOW;
00000c  2001              MOVS     r0,#1
00000e  7008              STRB     r0,[r1,#0]
;;;115    	Motor.gear = GEAR_SLOW_NORMAL_FAST; //慢中快速，默认有效
000010  2002              MOVS     r0,#2
000012  7048              STRB     r0,[r1,#1]
;;;116        //SetTextValue(0, 16,"停止\x00");
;;;117        
;;;118        //频率
;;;119        //SetTextValue(0, 17,"0");
;;;120        
;;;121    	Motor.max_step = MAX_STEP_18ML; //最大步数
000014  480d              LDR      r0,|L3.76|
000016  6088              STR      r0,[r1,#8]  ; Motor
;;;122    	Motor.counter_step = 0; //步数
000018  2000              MOVS     r0,#0
00001a  6048              STR      r0,[r1,#4]  ; Motor
;;;123    	
;;;124    	//其它初始化
;;;125    	Tmy.pressure = 0; //压力
00001c  490c              LDR      r1,|L3.80|
00001e  60c8              STR      r0,[r1,#0xc]  ; Tmy
;;;126    	Tmy.power_percent = 100; //电量
000020  2064              MOVS     r0,#0x64
000022  7208              STRB     r0,[r1,#8]
;;;127    	
;;;128        Tmy.Key.zdpk = 1; //自动排空，默认有效
000024  4608              MOV      r0,r1
000026  7940              LDRB     r0,[r0,#5]  ; Tmy
000028  f0200002          BIC      r0,r0,#2
00002c  1c80              ADDS     r0,r0,#2
00002e  7148              STRB     r0,[r1,#5]
;;;129        Tmy.Key.hx = 1; //回吸，默认有效
000030  4608              MOV      r0,r1
000032  7940              LDRB     r0,[r0,#5]  ; Tmy
000034  f0200001          BIC      r0,r0,#1
000038  1c40              ADDS     r0,r0,#1
00003a  7148              STRB     r0,[r1,#5]
;;;130        Tmy.Key.zh = 0; //1.8ml，默认有效
00003c  4608              MOV      r0,r1
00003e  7940              LDRB     r0,[r0,#5]  ; Tmy
000040  f0200008          BIC      r0,r0,#8
000044  7148              STRB     r0,[r1,#5]
;;;131    }
000046  4770              BX       lr
;;;132    
                          ENDP

                  |L3.72|
                          DCD      Motor
                  |L3.76|
                          DCD      0x0003b97e
                  |L3.80|
                          DCD      Tmy

                          AREA ||i.main||, CODE, READONLY, ALIGN=1

                  main PROC
;;;167    */
;;;168    int main(void)
000000  2001              MOVS     r0,#1
000002  f3808810          MSR      PRIMASK,r0
000006  bf00              NOP      
;;;169    {
;;;170    	/* 
;;;171    	  在启动调度前，为了防止初始化STM32外设时有中断服务程序执行，这里禁止全局中断(除了NMI和HardFault)。
;;;172    	  这样做的好处是：
;;;173    	  1. 防止执行的中断服务程序中有FreeRTOS的API函数。
;;;174    	  2. 保证系统正常启动，不受别的中断影响。
;;;175    	  3. 关于是否关闭全局中断，大家根据自己的实际情况设置即可。
;;;176    	  在移植文件port.c中的函数prvStartFirstTask中会重新开启全局中断。通过指令cpsie i开启，__set_PRIMASK(1)
;;;177    	  和cpsie i是等效的。
;;;178         */
;;;179    	__set_PRIMASK(1);  
;;;180    	
;;;181    	/* 硬件初始化 */
;;;182    	bsp_Init(); 
000008  f7fffffe          BL       bsp_Init
;;;183    	debug_en( 1 );
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       debug_en
;;;184    	
;;;185    	TMY_ParaInit();
000012  f7fffffe          BL       TMY_ParaInit
;;;186    	start_set();
000016  f7fffffe          BL       start_set
;;;187    	
;;;188    	/* 创建任务 */
;;;189    	AppTaskCreate();
00001a  f7fffffe          BL       AppTaskCreate
;;;190    	
;;;191        /* 启动调度，开始执行任务 */
;;;192        vTaskStartScheduler();
00001e  f7fffffe          BL       vTaskStartScheduler
;;;193    
;;;194    	/* 
;;;195    	  如果系统正常启动是不会运行到这里的，运行到这里极有可能是用于定时器任务或者空闲任务的
;;;196    	  heap空间不足造成创建失败，此要加大FreeRTOSConfig.h文件中定义的heap大小：
;;;197    	  #define configTOTAL_HEAP_SIZE	      ( ( size_t ) ( 17 * 1024 ) )
;;;198    	*/
;;;199    	while(1);
000022  bf00              NOP      
                  |L4.36|
000024  e7fe              B        |L4.36|
;;;200    }
;;;201    
                          ENDP


                          AREA ||i.start_set||, CODE, READONLY, ALIGN=2

                  start_set PROC
;;;133    
;;;134    void start_set( void )
000000  b510              PUSH     {r4,lr}
;;;135    {
;;;136        if(RCC_GetFlagStatus(RCC_FLAG_PORRST))
000002  207b              MOVS     r0,#0x7b
000004  f7fffffe          BL       RCC_GetFlagStatus
000008  b118              CBZ      r0,|L5.18|
;;;137        {
;;;138            debug_usr("power reset:");//上电重启
00000a  a00d              ADR      r0,|L5.64|
00000c  f7fffffe          BL       debug_usr
000010  e002              B        |L5.24|
                  |L5.18|
;;;139        }else
;;;140        {
;;;141            debug_usr("other reset:");//软重启
000012  a00f              ADR      r0,|L5.80|
000014  f7fffffe          BL       debug_usr
                  |L5.24|
;;;142        }
;;;143        
;;;144        //debug_usr("%d %d\r\n", data_saved.data.n_reset, data_saved.data.n_error);//
;;;145        
;;;146        RCC->CSR|=0X1000000    ; //清除中断标示
000018  4811              LDR      r0,|L5.96|
00001a  6a40              LDR      r0,[r0,#0x24]
00001c  f0407080          ORR      r0,r0,#0x1000000
000020  490f              LDR      r1,|L5.96|
000022  6248              STR      r0,[r1,#0x24]
;;;147        
;;;148        //debug_usr("Train num : %02x%02x max_room_n:%d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;149        //printf("Train num : %02x%02x max_room_n:%d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;150        
;;;151        debug_usr("************************************\r\n");
000024  a00f              ADR      r0,|L5.100|
000026  f7fffffe          BL       debug_usr
;;;152        debug_usr("          推麻仪 IV型\r\n\r\n");
00002a  a018              ADR      r0,|L5.140|
00002c  f7fffffe          BL       debug_usr
;;;153        debug_usr("Version : %s\r\n", HW_VER);
000030  a11d              ADR      r1,|L5.168|
000032  a01f              ADR      r0,|L5.176|
000034  f7fffffe          BL       debug_usr
;;;154        //printf("ID : %c%d - %02d\r\n", Train.TrainType, ( ( ( (uint16_t)Train.TrainNum[0]) << 8 ) + Train.TrainNum[1]), Train.max_room_n );
;;;155        //printf("ID : %02x%02x - %d\r\n", Train.TrainNum[0], Train.TrainNum[1], Train.max_room_n );
;;;156        
;;;157        printf("************************************\r\n");
000038  a00a              ADR      r0,|L5.100|
00003a  f7fffffe          BL       __2printf
;;;158    }
00003e  bd10              POP      {r4,pc}
;;;159    
                          ENDP

                  |L5.64|
000040  706f7765          DCB      "power reset:",0
000044  72207265
000048  7365743a
00004c  00      
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L5.80|
000050  6f746865          DCB      "other reset:",0
000054  72207265
000058  7365743a
00005c  00      
00005d  00                DCB      0
00005e  00                DCB      0
00005f  00                DCB      0
                  |L5.96|
                          DCD      0x40021000
                  |L5.100|
000064  2a2a2a2a          DCB      "************************************\r\n",0
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a2a
000084  2a2a2a2a
000088  0d0a00  
00008b  00                DCB      0
                  |L5.140|
00008c  20202020          DCB      "          ",205,198,194,233,210,199," IV",208,205,"\r\n"
000090  20202020
000094  2020cdc6
000098  c2e9d2c7
00009c  204956d0
0000a0  cd0d0a  
0000a3  0d0a00            DCB      "\r\n",0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L5.168|
0000a8  56312e30          DCB      "V1.0.0",0
0000ac  2e3000  
0000af  00                DCB      0
                  |L5.176|
0000b0  56657273          DCB      "Version : %s\r\n",0
0000b4  696f6e20
0000b8  3a202573
0000bc  0d0a00  
0000bf  00                DCB      0

                          AREA ||i.vTaskLCD||, CODE, READONLY, ALIGN=2

                  vTaskLCD PROC
;;;362    */
;;;363    static void vTaskLCD(void *pvParameters)
000000  f7fffffe          BL       ULCD_Init
;;;364    {      
;;;365    //    uint8_t err, tem8;
;;;366        
;;;367        ULCD_Init();
;;;368        printf( "vTaskLCD\r\n" );
000004  a006              ADR      r0,|L6.32|
000006  f7fffffe          BL       __2printf
;;;369        bsp_LedOff(1);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       bsp_LedOff
;;;370        
;;;371        //vTaskDelay(pdMS_TO_TICKS(10000));
;;;372        
;;;373        //LCD_ParaInit( );
;;;374        
;;;375        while(1)
000010  e004              B        |L6.28|
                  |L6.18|
;;;376        {
;;;377            vTaskDelay(1);
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       vTaskDelay
;;;378            ULCD_Task();
000018  f7fffffe          BL       ULCD_Task
                  |L6.28|
00001c  e7f9              B        |L6.18|
;;;379            
;;;380    //        if( lg_lcd_init == 1 )
;;;381    //        {
;;;382    //            //SetBuzzer(100);
;;;383    //            lg_lcd_init = 2;
;;;384    //            LCD_ParaInit();
;;;385    //            Tmy.State.bit.InitPara = 1;
;;;386    //        }
;;;387            
;;;388        }
;;;389    }
;;;390    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
000020  76546173          DCB      "vTaskLCD\r\n",0
000024  6b4c4344
000028  0d0a00  
00002b  00                DCB      0

                          AREA ||i.vTaskMotorCtrl||, CODE, READONLY, ALIGN=2

                  vTaskMotorCtrl PROC
;;;400    
;;;401    static void vTaskMotorCtrl(void *pvParameters)
000000  b508              PUSH     {r3,lr}
;;;402    {
;;;403        uint8_t key_v, tem8;
;;;404        //uint8_t  key_state, key_state_c;
;;;405        uint8_t count_init_down;
;;;406        
;;;407        uint8_t dg_sta_c;
;;;408        uint8_t lg_zdgy = 0;//自动给药抬起标志，不回吸
000002  f04f0800          MOV      r8,#0
;;;409    	
;;;410        MOTOR_Init( 1000 );
000006  f44f707a          MOV      r0,#0x3e8
00000a  f7fffffe          BL       MOTOR_Init
;;;411        key_v = 0;
00000e  2600              MOVS     r6,#0
;;;412        MOTOR_SetDir( UP );
000010  2000              MOVS     r0,#0
000012  f7fffffe          BL       MOTOR_SetDir
;;;413        
;;;414        Motor.max_hx_step = 31495;
000016  f6473007          MOV      r0,#0x7b07
00001a  49fa              LDR      r1,|L7.1028|
00001c  6108              STR      r0,[r1,#0x10]  ; Motor
;;;415        
;;;416        count_init_down = 0;
00001e  2700              MOVS     r7,#0
;;;417        dev_sta = DEV_INIT;
000020  2000              MOVS     r0,#0
000022  49f9              LDR      r1,|L7.1032|
000024  7008              STRB     r0,[r1,#0]
;;;418        dg_sta = DG_INIT;
000026  2001              MOVS     r0,#1
000028  49f8              LDR      r1,|L7.1036|
00002a  7008              STRB     r0,[r1,#0]
;;;419        
;;;420        while(1)
00002c  e3b7              B        |L7.1950|
                  |L7.46|
;;;421        {
;;;422            vTaskDelay(2);
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       vTaskDelay
;;;423    		
;;;424    		key_v = bsp_GetKey();
000034  f7fffffe          BL       bsp_GetKey
000038  4606              MOV      r6,r0
;;;425            
;;;426            switch( key_v ) //
00003a  2e19              CMP      r6,#0x19
00003c  d002              BEQ      |L7.68|
00003e  2e1a              CMP      r6,#0x1a
000040  d164              BNE      |L7.268|
000042  e044              B        |L7.206|
                  |L7.68|
;;;427    		{
;;;428    		    case PEDAL_DOWN : //踩下脚踏，电机运行
;;;429    			
;;;430    				timer_pedal_up = 0;
000044  2000              MOVS     r0,#0
000046  49f2              LDR      r1,|L7.1040|
000048  7008              STRB     r0,[r1,#0]
;;;431    		        
;;;432    				if( dg_sta == DG_UP ) //顶杆上升期间
00004a  48f0              LDR      r0,|L7.1036|
00004c  7800              LDRB     r0,[r0,#0]  ; dg_sta
00004e  2806              CMP      r0,#6
000050  d13c              BNE      |L7.204|
;;;433    		        {   
;;;434    					//自动给药情况下，踩下脚踏，不做任何动作，等到抬起再停止
;;;435    					if( Tmy.State.bit.zdgy )
000052  48f0              LDR      r0,|L7.1044|
000054  7980              LDRB     r0,[r0,#6]  ; Tmy
000056  f3c01080          UBFX     r0,r0,#6,#1
00005a  b170              CBZ      r0,|L7.122|
;;;436    					{
;;;437    					    timer_pedal_down = 1;
00005c  2001              MOVS     r0,#1
00005e  49ee              LDR      r1,|L7.1048|
000060  7008              STRB     r0,[r1,#0]
;;;438    					    Tmy.State.bit.zdgy = 0; //取消自动给药
000062  48ec              LDR      r0,|L7.1044|
000064  7980              LDRB     r0,[r0,#6]  ; Tmy
000066  f0200040          BIC      r0,r0,#0x40
00006a  49ea              LDR      r1,|L7.1044|
00006c  7188              STRB     r0,[r1,#6]
;;;439    					    //播放语音:自动给药取消？
;;;440    					    SetTextValue(0,26,"自动给药取消");
00006e  a2eb              ADR      r2,|L7.1052|
000070  211a              MOVS     r1,#0x1a
000072  2000              MOVS     r0,#0
000074  f7fffffe          BL       SetTextValue
000078  e028              B        |L7.204|
                  |L7.122|
;;;441    					    
;;;442    					}else //非自动给药
;;;443    					{
;;;444        					timer_pedal_down = 1;
00007a  2001              MOVS     r0,#1
00007c  49e6              LDR      r1,|L7.1048|
00007e  7008              STRB     r0,[r1,#0]
;;;445        					//Tmy.State.bit.zdgy = 0;//取消自动给药
;;;446        					
;;;447            	            Motor.speed++;
000080  48e0              LDR      r0,|L7.1028|
000082  7800              LDRB     r0,[r0,#0]  ; Motor
000084  1c40              ADDS     r0,r0,#1
000086  49df              LDR      r1,|L7.1028|
000088  7008              STRB     r0,[r1,#0]
;;;448            	            if( Motor.speed > 3 ) 
00008a  4608              MOV      r0,r1
00008c  7800              LDRB     r0,[r0,#0]  ; Motor
00008e  2803              CMP      r0,#3
000090  dd01              BLE      |L7.150|
;;;449            	            {
;;;450            	                Motor.speed = 1;
000092  2001              MOVS     r0,#1
000094  7008              STRB     r0,[r1,#0]
                  |L7.150|
;;;451            	            }
;;;452            	            
;;;453            	            tem8 = MOTOR_SPEED_INDEX[Motor.gear][Motor.speed-1];
000096  48db              LDR      r0,|L7.1028|
000098  7840              LDRB     r0,[r0,#1]  ; Motor
00009a  eb000040          ADD      r0,r0,r0,LSL #1
00009e  49e3              LDR      r1,|L7.1068|
0000a0  eb010140          ADD      r1,r1,r0,LSL #1
0000a4  48d7              LDR      r0,|L7.1028|
0000a6  7800              LDRB     r0,[r0,#0]  ; Motor
0000a8  1e40              SUBS     r0,r0,#1
0000aa  f8115010          LDRB     r5,[r1,r0,LSL #1]
;;;454            	            Tmy.speed = tem8;
0000ae  48d9              LDR      r0,|L7.1044|
0000b0  7105              STRB     r5,[r0,#4]
;;;455            	             
;;;456            	            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度
0000b2  49df              LDR      r1,|L7.1072|
0000b4  f8310015          LDRH     r0,[r1,r5,LSL #1]
0000b8  f7fffffe          BL       MOTOR_SetSpeed
;;;457            	            SetTextValue(0, 16, &MOTOR_SPEED_DISPLAY[tem8][0]); 
0000bc  eb0500c5          ADD      r0,r5,r5,LSL #3
0000c0  49dc              LDR      r1,|L7.1076|
0000c2  1842              ADDS     r2,r0,r1
0000c4  2110              MOVS     r1,#0x10
0000c6  2000              MOVS     r0,#0
0000c8  f7fffffe          BL       SetTextValue
                  |L7.204|
;;;458            	            //SetTextInt32(0, 17, MOTOR_SPEED_CYCLE[tem8], 0, 1);
;;;459            	            //Tmy.work_state = STA_MOVE;
;;;460    					}
;;;461    		        }
;;;462    		        
;;;463    		        break;
0000cc  e01f              B        |L7.270|
                  |L7.206|
;;;464    		    case PEDAL_UP : //抬起脚踏
;;;465    			
;;;466    				timer_pedal_down = 0;
0000ce  2000              MOVS     r0,#0
0000d0  49d1              LDR      r1,|L7.1048|
0000d2  7008              STRB     r0,[r1,#0]
;;;467    				
;;;468    		        if( dg_sta == DG_UP ) //顶杆上升期间
0000d4  48cd              LDR      r0,|L7.1036|
0000d6  7800              LDRB     r0,[r0,#0]  ; dg_sta
0000d8  2806              CMP      r0,#6
0000da  d116              BNE      |L7.266|
;;;469    		        {
;;;470    					if( Tmy.State.bit.zdgy ) //自动给药
0000dc  48cd              LDR      r0,|L7.1044|
0000de  7980              LDRB     r0,[r0,#6]  ; Tmy
0000e0  f3c01080          UBFX     r0,r0,#6,#1
0000e4  b988              CBNZ     r0,|L7.266|
;;;471        		        {
;;;472    						;//自动给药
;;;473    					}else //非自动给药
;;;474    					{
;;;475    						//Motor.speed = 0;
;;;476    						MOTOR_Stop(); //电机停止
0000e6  f7fffffe          BL       MOTOR_Stop
;;;477    						timer_pedal_up = 1;//启动脚踏抬起计时
0000ea  2001              MOVS     r0,#1
0000ec  49c8              LDR      r1,|L7.1040|
0000ee  7008              STRB     r0,[r1,#0]
;;;478    						
;;;479    						SetTextValue(0, 16,"停止\x00");
0000f0  a2d1              ADR      r2,|L7.1080|
0000f2  2110              MOVS     r1,#0x10
0000f4  2000              MOVS     r0,#0
0000f6  f7fffffe          BL       SetTextValue
;;;480    						SetTextInt32(0, 17, 0, 0, 1);
0000fa  2001              MOVS     r0,#1
0000fc  2300              MOVS     r3,#0
0000fe  461a              MOV      r2,r3
000100  2111              MOVS     r1,#0x11
000102  9000              STR      r0,[sp,#0]
000104  4618              MOV      r0,r3
000106  f7fffffe          BL       SetTextInt32
                  |L7.266|
;;;481    						//Tmy.work_state = STA_IDLE;
;;;482    					}
;;;483        	        }
;;;484    	            break;
00010a  e000              B        |L7.270|
                  |L7.268|
;;;485    //		    case ZERO_UNDETECT : //
;;;486    //		        Motor.state.bit.zero = 0;
;;;487    //		        SetTextValue(0,18,"未触底");
;;;488    //		        break;
;;;489    //	        case ZERO_DETECT : //
;;;490    //	            Motor.state.bit.zero = 1;
;;;491    //		        MOTOR_Stop();
;;;492    //		        Motor.counter_step = 0;
;;;493    //		        SetTextValue(0,18,"已触底");
;;;494    //		    case SYRINGE_UNDETECT : //
;;;495    ////		        Motor.state.bit.zero = 0;
;;;496    //		        //SetTextValue(0,18,"1.8ml");
;;;497    //		        break;
;;;498    //	        case SYRINGE_DETECT : //
;;;499    ////	            Motor.state.bit.zero = 1;
;;;500    ////		        MOTOR_Stop();
;;;501    ////		        Motor.counter_step = 0;
;;;502    //		        //SetTextValue(0,18,"2.2ml");
;;;503    //		        break;
;;;504    //	             
;;;505    		    default : break;
00010c  bf00              NOP      
                  |L7.270|
00010e  bf00              NOP                            ;463
;;;506    		}
;;;507            
;;;508    		if( dg_sta == DG_UP ) //顶杆上升期间
000110  48be              LDR      r0,|L7.1036|
000112  7800              LDRB     r0,[r0,#0]  ; dg_sta
000114  2806              CMP      r0,#6
000116  d165              BNE      |L7.484|
;;;509    		{
;;;510    			// if( timer_pedal_up > DLY_PEDAL_UP_MOTOR_STOP ) //抬起脚踏时间大于 DLY_PEDAL_UP_MOTOR_STOP 秒
;;;511    			// {
;;;512    				// timer_pedal_up = 0;
;;;513    				// Motor.speed = 0; //恢复速度
;;;514    				// if( Tmy.Key.hx )//&& (!Motor.state.bit.dir) )//回吸模式有效 Motor.state.bit.dir
;;;515    				// {
;;;516    					// if(!lg_zdgy) //非自动给药
;;;517    					// {
;;;518    						// lg_zdgy = 0;//自动给药抬起标志，取消
;;;519    						// if( ( Tmy.speed == SLOWEST )   //慢慢速
;;;520    						 // || ( Tmy.speed == SLOW    ) ) //常慢速
;;;521    						// {
;;;522    							// Motor.counter_hx_step = Motor.counter_step - Motor.max_hx_step;
;;;523    							// dg_sta = DG_HX_DOWN;//
;;;524    						// }
;;;525    					// }
;;;526    				// }
;;;527    			// }
;;;528    			//回吸判断
;;;529    			if( ( Tmy.speed == SLOWEST )   //慢慢速
000118  48be              LDR      r0,|L7.1044|
00011a  7900              LDRB     r0,[r0,#4]  ; Tmy
00011c  b118              CBZ      r0,|L7.294|
;;;530    			 || ( Tmy.speed == SLOW    ) ) //常慢速
00011e  48bd              LDR      r0,|L7.1044|
000120  7900              LDRB     r0,[r0,#4]  ; Tmy
000122  2801              CMP      r0,#1
000124  d125              BNE      |L7.370|
                  |L7.294|
;;;531    			{
;;;532    				if( timer_pedal_up > DLY_PEDAL_UP_MOTOR_STOP ) //抬起脚踏时间大于 DLY_PEDAL_UP_MOTOR_STOP 秒
000126  48ba              LDR      r0,|L7.1040|
000128  7800              LDRB     r0,[r0,#0]  ; timer_pedal_up
00012a  2802              CMP      r0,#2
00012c  dd21              BLE      |L7.370|
;;;533    				{
;;;534    					timer_pedal_up = 0;
00012e  2000              MOVS     r0,#0
000130  49b7              LDR      r1,|L7.1040|
000132  7008              STRB     r0,[r1,#0]
;;;535    					Motor.speed = 0; //恢复速度
000134  49b3              LDR      r1,|L7.1028|
000136  7008              STRB     r0,[r1,#0]
;;;536    					if( Tmy.Key.hx ) //回吸模式有效
000138  48b6              LDR      r0,|L7.1044|
00013a  7940              LDRB     r0,[r0,#5]  ; Tmy
00013c  f0000001          AND      r0,r0,#1
000140  b1b8              CBZ      r0,|L7.370|
;;;537    					{
;;;538    						if(!lg_zdgy) //非自动给药
000142  f1b80f00          CMP      r8,#0
000146  d114              BNE      |L7.370|
;;;539    						{
;;;540    							lg_zdgy = 0;//自动给药抬起标志，取消
000148  f04f0800          MOV      r8,#0
;;;541    							
;;;542    							//判断回吸距离，此处可判断大于STEP_HX_ENABLE距离才可以回吸，STEP_HX_ENABLE默认0
;;;543    							if( Motor.counter_step > ( Motor.max_hx_step + STEP_HX_ENABLE ) ) //有效距离
00014c  4608              MOV      r0,r1
00014e  6841              LDR      r1,[r0,#4]  ; Motor
000150  6900              LDR      r0,[r0,#0x10]  ; Motor
000152  4281              CMP      r1,r0
000154  d907              BLS      |L7.358|
;;;544    							{
;;;545    								Motor.counter_hx_step = Motor.counter_step - Motor.max_hx_step; 
000156  48ab              LDR      r0,|L7.1028|
000158  6840              LDR      r0,[r0,#4]  ; Motor
00015a  49aa              LDR      r1,|L7.1028|
00015c  6909              LDR      r1,[r1,#0x10]  ; Motor
00015e  1a40              SUBS     r0,r0,r1
000160  49a8              LDR      r1,|L7.1028|
000162  60c8              STR      r0,[r1,#0xc]  ; Motor
000164  e002              B        |L7.364|
                  |L7.358|
;;;546    							}else //判断回吸距离不够的情况，最低触底
;;;547    							{
;;;548    								Motor.counter_hx_step = 0;
000166  2000              MOVS     r0,#0
000168  49a6              LDR      r1,|L7.1028|
00016a  60c8              STR      r0,[r1,#0xc]  ; Motor
                  |L7.364|
;;;549    							}
;;;550    							dg_sta = DG_HX_DOWN;//进入回吸
00016c  200b              MOVS     r0,#0xb
00016e  49a7              LDR      r1,|L7.1036|
000170  7008              STRB     r0,[r1,#0]
                  |L7.370|
;;;551    						}
;;;552    					}
;;;553    				}
;;;554    			}
;;;555    			
;;;556    			//自动给药判断
;;;557    			if( ( Tmy.speed == SLOWEST )   //慢慢速
000172  48a8              LDR      r0,|L7.1044|
000174  7900              LDRB     r0,[r0,#4]  ; Tmy
000176  b118              CBZ      r0,|L7.384|
;;;558    			 || ( Tmy.speed == SLOW    ) ) //常慢速
000178  48a6              LDR      r0,|L7.1044|
00017a  7900              LDRB     r0,[r0,#4]  ; Tmy
00017c  2801              CMP      r0,#1
00017e  d131              BNE      |L7.484|
                  |L7.384|
;;;559    			{
;;;560    				if( ( !Tmy.State.bit.zdgy ) && ( timer_pedal_down > TIME_ZDGY_ENABLE ) ) //踩下脚踏时间大于TIME_CRUISE_START秒
000180  48a4              LDR      r0,|L7.1044|
000182  7980              LDRB     r0,[r0,#6]  ; Tmy
000184  f3c01080          UBFX     r0,r0,#6,#1
000188  b9a0              CBNZ     r0,|L7.436|
00018a  48a3              LDR      r0,|L7.1048|
00018c  7800              LDRB     r0,[r0,#0]  ; timer_pedal_down
00018e  2805              CMP      r0,#5
000190  dd10              BLE      |L7.436|
;;;561    				{
;;;562    					Tmy.State.bit.zdgy = 1; //进入自动给药
000192  48a0              LDR      r0,|L7.1044|
000194  7980              LDRB     r0,[r0,#6]  ; Tmy
000196  f0200040          BIC      r0,r0,#0x40
00019a  3040              ADDS     r0,r0,#0x40
00019c  499d              LDR      r1,|L7.1044|
00019e  7188              STRB     r0,[r1,#6]
;;;563    					SetTextValue(0,26,"自动给药...");
0001a0  a2a7              ADR      r2,|L7.1088|
0001a2  211a              MOVS     r1,#0x1a
0001a4  2000              MOVS     r0,#0
0001a6  f7fffffe          BL       SetTextValue
;;;564    					PlayMusic("a:/sounds/zdgy.mp3"); ////播放语音:自动给药
0001aa  a0a8              ADR      r0,|L7.1100|
0001ac  f7fffffe          BL       PlayMusic
;;;565    					//如果2秒内，抬脚，自动给药
;;;566    					//如果2秒内，没有抬脚，不进自动给药
;;;567    					lg_zdgy = 1;//自动给药抬起标志，不回吸
0001b0  f04f0801          MOV      r8,#1
                  |L7.436|
;;;568    				}
;;;569    				
;;;570    				if( ( Tmy.State.bit.zdgy ) && ( timer_pedal_down > TIME_ZDGY_CANCLE ) ) //踩下脚踏时间大于5秒
0001b4  4897              LDR      r0,|L7.1044|
0001b6  7980              LDRB     r0,[r0,#6]  ; Tmy
0001b8  f3c01080          UBFX     r0,r0,#6,#1
0001bc  b190              CBZ      r0,|L7.484|
0001be  4896              LDR      r0,|L7.1048|
0001c0  7800              LDRB     r0,[r0,#0]  ; timer_pedal_down
0001c2  2807              CMP      r0,#7
0001c4  dd0e              BLE      |L7.484|
;;;571    				{
;;;572    					Tmy.State.bit.zdgy = 0;//取消自动给药
0001c6  4893              LDR      r0,|L7.1044|
0001c8  7980              LDRB     r0,[r0,#6]  ; Tmy
0001ca  f0200040          BIC      r0,r0,#0x40
0001ce  4991              LDR      r1,|L7.1044|
0001d0  7188              STRB     r0,[r1,#6]
;;;573    					timer_pedal_down = 0;
0001d2  2000              MOVS     r0,#0
0001d4  4990              LDR      r1,|L7.1048|
0001d6  7008              STRB     r0,[r1,#0]
;;;574    					SetTextValue(0,26,"自动给药取消");
0001d8  a290              ADR      r2,|L7.1052|
0001da  211a              MOVS     r1,#0x1a
0001dc  f7fffffe          BL       SetTextValue
;;;575    					//播放语音:自动给药取消xxx
;;;576    					//如果2秒内，抬脚，自动给药
;;;577    					//如果2秒内，没有抬脚，不进自动给药
;;;578    					lg_zdgy = 0;//自动给药抬起标志，取消
0001e0  f04f0800          MOV      r8,#0
                  |L7.484|
;;;579    				}
;;;580    			}
;;;581    		}
;;;582    		
;;;583    		//紧急制动功能有待完善
;;;584    		if( Tmy.Key.jjzd ) //紧急制动
0001e4  488b              LDR      r0,|L7.1044|
0001e6  7940              LDRB     r0,[r0,#5]  ; Tmy
0001e8  f3c01080          UBFX     r0,r0,#6,#1
0001ec  b130              CBZ      r0,|L7.508|
;;;585    		{
;;;586    			MOTOR_Stop();//步进电机停止
0001ee  f7fffffe          BL       MOTOR_Stop
;;;587    			Tmy.Motor.state = MOTOR_STOP;//更改步进电机状态
0001f2  2000              MOVS     r0,#0
0001f4  4987              LDR      r1,|L7.1044|
0001f6  7008              STRB     r0,[r1,#0]
;;;588    			dg_sta = DG_STOP;
0001f8  4984              LDR      r1,|L7.1036|
0001fa  7008              STRB     r0,[r1,#0]
                  |L7.508|
;;;589    		}
;;;590    		
;;;591            switch( dg_sta )
0001fc  4883              LDR      r0,|L7.1036|
0001fe  7800              LDRB     r0,[r0,#0]  ; dg_sta
000200  2810              CMP      r0,#0x10
000202  d27c              BCS      |L7.766|
000204  e8dff000          TBB      [pc,r0]
000208  c8082a4d          DCB      0xc8,0x08,0x2a,0x4d
00020c  fd9ffcfb          DCB      0xfd,0x9f,0xfc,0xfb
000210  e4faf9f8          DCB      0xe4,0xfa,0xf9,0xf8
000214  7b7bf7f6          DCB      0x7b,0x7b,0xf7,0xf6
;;;592            {
;;;593                case DG_INIT : //上电，参数初始化
;;;594                    if( dg_sta_c != dg_sta )
000218  487c              LDR      r0,|L7.1036|
00021a  7800              LDRB     r0,[r0,#0]  ; dg_sta
00021c  4284              CMP      r4,r0
00021e  d001              BEQ      |L7.548|
;;;595                    {
;;;596                        dg_sta_c = dg_sta;
000220  487a              LDR      r0,|L7.1036|
000222  7804              LDRB     r4,[r0,#0]  ; dg_sta
                  |L7.548|
;;;597                        //SetTextValue(0,26,"初始化...");
;;;598                    }
;;;599                    
;;;600                    if( !Tmy.State.bit.InitPara ) //参数尚未初始化
000224  487b              LDR      r0,|L7.1044|
000226  7980              LDRB     r0,[r0,#6]  ; Tmy
000228  f0000001          AND      r0,r0,#1
00022c  b968              CBNZ     r0,|L7.586|
;;;601                    {
;;;602                        if( lg_lcd_init == 1 )
00022e  488c              LDR      r0,|L7.1120|
000230  7800              LDRB     r0,[r0,#0]  ; lg_lcd_init
000232  2801              CMP      r0,#1
000234  d111              BNE      |L7.602|
;;;603                        {
;;;604                            //lg_lcd_init = 2;
;;;605                            LCD_ParaInit();
000236  f7fffffe          BL       LCD_ParaInit
;;;606                            Tmy.State.bit.InitPara = 1;
00023a  4876              LDR      r0,|L7.1044|
00023c  7980              LDRB     r0,[r0,#6]  ; Tmy
00023e  f0200001          BIC      r0,r0,#1
000242  1c40              ADDS     r0,r0,#1
000244  4973              LDR      r1,|L7.1044|
000246  7188              STRB     r0,[r1,#6]
000248  e007              B        |L7.602|
                  |L7.586|
;;;607                        }
;;;608                        //Tmy.State.bit.InitPara = 1;
;;;609                    }else //参数初始化完成
;;;610                    {
;;;611                        SetTextValue(0,26,"LCD初始化完成。");
00024a  a286              ADR      r2,|L7.1124|
00024c  211a              MOVS     r1,#0x1a
00024e  2000              MOVS     r0,#0
000250  f7fffffe          BL       SetTextValue
;;;612                        dg_sta = DG_INIT_DOWN;//顶杆归零
000254  2003              MOVS     r0,#3
000256  496d              LDR      r1,|L7.1036|
000258  7008              STRB     r0,[r1,#0]
                  |L7.602|
;;;613                    }
;;;614                    
;;;615                    break;
00025a  e29f              B        |L7.1948|
;;;616                
;;;617                case DG_INIT_UP : //上电初始化过程，顶杆不在零位，先归零，然后再先上升一小段再归零
;;;618                    
;;;619                    if( dg_sta_c != dg_sta )
00025c  486b              LDR      r0,|L7.1036|
00025e  7800              LDRB     r0,[r0,#0]  ; dg_sta
000260  4284              CMP      r4,r0
000262  d006              BEQ      |L7.626|
;;;620                    {
;;;621                        dg_sta_c = dg_sta;
000264  4869              LDR      r0,|L7.1036|
000266  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;622                        SetTextValue(0,26,"检测归零传感器,上升...");
000268  a282              ADR      r2,|L7.1140|
00026a  211a              MOVS     r1,#0x1a
00026c  2000              MOVS     r0,#0
00026e  f7fffffe          BL       SetTextValue
                  |L7.626|
;;;623                    }
;;;624                    
;;;625                    if( !Tmy.Sensor.bit.bottom )//检测离开底部
000272  4868              LDR      r0,|L7.1044|
000274  79c0              LDRB     r0,[r0,#7]  ; Tmy
000276  f0000001          AND      r0,r0,#1
00027a  b910              CBNZ     r0,|L7.642|
;;;626                    {
;;;627                        dg_sta = DG_INIT_DOWN;//再次复位
00027c  2003              MOVS     r0,#3
00027e  4963              LDR      r1,|L7.1036|
000280  7008              STRB     r0,[r1,#0]
                  |L7.642|
;;;628                    }
;;;629                    
;;;630                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
000282  4864              LDR      r0,|L7.1044|
000284  7800              LDRB     r0,[r0,#0]  ; Tmy
000286  2801              CMP      r0,#1
000288  d00a              BEQ      |L7.672|
;;;631                    {
;;;632                        MOTOR_Stop();//步进电机停止
00028a  f7fffffe          BL       MOTOR_Stop
;;;633                        MOTOR_SetDir( UP );//方向上升
00028e  2000              MOVS     r0,#0
000290  f7fffffe          BL       MOTOR_SetDir
;;;634                        MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度 XXX
000294  2086              MOVS     r0,#0x86
000296  f7fffffe          BL       MOTOR_SetSpeed
;;;635                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
00029a  2001              MOVS     r0,#1
00029c  495d              LDR      r1,|L7.1044|
00029e  7008              STRB     r0,[r1,#0]
                  |L7.672|
;;;636                    }else //步进电机在上升
;;;637                    {
;;;638    //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;639    //                    {
;;;640    //                        dg_sta = DG_STOP;//停止
;;;641    //                    }
;;;642                    }
;;;643                    
;;;644                    break;
0002a0  e27c              B        |L7.1948|
;;;645                case DG_INIT_DOWN : //上电初始化过程，顶杆不在零位，先归零，然后再先上升一小段再归零
;;;646                    
;;;647                    if( dg_sta_c != dg_sta )
0002a2  485a              LDR      r0,|L7.1036|
0002a4  7800              LDRB     r0,[r0,#0]  ; dg_sta
0002a6  4284              CMP      r4,r0
0002a8  d006              BEQ      |L7.696|
;;;648                    {
;;;649                        dg_sta_c = dg_sta;
0002aa  4858              LDR      r0,|L7.1036|
0002ac  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;650                        SetTextValue(0,26,"顶杆归零...");
0002ae  a277              ADR      r2,|L7.1164|
0002b0  211a              MOVS     r1,#0x1a
0002b2  2000              MOVS     r0,#0
0002b4  f7fffffe          BL       SetTextValue
                  |L7.696|
;;;651                    }
;;;652                    
;;;653                    if( key_v == ZERO_DETECT )//检测到触底
0002b8  2e1d              CMP      r6,#0x1d
0002ba  d10f              BNE      |L7.732|
;;;654                    {
;;;655                        Tmy.Sensor.bit.bottom = 1;
0002bc  4855              LDR      r0,|L7.1044|
0002be  79c0              LDRB     r0,[r0,#7]  ; Tmy
0002c0  f0200001          BIC      r0,r0,#1
0002c4  1c40              ADDS     r0,r0,#1
0002c6  4953              LDR      r1,|L7.1044|
0002c8  71c8              STRB     r0,[r1,#7]
;;;656        		        MOTOR_Stop();
0002ca  f7fffffe          BL       MOTOR_Stop
;;;657        		        Motor.counter_step = 0;
0002ce  2000              MOVS     r0,#0
0002d0  494c              LDR      r1,|L7.1028|
0002d2  6048              STR      r0,[r1,#4]  ; Motor
;;;658        		        SetTextValue(0,18,"已触底");
0002d4  a270              ADR      r2,|L7.1176|
0002d6  2112              MOVS     r1,#0x12
0002d8  f7fffffe          BL       SetTextValue
                  |L7.732|
;;;659                    }
;;;660                    
;;;661                    if( Tmy.Sensor.bit.bottom )//到达底部
0002dc  484d              LDR      r0,|L7.1044|
0002de  79c0              LDRB     r0,[r0,#7]  ; Tmy
0002e0  f0000001          AND      r0,r0,#1
0002e4  b1f8              CBZ      r0,|L7.806|
;;;662                    {
;;;663                        if( !count_init_down ) //第一次触底
0002e6  b95f              CBNZ     r7,|L7.768|
;;;664                        {
;;;665                            SetTextValue(0,26,"已触底");
0002e8  a26b              ADR      r2,|L7.1176|
0002ea  211a              MOVS     r1,#0x1a
0002ec  2000              MOVS     r0,#0
0002ee  f7fffffe          BL       SetTextValue
;;;666                            count_init_down++;
0002f2  1c78              ADDS     r0,r7,#1
0002f4  b2c7              UXTB     r7,r0
;;;667                            dg_sta = DG_INIT_UP;//上升一段
0002f6  2002              MOVS     r0,#2
0002f8  4944              LDR      r1,|L7.1036|
0002fa  7008              STRB     r0,[r1,#0]
0002fc  e022              B        |L7.836|
                  |L7.766|
0002fe  e24c              B        |L7.1946|
                  |L7.768|
;;;668                        }else //第二次触底
;;;669                        {
;;;670                            SetBuzzer(100);
000300  2064              MOVS     r0,#0x64
000302  f7fffffe          BL       SetBuzzer
;;;671                            SetTextValue(0,26,"顶杆归零完成");
000306  a266              ADR      r2,|L7.1184|
000308  211a              MOVS     r1,#0x1a
00030a  2000              MOVS     r0,#0
00030c  f7fffffe          BL       SetTextValue
;;;672                            Tmy.State.bit.init = 1; //初始化完成
000310  4840              LDR      r0,|L7.1044|
000312  7980              LDRB     r0,[r0,#6]  ; Tmy
000314  f0200002          BIC      r0,r0,#2
000318  1c80              ADDS     r0,r0,#2
00031a  493e              LDR      r1,|L7.1044|
00031c  7188              STRB     r0,[r1,#6]
;;;673                            dg_sta = DG_STOP_BOT;//停在底部
00031e  2005              MOVS     r0,#5
000320  493a              LDR      r1,|L7.1036|
000322  7008              STRB     r0,[r1,#0]
000324  e00e              B        |L7.836|
                  |L7.806|
;;;674                            //dev_sta = DEV_STANDBY;//设备待机  
;;;675                        }
;;;676                        
;;;677                    }else //未到达底部
;;;678                    {
;;;679                        if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机不是在下降
000326  483b              LDR      r0,|L7.1044|
000328  7800              LDRB     r0,[r0,#0]  ; Tmy
00032a  2802              CMP      r0,#2
00032c  d00a              BEQ      |L7.836|
;;;680                        {
;;;681                            MOTOR_Stop();//步进电机停止
00032e  f7fffffe          BL       MOTOR_Stop
;;;682                            MOTOR_SetDir( DOWN );//方向下降
000332  2001              MOVS     r0,#1
000334  f7fffffe          BL       MOTOR_SetDir
;;;683                            MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度 XXX
000338  2086              MOVS     r0,#0x86
00033a  f7fffffe          BL       MOTOR_SetSpeed
;;;684                            Tmy.Motor.state = MOTOR_DOWN;//更改步进电机状态
00033e  2002              MOVS     r0,#2
000340  4934              LDR      r1,|L7.1044|
000342  7008              STRB     r0,[r1,#0]
                  |L7.836|
;;;685                        }else //步进电机在下降
;;;686                        {
;;;687        //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;688        //                    {
;;;689        //                        dg_sta = DG_STOP;//停止
;;;690        //                    }
;;;691                        }
;;;692                    }
;;;693                    break;
000344  e22a              B        |L7.1948|
;;;694                
;;;695                case DG_STOP_BOT : //停留在底部
;;;696                    //触底步数归零
;;;697                    MOTOR_ClrStep( );
000346  f7fffffe          BL       MOTOR_ClrStep
;;;698                    
;;;699                    if( dg_sta_c != dg_sta )
00034a  4830              LDR      r0,|L7.1036|
00034c  7800              LDRB     r0,[r0,#0]  ; dg_sta
00034e  4284              CMP      r4,r0
000350  d006              BEQ      |L7.864|
;;;700                    {
;;;701                        dg_sta_c = dg_sta;
000352  482e              LDR      r0,|L7.1036|
000354  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;702                        SetTextValue(0,26,"触底待机");
000356  a256              ADR      r2,|L7.1200|
000358  211a              MOVS     r1,#0x1a
00035a  2000              MOVS     r0,#0
00035c  f7fffffe          BL       SetTextValue
                  |L7.864|
;;;703                    }
;;;704                    
;;;705                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
000360  482c              LDR      r0,|L7.1044|
000362  7800              LDRB     r0,[r0,#0]  ; Tmy
000364  b148              CBZ      r0,|L7.890|
;;;706                    {
;;;707                        MOTOR_Stop();//步进电机停止
000366  f7fffffe          BL       MOTOR_Stop
;;;708                        MOTOR_SetDir( UP );//方向上升
00036a  2000              MOVS     r0,#0
00036c  f7fffffe          BL       MOTOR_SetDir
;;;709                        Tmy.Motor.state = MOTOR_STOP;//更改步进电机状态
000370  2000              MOVS     r0,#0
000372  4928              LDR      r1,|L7.1044|
000374  7008              STRB     r0,[r1,#0]
;;;710                        MOTOR_ClrStep( ); //步数清零
000376  f7fffffe          BL       MOTOR_ClrStep
                  |L7.890|
;;;711                    }
;;;712                    
;;;713                    if( key_v == PEDAL_DOWN ) //检测到踩脚踏
00037a  2e19              CMP      r6,#0x19
00037c  d10b              BNE      |L7.918|
;;;714                    {
;;;715                        if( Tmy.Key.zdpk ) //自动排空
00037e  4825              LDR      r0,|L7.1044|
000380  7940              LDRB     r0,[r0,#5]  ; Tmy
000382  f3c00040          UBFX     r0,r0,#1,#1
000386  b118              CBZ      r0,|L7.912|
;;;716                        {
;;;717                           // SetTextValue(0,26,"自动排空...");
;;;718                            dg_sta = DG_ZDPK_UP;//顶杆上升
000388  2008              MOVS     r0,#8
00038a  4920              LDR      r1,|L7.1036|
00038c  7008              STRB     r0,[r1,#0]
00038e  e002              B        |L7.918|
                  |L7.912|
;;;719                        }else
;;;720                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;721                        {
;;;722                            //SetTextValue(0,26,"顶杆上升...");
;;;723                            dg_sta = DG_UP;//顶杆上升
000390  2006              MOVS     r0,#6
000392  491e              LDR      r1,|L7.1036|
000394  7008              STRB     r0,[r1,#0]
                  |L7.918|
;;;724                        }
;;;725                    }
;;;726    //                if(  )//顶杆检查按键按下
;;;727    //                {
;;;728    //                    if( dev_sta == DEV_FIX )//顶杆检查
;;;729    //                    {
;;;730    //                        dg_sta = DG_FIX_UP;//顶杆检查上升
;;;731    //                    }
;;;732    //                }
;;;733                    
;;;734    //                if( key_v == PEDAL_DOWN )//检测到脚踏按下
;;;735    //                {
;;;736    //                    if( dev_sta == DEV_RUN )//设备运行状态
;;;737    //                    {
;;;738    //                        dg_sta = DG_UP;//顶杆上升
;;;739    //                    }else
;;;740    //                    if( dev_sta == DEV_FIX )//顶杆检查
;;;741    //                    {
;;;742    //                        dg_sta = DG_FIX_UP;//顶杆检查上升
;;;743    //                    }
;;;744    //                }
;;;745    
;;;746                    break;
000396  e201              B        |L7.1948|
;;;747                        
;;;748                case DG_STOP : //停止
;;;749                    
;;;750                    if( dg_sta_c != dg_sta )
000398  481c              LDR      r0,|L7.1036|
00039a  7800              LDRB     r0,[r0,#0]  ; dg_sta
00039c  4284              CMP      r4,r0
00039e  d006              BEQ      |L7.942|
;;;751                    {
;;;752                        dg_sta_c = dg_sta;
0003a0  481a              LDR      r0,|L7.1036|
0003a2  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;753                        SetTextValue(0,26,"待机");
0003a4  a243              ADR      r2,|L7.1204|
0003a6  211a              MOVS     r1,#0x1a
0003a8  2000              MOVS     r0,#0
0003aa  f7fffffe          BL       SetTextValue
                  |L7.942|
;;;754                    }
;;;755                    
;;;756                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
0003ae  4819              LDR      r0,|L7.1044|
0003b0  7800              LDRB     r0,[r0,#0]  ; Tmy
0003b2  b120              CBZ      r0,|L7.958|
;;;757                    {
;;;758                        MOTOR_Stop();//步进电机停止
0003b4  f7fffffe          BL       MOTOR_Stop
;;;759                        //MOTOR_SetDir( UP );//方向上升
;;;760                        Tmy.Motor.state = MOTOR_STOP;//更改步进电机状态
0003b8  2000              MOVS     r0,#0
0003ba  4916              LDR      r1,|L7.1044|
0003bc  7008              STRB     r0,[r1,#0]
                  |L7.958|
;;;761                        //MOTOR_ClrStep( ); //步数清零
;;;762                    }
;;;763                    
;;;764                    if( key_v == PEDAL_DOWN )//检测到脚踏按下
0003be  2e19              CMP      r6,#0x19
0003c0  d105              BNE      |L7.974|
;;;765                    {
;;;766                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;767                        {
;;;768                            timer_pedal_down = 1; //开始脚踏按下计时
0003c2  2001              MOVS     r0,#1
0003c4  4914              LDR      r1,|L7.1048|
0003c6  7008              STRB     r0,[r1,#0]
;;;769                            dg_sta = DG_UP;//顶杆上升
0003c8  2006              MOVS     r0,#6
0003ca  4910              LDR      r1,|L7.1036|
0003cc  7008              STRB     r0,[r1,#0]
                  |L7.974|
;;;770                        }
;;;771                    }//else
;;;772    //                if( key_v == PEDAL_DOWN )//检测复位键按下
;;;773    //                {
;;;774    //                    if( )//设备运行状态
;;;775    //                    {
;;;776    //                        dg_sta = DG_RESET_DOWN;//复位下降
;;;777    //                    }
;;;778    //                    ;
;;;779    //                }
;;;780                    break;
0003ce  e1e5              B        |L7.1948|
;;;781                    
;;;782                case DG_ZDPK_UP : //自动排空
;;;783                    
;;;784                    if( dg_sta_c != dg_sta )
0003d0  480e              LDR      r0,|L7.1036|
0003d2  7800              LDRB     r0,[r0,#0]  ; dg_sta
0003d4  4284              CMP      r4,r0
0003d6  d006              BEQ      |L7.998|
;;;785                    {
;;;786                        dg_sta_c = dg_sta;
0003d8  480c              LDR      r0,|L7.1036|
0003da  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;787                        SetTextValue(0,26,"自动排空...");
0003dc  a237              ADR      r2,|L7.1212|
0003de  211a              MOVS     r1,#0x1a
0003e0  2000              MOVS     r0,#0
0003e2  f7fffffe          BL       SetTextValue
                  |L7.998|
;;;788                    }
;;;789                    
;;;790                    if( Motor.counter_step > STEP_MAX_ZDPK ) //到达自动排空步数
0003e6  4807              LDR      r0,|L7.1028|
0003e8  6840              LDR      r0,[r0,#4]  ; Motor
0003ea  f6487189          MOV      r1,#0x8f89
0003ee  4288              CMP      r0,r1
0003f0  d96e              BLS      |L7.1232|
;;;791                    {
;;;792                        dg_sta = DG_STOP;//电机停止
0003f2  e06a              B        |L7.1226|
0003f4  e1b6              B        |L7.1892|
0003f6  e194              B        |L7.1826|
0003f8  e129              B        |L7.1614|
0003fa  e166              B        |L7.1738|
0003fc  e078              B        |L7.1264|
0003fe  e0fd              B        |L7.1532|
000400  e08e              B        |L7.1312|
000402  e0d9              B        |L7.1464|
                  |L7.1028|
                          DCD      Motor
                  |L7.1032|
                          DCD      dev_sta
                  |L7.1036|
                          DCD      dg_sta
                  |L7.1040|
                          DCD      timer_pedal_up
                  |L7.1044|
                          DCD      Tmy
                  |L7.1048|
                          DCD      timer_pedal_down
                  |L7.1052|
00041c  d7d4b6af          DCB      215,212,182,175,184,248,210,169,200,161,207,251,0
000420  b8f8d2a9
000424  c8a1cffb
000428  00      
000429  00                DCB      0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L7.1068|
                          DCD      MOTOR_SPEED_INDEX
                  |L7.1072|
                          DCD      MOTOR_SPEED_CYCLE
                  |L7.1076|
                          DCD      MOTOR_SPEED_DISPLAY
                  |L7.1080|
000438  cda3d6b9          DCB      205,163,214,185,0
00043c  00      
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L7.1088|
000440  d7d4b6af          DCB      215,212,182,175,184,248,210,169,"...",0
000444  b8f8d2a9
000448  2e2e2e00
                  |L7.1100|
00044c  613a2f73          DCB      "a:/sounds/zdgy.mp3",0
000450  6f756e64
000454  732f7a64
000458  67792e6d
00045c  703300  
00045f  00                DCB      0
                  |L7.1120|
                          DCD      lg_lcd_init
                  |L7.1124|
000464  4c4344b3          DCB      "LCD",179,245,202,188,187,175,205,234,179,201,161,163,0
000468  f5cabcbb
00046c  afcdeab3
000470  c9a1a300
                  |L7.1140|
000474  bcecb2e2          DCB      188,236,178,226,185,233,193,227,180,171,184,208,198,247,","
000478  b9e9c1e3
00047c  b4abb8d0
000480  c6f72c  
000483  c9cfc9fd          DCB      201,207,201,253,"...",0
000487  2e2e2e00
00048b  00                DCB      0
                  |L7.1164|
00048c  b6a5b8cb          DCB      182,165,184,203,185,233,193,227,"...",0
000490  b9e9c1e3
000494  2e2e2e00
                  |L7.1176|
000498  d2d1b4a5          DCB      210,209,180,165,181,215,0
00049c  b5d700  
00049f  00                DCB      0
                  |L7.1184|
0004a0  b6a5b8cb          DCB      182,165,184,203,185,233,193,227,205,234,179,201,0
0004a4  b9e9c1e3
0004a8  cdeab3c9
0004ac  00      
0004ad  00                DCB      0
0004ae  00                DCB      0
0004af  00                DCB      0
                  |L7.1200|
0004b0  b4a5b5d7          DCB      180,165,181,215
                  |L7.1204|
0004b4  b4fdbbfa          DCB      180,253,187,250,0
0004b8  00      
0004b9  00                DCB      0
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L7.1212|
0004bc  d7d4b6af          DCB      215,212,182,175,197,197,191,213,"...",0
0004c0  c5c5bfd5
0004c4  2e2e2e00
0004c8  e002              B        |L7.1232|
                  |L7.1226|
0004ca  2000              MOVS     r0,#0
0004cc  49b4              LDR      r1,|L7.1952|
0004ce  7008              STRB     r0,[r1,#0]
                  |L7.1232|
;;;793                    }
;;;794                    
;;;795                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
0004d0  48b4              LDR      r0,|L7.1956|
0004d2  7800              LDRB     r0,[r0,#0]  ; Tmy
0004d4  2801              CMP      r0,#1
0004d6  d00a              BEQ      |L7.1262|
;;;796                    {
;;;797                        MOTOR_Stop();//步进电机停止
0004d8  f7fffffe          BL       MOTOR_Stop
;;;798                        MOTOR_SetDir( UP );//方向上升
0004dc  2000              MOVS     r0,#0
0004de  f7fffffe          BL       MOTOR_SetDir
;;;799                        MOTOR_SetSpeed( CYCLE_ZDPK ); //设置电机速
0004e2  2086              MOVS     r0,#0x86
0004e4  f7fffffe          BL       MOTOR_SetSpeed
;;;800                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
0004e8  2001              MOVS     r0,#1
0004ea  49ae              LDR      r1,|L7.1956|
0004ec  7008              STRB     r0,[r1,#0]
                  |L7.1262|
;;;801                    }else //步进电机在上升
;;;802                    {
;;;803                        ;
;;;804                    }
;;;805                    
;;;806                    break;
0004ee  e155              B        |L7.1948|
                  |L7.1264|
;;;807                
;;;808                case DG_ECPK_UP : //二次排空
;;;809                    
;;;810                    if( Motor.counter_step > STEP_MAX_ECPK ) //到达自动排空步数
0004f0  48ad              LDR      r0,|L7.1960|
0004f2  6840              LDR      r0,[r0,#4]  ; Motor
0004f4  f5b05f4d          CMP      r0,#0x3340
0004f8  d902              BLS      |L7.1280|
;;;811                    {
;;;812                        dg_sta = DG_STOP;//电机停止
0004fa  2000              MOVS     r0,#0
0004fc  49a8              LDR      r1,|L7.1952|
0004fe  7008              STRB     r0,[r1,#0]
                  |L7.1280|
;;;813                    }
;;;814                    
;;;815                    if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
000500  48a8              LDR      r0,|L7.1956|
000502  7800              LDRB     r0,[r0,#0]  ; Tmy
000504  2801              CMP      r0,#1
000506  d00a              BEQ      |L7.1310|
;;;816                    {
;;;817                        MOTOR_Stop();//步进电机停止
000508  f7fffffe          BL       MOTOR_Stop
;;;818                        MOTOR_SetDir( UP );//方向上升
00050c  2000              MOVS     r0,#0
00050e  f7fffffe          BL       MOTOR_SetDir
;;;819                        MOTOR_SetSpeed( CYCLE_ZDPK ); //设置电机速度 XXX
000512  2086              MOVS     r0,#0x86
000514  f7fffffe          BL       MOTOR_SetSpeed
;;;820                        Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
000518  2001              MOVS     r0,#1
00051a  49a2              LDR      r1,|L7.1956|
00051c  7008              STRB     r0,[r1,#0]
                  |L7.1310|
;;;821                    }else //步进电机在上升
;;;822                    {
;;;823                        ;
;;;824                    }
;;;825                    
;;;826                    break;
00051e  e13d              B        |L7.1948|
                  |L7.1312|
;;;827                    
;;;828                case DG_UP : //顶杆上升
;;;829                    
;;;830                    if( dg_sta_c != dg_sta )
000520  489f              LDR      r0,|L7.1952|
000522  7800              LDRB     r0,[r0,#0]  ; dg_sta
000524  4284              CMP      r4,r0
000526  d006              BEQ      |L7.1334|
;;;831                    {
;;;832                        dg_sta_c = dg_sta;
000528  489d              LDR      r0,|L7.1952|
00052a  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;833                        SetTextValue(0,26,"顶杆上升...");
00052c  a29f              ADR      r2,|L7.1964|
00052e  211a              MOVS     r1,#0x1a
000530  2000              MOVS     r0,#0
000532  f7fffffe          BL       SetTextValue
                  |L7.1334|
;;;834                    }
;;;835                    
;;;836                    if( ( Motor.counter_step >= Motor.max_step ) //到达顶部
000536  489c              LDR      r0,|L7.1960|
000538  6840              LDR      r0,[r0,#4]  ; Motor
00053a  499b              LDR      r1,|L7.1960|
00053c  6889              LDR      r1,[r1,#8]  ; Motor
00053e  4288              CMP      r0,r1
000540  d204              BCS      |L7.1356|
;;;837                     || ( Tmy.Sensor.bit.top ) )
000542  4898              LDR      r0,|L7.1956|
000544  79c0              LDRB     r0,[r0,#7]  ; Tmy
000546  f3c00040          UBFX     r0,r0,#1,#1
00054a  b128              CBZ      r0,|L7.1368|
                  |L7.1356|
;;;838                    {
;;;839                        MOTOR_Stop();//这个是冗余操作，多一次保护
00054c  f7fffffe          BL       MOTOR_Stop
;;;840                        dg_sta = DG_STOP_TOP;//停留在顶部
000550  2004              MOVS     r0,#4
000552  4993              LDR      r1,|L7.1952|
000554  7008              STRB     r0,[r1,#0]
000556  e02e              B        |L7.1462|
                  |L7.1368|
;;;841                    }else
;;;842                    {
;;;843                        if( Tmy.Motor.state != MOTOR_UP ) //步进电机未上升
000558  4892              LDR      r0,|L7.1956|
00055a  7800              LDRB     r0,[r0,#0]  ; Tmy
00055c  2801              CMP      r0,#1
00055e  d02a              BEQ      |L7.1462|
;;;844                        {
;;;845                            Motor.speed = 1;
000560  2001              MOVS     r0,#1
000562  4991              LDR      r1,|L7.1960|
000564  7008              STRB     r0,[r1,#0]
;;;846                            tem8 = MOTOR_SPEED_INDEX[Motor.gear][Motor.speed-1];
000566  4608              MOV      r0,r1
000568  7840              LDRB     r0,[r0,#1]  ; Motor
00056a  eb000040          ADD      r0,r0,r0,LSL #1
00056e  4992              LDR      r1,|L7.1976|
000570  eb010140          ADD      r1,r1,r0,LSL #1
000574  488c              LDR      r0,|L7.1960|
000576  7800              LDRB     r0,[r0,#0]  ; Motor
000578  1e40              SUBS     r0,r0,#1
00057a  f8115010          LDRB     r5,[r1,r0,LSL #1]
;;;847            	            Tmy.speed = tem8;
00057e  4889              LDR      r0,|L7.1956|
000580  7105              STRB     r5,[r0,#4]
;;;848            	             
;;;849            	            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度
000582  498e              LDR      r1,|L7.1980|
000584  f8310015          LDRH     r0,[r1,r5,LSL #1]
000588  f7fffffe          BL       MOTOR_SetSpeed
;;;850            	            SetTextValue(0, 16, &MOTOR_SPEED_DISPLAY[tem8][0]); 
00058c  eb0500c5          ADD      r0,r5,r5,LSL #3
000590  498b              LDR      r1,|L7.1984|
000592  1842              ADDS     r2,r0,r1
000594  2110              MOVS     r1,#0x10
000596  2000              MOVS     r0,#0
000598  f7fffffe          BL       SetTextValue
;;;851        	            
;;;852                            MOTOR_Stop(); //电机暂停
00059c  f7fffffe          BL       MOTOR_Stop
;;;853                            MOTOR_SetDir( UP ); //设置电机方向
0005a0  2000              MOVS     r0,#0
0005a2  f7fffffe          BL       MOTOR_SetDir
;;;854                            MOTOR_SetSpeed( MOTOR_SPEED_CYCLE[tem8] ); //设置电机速度，运行
0005a6  4985              LDR      r1,|L7.1980|
0005a8  f8310015          LDRH     r0,[r1,r5,LSL #1]
0005ac  f7fffffe          BL       MOTOR_SetSpeed
;;;855                            
;;;856                            //SetTextValue(0,18,"顶杆检查上升"); //更新提示
;;;857                        
;;;858                            Tmy.Motor.state = MOTOR_UP;//
0005b0  2001              MOVS     r0,#1
0005b2  497c              LDR      r1,|L7.1956|
0005b4  7008              STRB     r0,[r1,#0]
                  |L7.1462|
;;;859                        }
;;;860                    }
;;;861                    
;;;862    //                if( Tmy.Motor.state != MOTOR_UP ) //步进电机不是在上升
;;;863    //                {
;;;864    //                    MOTOR_Stop();//步进电机停止
;;;865    //                    MOTOR_SetDir( UP );//方向上升
;;;866    //                    MOTOR_SetSpeed( CYCLE_KSJ ); //设置电机速度 XXX
;;;867    //                    Tmy.Motor.state = MOTOR_UP;//更改步进电机状态
;;;868    //                }else //步进电机在上升
;;;869    //                {
;;;870    //                    if( key_v == PEDAL_UP )//检测到脚踏抬起
;;;871    //                    {
;;;872    //                        dg_sta = DG_STOP;//停止
;;;873    //                    }
;;;874    //                }
;;;875                    
;;;876                    break;
0005b6  e0f1              B        |L7.1948|
                  |L7.1464|
;;;877                
;;;878                case DG_STOP_TOP : //停留在顶部
;;;879                    
;;;880                    if( dg_sta_c != dg_sta )
0005b8  4879              LDR      r0,|L7.1952|
0005ba  7800              LDRB     r0,[r0,#0]  ; dg_sta
0005bc  4284              CMP      r4,r0
0005be  d006              BEQ      |L7.1486|
;;;881                    {
;;;882                        dg_sta_c = dg_sta;
0005c0  4877              LDR      r0,|L7.1952|
0005c2  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;883                        SetTextValue(0,26,"到顶停机待机");
0005c4  a27f              ADR      r2,|L7.1988|
0005c6  211a              MOVS     r1,#0x1a
0005c8  2000              MOVS     r0,#0
0005ca  f7fffffe          BL       SetTextValue
                  |L7.1486|
;;;884                    }
;;;885                    
;;;886                    if( Tmy.Motor.state != MOTOR_STOP ) //步进电机在运行
0005ce  4875              LDR      r0,|L7.1956|
0005d0  7800              LDRB     r0,[r0,#0]  ; Tmy
0005d2  b138              CBZ      r0,|L7.1508|
;;;887                    {
;;;888                        MOTOR_Stop();//电机暂停
0005d4  f7fffffe          BL       MOTOR_Stop
;;;889                        MOTOR_SetDir( DOWN ); //方向下降
0005d8  2001              MOVS     r0,#1
0005da  f7fffffe          BL       MOTOR_SetDir
;;;890                        Tmy.Motor.state = MOTOR_STOP;//更改电机状态
0005de  2000              MOVS     r0,#0
0005e0  4970              LDR      r1,|L7.1956|
0005e2  7008              STRB     r0,[r1,#0]
                  |L7.1508|
;;;891                    }
;;;892                    
;;;893                    if( key_v == PEDAL_DOWN ) //检测到踩脚踏 // || ( key_v == PEDAL_DOWN ) ) //或 按复位键
0005e4  2e19              CMP      r6,#0x19
0005e6  d108              BNE      |L7.1530|
;;;894                    {
;;;895                        //if( dev_sta == DEV_RUN )//设备运行状态
;;;896                        {
;;;897                            SetTextValue(0,26,"顶杆归零...");
0005e8  f2af1260          ADR      r2,|L7.1164|
0005ec  211a              MOVS     r1,#0x1a
0005ee  2000              MOVS     r0,#0
0005f0  f7fffffe          BL       SetTextValue
;;;898                            dg_sta = DG_FIX_DOWN;//顶杆归零
0005f4  200f              MOVS     r0,#0xf
0005f6  496a              LDR      r1,|L7.1952|
0005f8  7008              STRB     r0,[r1,#0]
                  |L7.1530|
;;;899                        }
;;;900                    }
;;;901                    
;;;902    				if( 1 )//在xxx速度下，到顶后自动归零
;;;903    				{
;;;904    					;
;;;905    				}
;;;906    				
;;;907                    break;
0005fa  e0cf              B        |L7.1948|
                  |L7.1532|
;;;908                    
;;;909                case DG_DOWN : //顶杆下降 可能没有此状态！！！
;;;910                    
;;;911                    if( dg_sta_c != dg_sta )
0005fc  4868              LDR      r0,|L7.1952|
0005fe  7800              LDRB     r0,[r0,#0]  ; dg_sta
000600  4284              CMP      r4,r0
000602  d006              BEQ      |L7.1554|
;;;912                    {
;;;913                        dg_sta_c = dg_sta;
000604  4866              LDR      r0,|L7.1952|
000606  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;914                        SetTextValue(0,26,"顶杆下降...");
000608  a272              ADR      r2,|L7.2004|
00060a  211a              MOVS     r1,#0x1a
00060c  2000              MOVS     r0,#0
00060e  f7fffffe          BL       SetTextValue
                  |L7.1554|
;;;915                    }
;;;916                    
;;;917                    if(Tmy.Sensor.bit.bottom) //到达底部
000612  4864              LDR      r0,|L7.1956|
000614  79c0              LDRB     r0,[r0,#7]  ; Tmy
000616  f0000001          AND      r0,r0,#1
00061a  b110              CBZ      r0,|L7.1570|
;;;918                    {
;;;919                        dg_sta = DG_STOP_TOP;//停留在底部
00061c  2004              MOVS     r0,#4
00061e  4960              LDR      r1,|L7.1952|
000620  7008              STRB     r0,[r1,#0]
                  |L7.1570|
;;;920                    }
;;;921                    
;;;922                    if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机不是在下降
000622  4860              LDR      r0,|L7.1956|
000624  7800              LDRB     r0,[r0,#0]  ; Tmy
000626  2802              CMP      r0,#2
000628  d00b              BEQ      |L7.1602|
;;;923                    {
;;;924                        MOTOR_Stop();//步进电机停止
00062a  f7fffffe          BL       MOTOR_Stop
;;;925                        MOTOR_SetDir( DOWN );//方向上升
00062e  2001              MOVS     r0,#1
000630  f7fffffe          BL       MOTOR_SetDir
;;;926                        MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度 XXX
000634  2026              MOVS     r0,#0x26
000636  f7fffffe          BL       MOTOR_SetSpeed
;;;927                        Tmy.Motor.state = MOTOR_DOWN;//更改步进电机状态
00063a  2002              MOVS     r0,#2
00063c  4959              LDR      r1,|L7.1956|
00063e  7008              STRB     r0,[r1,#0]
000640  e004              B        |L7.1612|
                  |L7.1602|
;;;928                    }else //步进电机在下降
;;;929                    {
;;;930                        if( key_v == PEDAL_UP )//检测到脚踏抬起
000642  2e1a              CMP      r6,#0x1a
000644  d102              BNE      |L7.1612|
;;;931                        {
;;;932                            dg_sta = DG_STOP;//停止
000646  2000              MOVS     r0,#0
000648  4955              LDR      r1,|L7.1952|
00064a  7008              STRB     r0,[r1,#0]
                  |L7.1612|
;;;933                        }
;;;934                    }
;;;935                    break;
00064c  e0a6              B        |L7.1948|
                  |L7.1614|
;;;936                    
;;;937                case DG_HX_DOWN : //回吸下降
;;;938    			
;;;939                    if( dg_sta_c != dg_sta )
00064e  4854              LDR      r0,|L7.1952|
000650  7800              LDRB     r0,[r0,#0]  ; dg_sta
000652  4284              CMP      r4,r0
000654  d006              BEQ      |L7.1636|
;;;940                    {
;;;941                        dg_sta_c = dg_sta;
000656  4852              LDR      r0,|L7.1952|
000658  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;942                        SetTextValue(0,26,"回吸下降...");
00065a  a261              ADR      r2,|L7.2016|
00065c  211a              MOVS     r1,#0x1a
00065e  2000              MOVS     r0,#0
000660  f7fffffe          BL       SetTextValue
                  |L7.1636|
;;;943                    }
;;;944                    
;;;945                    if( ( Motor.counter_step <= Motor.counter_hx_step )//到达回吸底部
000664  4850              LDR      r0,|L7.1960|
000666  6840              LDR      r0,[r0,#4]  ; Motor
000668  494f              LDR      r1,|L7.1960|
00066a  68c9              LDR      r1,[r1,#0xc]  ; Motor
00066c  4288              CMP      r0,r1
00066e  d902              BLS      |L7.1654|
;;;946    								  ||( Motor.counter_step == 0 ) )//触底,此处对触情况底做了限制
000670  484d              LDR      r0,|L7.1960|
000672  6840              LDR      r0,[r0,#4]  ; Motor
000674  b9a0              CBNZ     r0,|L7.1696|
                  |L7.1654|
;;;947                    {
;;;948                        MOTOR_Stop();//电机停止
000676  f7fffffe          BL       MOTOR_Stop
;;;949                        Motor.counter_hx_step = Motor.counter_step + Motor.max_hx_step;
00067a  484b              LDR      r0,|L7.1960|
00067c  6840              LDR      r0,[r0,#4]  ; Motor
00067e  494a              LDR      r1,|L7.1960|
000680  6909              LDR      r1,[r1,#0x10]  ; Motor
000682  4408              ADD      r0,r0,r1
000684  4948              LDR      r1,|L7.1960|
000686  60c8              STR      r0,[r1,#0xc]  ; Motor
;;;950                        
;;;951                        if( Tmy.speed == SLOW )   //常慢速
000688  4846              LDR      r0,|L7.1956|
00068a  7900              LDRB     r0,[r0,#4]  ; Tmy
00068c  2801              CMP      r0,#1
00068e  d103              BNE      |L7.1688|
;;;952                        {
;;;953                            vTaskDelay(pdMS_TO_TICKS(1000));//延时1秒
000690  f44f707a          MOV      r0,#0x3e8
000694  f7fffffe          BL       vTaskDelay
                  |L7.1688|
;;;954                        }
;;;955                        dg_sta = DG_HX_UP;//
000698  200a              MOVS     r0,#0xa
00069a  4941              LDR      r1,|L7.1952|
00069c  7008              STRB     r0,[r1,#0]
00069e  e013              B        |L7.1736|
                  |L7.1696|
;;;956                    }else
;;;957                    {
;;;958                        if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机未下降
0006a0  4840              LDR      r0,|L7.1956|
0006a2  7800              LDRB     r0,[r0,#0]  ; Tmy
0006a4  2802              CMP      r0,#2
0006a6  d00f              BEQ      |L7.1736|
;;;959                        {
;;;960                            MOTOR_Stop(); //电机暂停
0006a8  f7fffffe          BL       MOTOR_Stop
;;;961                            MOTOR_SetDir( DOWN ); //设置电机方向
0006ac  2001              MOVS     r0,#1
0006ae  f7fffffe          BL       MOTOR_SetDir
;;;962                            MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度，运行
0006b2  2086              MOVS     r0,#0x86
0006b4  f7fffffe          BL       MOTOR_SetSpeed
;;;963                            SetTextValue(0,18,"回吸下降"); //更新提示
0006b8  a24c              ADR      r2,|L7.2028|
0006ba  2112              MOVS     r1,#0x12
0006bc  2000              MOVS     r0,#0
0006be  f7fffffe          BL       SetTextValue
;;;964                            Tmy.Motor.state = MOTOR_DOWN;//
0006c2  2002              MOVS     r0,#2
0006c4  4937              LDR      r1,|L7.1956|
0006c6  7008              STRB     r0,[r1,#0]
                  |L7.1736|
;;;965                        }
;;;966                    }
;;;967                    
;;;968    //	            if( Motor.counter_step > Motor.counter_hx_step ) //
;;;969    //	            {
;;;970    //	                ;//行进中
;;;971    //	            }else //到达回吸底部
;;;972    //	            {
;;;973    //	                MOTOR_Stop();
;;;974    //	                dg_sta = DG_HX_UP;//
;;;975    //                    Motor.counter_hx_step = Motor.counter_step + Motor.max_hx_step;
;;;976    //                    MOTOR_SetDir( UP );
;;;977    //	                MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度
;;;978    //                    SetTextValue(0,18,"回吸上升");
;;;979    //                    if( Tmy.speed == SLOW )   //常慢速
;;;980    //                    {
;;;981    //                        vTaskDelay(pdMS_TO_TICKS(1000));//延时1秒
;;;982    //                    }
;;;983    //	            }
;;;984    	            
;;;985    	            break;
0006c8  e068              B        |L7.1948|
                  |L7.1738|
;;;986    	            
;;;987    	        case DG_HX_UP : //回吸上升
;;;988    	            
;;;989    	            if( dg_sta_c != dg_sta )
0006ca  4835              LDR      r0,|L7.1952|
0006cc  7800              LDRB     r0,[r0,#0]  ; dg_sta
0006ce  4284              CMP      r4,r0
0006d0  d006              BEQ      |L7.1760|
;;;990                    {
;;;991                        dg_sta_c = dg_sta;
0006d2  4833              LDR      r0,|L7.1952|
0006d4  7804              LDRB     r4,[r0,#0]  ; dg_sta
;;;992                        SetTextValue(0,26,"回吸上升...");
0006d6  a248              ADR      r2,|L7.2040|
0006d8  211a              MOVS     r1,#0x1a
0006da  2000              MOVS     r0,#0
0006dc  f7fffffe          BL       SetTextValue
                  |L7.1760|
;;;993                    }
;;;994                    
;;;995                    if( Motor.counter_step > Motor.counter_hx_step-1 )//到达回吸顶部
0006e0  4831              LDR      r0,|L7.1960|
0006e2  6841              LDR      r1,[r0,#4]  ; Motor
0006e4  68c0              LDR      r0,[r0,#0xc]  ; Motor
0006e6  1e40              SUBS     r0,r0,#1
0006e8  4281              CMP      r1,r0
0006ea  d905              BLS      |L7.1784|
;;;996                    {
;;;997                        MOTOR_Stop(); //电机停止
0006ec  f7fffffe          BL       MOTOR_Stop
;;;998                        //Tmy.state.bit.hx = 0;
;;;999                        dg_sta = DG_STOP; //
0006f0  2000              MOVS     r0,#0
0006f2  492b              LDR      r1,|L7.1952|
0006f4  7008              STRB     r0,[r1,#0]
0006f6  e013              B        |L7.1824|
                  |L7.1784|
;;;1000                   }else
;;;1001                   {
;;;1002                       if( Tmy.Motor.state != MOTOR_UP ) //步进电机未下降
0006f8  482a              LDR      r0,|L7.1956|
0006fa  7800              LDRB     r0,[r0,#0]  ; Tmy
0006fc  2801              CMP      r0,#1
0006fe  d00f              BEQ      |L7.1824|
;;;1003                       {
;;;1004                           MOTOR_Stop(); //电机暂停
000700  f7fffffe          BL       MOTOR_Stop
;;;1005                           MOTOR_SetDir( UP ); //设置电机方向
000704  2000              MOVS     r0,#0
000706  f7fffffe          BL       MOTOR_SetDir
;;;1006                           MOTOR_SetSpeed( CYCLE_HX ); //设置电机速度，运行
00070a  2086              MOVS     r0,#0x86
00070c  f7fffffe          BL       MOTOR_SetSpeed
;;;1007                           SetTextValue(0,18,"回吸上升"); //更新提示
000710  a23c              ADR      r2,|L7.2052|
000712  2112              MOVS     r1,#0x12
000714  2000              MOVS     r0,#0
000716  f7fffffe          BL       SetTextValue
;;;1008                           Tmy.Motor.state = MOTOR_UP;//
00071a  2001              MOVS     r0,#1
00071c  4921              LDR      r1,|L7.1956|
00071e  7008              STRB     r0,[r1,#0]
                  |L7.1824|
;;;1009                       }
;;;1010                   }
;;;1011                   
;;;1012   //	            if( Motor.counter_step < Motor.counter_hx_step ) 
;;;1013   //	            {
;;;1014   //	                ;//行进中
;;;1015   //	            }else //到达回吸顶部
;;;1016   //	            {
;;;1017   //	                MOTOR_Stop();
;;;1018   //	                Tmy.state.bit.hx = 0;
;;;1019   //	                Tmy.work_state = STA_STANDBY;
;;;1020   //	            }
;;;1021   	            
;;;1022   	            break;
000720  e03c              B        |L7.1948|
                  |L7.1826|
;;;1023   	            
;;;1024               case DG_FIX_UP : //顶杆检查上升
;;;1025                   
;;;1026                   if( ( Motor.counter_step >= Motor.max_step ) //到达顶部
000722  4821              LDR      r0,|L7.1960|
000724  6840              LDR      r0,[r0,#4]  ; Motor
000726  4920              LDR      r1,|L7.1960|
000728  6889              LDR      r1,[r1,#8]  ; Motor
00072a  4288              CMP      r0,r1
00072c  d204              BCS      |L7.1848|
;;;1027                    || ( Tmy.Sensor.bit.top ) )
00072e  481d              LDR      r0,|L7.1956|
000730  79c0              LDRB     r0,[r0,#7]  ; Tmy
000732  f3c00040          UBFX     r0,r0,#1,#1
000736  b128              CBZ      r0,|L7.1860|
                  |L7.1848|
;;;1028                   {
;;;1029                       MOTOR_Stop();//这个是冗余操作，多一次保护
000738  f7fffffe          BL       MOTOR_Stop
;;;1030                       dg_sta = DG_STOP_TOP;//停留在顶部
00073c  2004              MOVS     r0,#4
00073e  4918              LDR      r1,|L7.1952|
000740  7008              STRB     r0,[r1,#0]
000742  e00e              B        |L7.1890|
                  |L7.1860|
;;;1031                   }else
;;;1032                   {
;;;1033                       if( Tmy.Motor.state != MOTOR_UP ) //步进电机未上升
000744  4817              LDR      r0,|L7.1956|
000746  7800              LDRB     r0,[r0,#0]  ; Tmy
000748  2801              CMP      r0,#1
00074a  d00a              BEQ      |L7.1890|
;;;1034                       {
;;;1035                           MOTOR_Stop(); //电机暂停
00074c  f7fffffe          BL       MOTOR_Stop
;;;1036                           MOTOR_SetDir( UP ); //设置电机方向
000750  2000              MOVS     r0,#0
000752  f7fffffe          BL       MOTOR_SetDir
;;;1037                           MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度，运行
000756  2026              MOVS     r0,#0x26
000758  f7fffffe          BL       MOTOR_SetSpeed
;;;1038                           //SetTextValue(0,18,"顶杆检查上升"); //更新提示
;;;1039                       
;;;1040                           Tmy.Motor.state = MOTOR_UP;//
00075c  2001              MOVS     r0,#1
00075e  4911              LDR      r1,|L7.1956|
000760  7008              STRB     r0,[r1,#0]
                  |L7.1890|
;;;1041                       }
;;;1042                   }
;;;1043                   
;;;1044                   break;
000762  e01b              B        |L7.1948|
                  |L7.1892|
;;;1045                   
;;;1046               case DG_FIX_DOWN : //顶杆检查下降
;;;1047                   
;;;1048                   if( Tmy.Sensor.bit.bottom )//检测到底
000764  480f              LDR      r0,|L7.1956|
000766  79c0              LDRB     r0,[r0,#7]  ; Tmy
000768  f0000001          AND      r0,r0,#1
00076c  b128              CBZ      r0,|L7.1914|
;;;1049                   {
;;;1050                       MOTOR_Stop();//这个是冗余操作，多一次保护
00076e  f7fffffe          BL       MOTOR_Stop
;;;1051                       dg_sta = DG_STOP_BOT;//
000772  2005              MOVS     r0,#5
000774  490a              LDR      r1,|L7.1952|
000776  7008              STRB     r0,[r1,#0]
000778  e00e              B        |L7.1944|
                  |L7.1914|
;;;1052                   }else
;;;1053                   {
;;;1054                       if( Tmy.Motor.state != MOTOR_DOWN ) //步进电机未下降
00077a  480a              LDR      r0,|L7.1956|
00077c  7800              LDRB     r0,[r0,#0]  ; Tmy
00077e  2802              CMP      r0,#2
000780  d00a              BEQ      |L7.1944|
;;;1055                       {
;;;1056                           MOTOR_Stop(); //电机暂停
000782  f7fffffe          BL       MOTOR_Stop
;;;1057                           MOTOR_SetDir( DOWN ); //设置电机方向
000786  2001              MOVS     r0,#1
000788  f7fffffe          BL       MOTOR_SetDir
;;;1058                           MOTOR_SetSpeed( CYCLE_DGJC ); //设置电机速度，运行
00078c  2026              MOVS     r0,#0x26
00078e  f7fffffe          BL       MOTOR_SetSpeed
;;;1059                           //SetTextValue(0,18,"顶杆检查下降"); //更新提示
;;;1060                       
;;;1061                           Tmy.Motor.state = MOTOR_DOWN;//
000792  2002              MOVS     r0,#2
000794  4903              LDR      r1,|L7.1956|
000796  7008              STRB     r0,[r1,#0]
                  |L7.1944|
;;;1062                       }
;;;1063                   }
;;;1064                   
;;;1065                   break;
000798  e000              B        |L7.1948|
                  |L7.1946|
;;;1066               
;;;1067               default : 
;;;1068                   break;
00079a  bf00              NOP      
                  |L7.1948|
00079c  bf00              NOP                            ;615
                  |L7.1950|
00079e  e446              B        |L7.46|
;;;1069           }
;;;1070           
;;;1071       }
;;;1072   }
;;;1073   
                          ENDP

                  |L7.1952|
                          DCD      dg_sta
                  |L7.1956|
                          DCD      Tmy
                  |L7.1960|
                          DCD      Motor
                  |L7.1964|
0007ac  b6a5b8cb          DCB      182,165,184,203,201,207,201,253,"...",0
0007b0  c9cfc9fd
0007b4  2e2e2e00
                  |L7.1976|
                          DCD      MOTOR_SPEED_INDEX
                  |L7.1980|
                          DCD      MOTOR_SPEED_CYCLE
                  |L7.1984|
                          DCD      MOTOR_SPEED_DISPLAY
                  |L7.1988|
0007c4  b5bdb6a5          DCB      181,189,182,165,205,163,187,250,180,253,187,250,0
0007c8  cda3bbfa
0007cc  b4fdbbfa
0007d0  00      
0007d1  00                DCB      0
0007d2  00                DCB      0
0007d3  00                DCB      0
                  |L7.2004|
0007d4  b6a5b8cb          DCB      182,165,184,203,207,194,189,181,"...",0
0007d8  cfc2bdb5
0007dc  2e2e2e00
                  |L7.2016|
0007e0  bbd8cefc          DCB      187,216,206,252,207,194,189,181,"...",0
0007e4  cfc2bdb5
0007e8  2e2e2e00
                  |L7.2028|
0007ec  bbd8cefc          DCB      187,216,206,252,207,194,189,181,0
0007f0  cfc2bdb5
0007f4  00      
0007f5  00                DCB      0
0007f6  00                DCB      0
0007f7  00                DCB      0
                  |L7.2040|
0007f8  bbd8cefc          DCB      187,216,206,252,201,207,201,253,"...",0
0007fc  c9cfc9fd
000800  2e2e2e00
                  |L7.2052|
000804  bbd8cefc          DCB      187,216,206,252,201,207,201,253,0
000808  c9cfc9fd
00080c  00      
00080d  00                DCB      0
00080e  00                DCB      0
00080f  00                DCB      0

                          AREA ||i.vTaskSensor||, CODE, READONLY, ALIGN=2

                  vTaskSensor PROC
;;;230    */
;;;231    static void vTaskSensor(void *pvParameters)
000000  2400              MOVS     r4,#0
;;;232    {
;;;233    	uint8_t tem8 = 0;
;;;234    	
;;;235    //    SoftWdtInit( vTaskSensor_ID, 10 );
;;;236        
;;;237        //timer_sensor = 4;
;;;238        while( 1 )
000002  e08d              B        |L8.288|
                  |L8.4|
;;;239        {
;;;240    //        SoftWdtFed( vTaskSensor_ID );
;;;241            
;;;242            //vTaskDelay( pdMS_TO_TICKS(1000) );//
;;;243            vTaskDelay( 2 );
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       vTaskDelay
;;;244            
;;;245            ADC1_GetV();
00000a  f7fffffe          BL       ADC1_GetV
;;;246            //Tmy.pressure = HX711_Read();
;;;247            
;;;248            //bsp_KeyScan();
;;;249            if( tem8 != Tmy.Sensor.bit.bottom )
00000e  4845              LDR      r0,|L8.292|
000010  79c0              LDRB     r0,[r0,#7]  ; Tmy
000012  f0000001          AND      r0,r0,#1
000016  42a0              CMP      r0,r4
000018  d013              BEQ      |L8.66|
;;;250            {
;;;251                tem8 = Tmy.Sensor.bit.bottom;
00001a  4842              LDR      r0,|L8.292|
00001c  79c0              LDRB     r0,[r0,#7]  ; Tmy
00001e  f0000401          AND      r4,r0,#1
;;;252                
;;;253                if( Tmy.Sensor.bit.bottom ) //触底检测
000022  4840              LDR      r0,|L8.292|
000024  79c0              LDRB     r0,[r0,#7]  ; Tmy
000026  f0000001          AND      r0,r0,#1
00002a  b128              CBZ      r0,|L8.56|
;;;254                {
;;;255                    SetTextValue(0,29,"已触底"); //已触底
00002c  a23e              ADR      r2,|L8.296|
00002e  211d              MOVS     r1,#0x1d
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       SetTextValue
000036  e004              B        |L8.66|
                  |L8.56|
;;;256                }else
;;;257                {
;;;258                    SetTextValue(0,29,"未触底"); //未触底
000038  a23d              ADR      r2,|L8.304|
00003a  211d              MOVS     r1,#0x1d
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       SetTextValue
                  |L8.66|
;;;259                }
;;;260            }
;;;261            
;;;262    		if( bsp_GetKeyState( KID_K1 ) ) //紧急制动按钮
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       bsp_GetKeyState
000048  b130              CBZ      r0,|L8.88|
;;;263            {
;;;264                Tmy.Key.jjzd = 0; //
00004a  4836              LDR      r0,|L8.292|
00004c  7940              LDRB     r0,[r0,#5]  ; Tmy
00004e  f0200040          BIC      r0,r0,#0x40
000052  4934              LDR      r1,|L8.292|
000054  7148              STRB     r0,[r1,#5]
000056  e006              B        |L8.102|
                  |L8.88|
;;;265            }else //按下
;;;266            {
;;;267                Tmy.Key.jjzd = 1; //
000058  4832              LDR      r0,|L8.292|
00005a  7940              LDRB     r0,[r0,#5]  ; Tmy
00005c  f0200040          BIC      r0,r0,#0x40
000060  3040              ADDS     r0,r0,#0x40
000062  4930              LDR      r1,|L8.292|
000064  7148              STRB     r0,[r1,#5]
                  |L8.102|
;;;268            }
;;;269    		
;;;270            if( bsp_GetKeyState( KID_ZERO ) ) //触底检测
000066  2009              MOVS     r0,#9
000068  f7fffffe          BL       bsp_GetKeyState
00006c  b130              CBZ      r0,|L8.124|
;;;271            {
;;;272                Tmy.Sensor.bit.bottom = 0; //未触底
00006e  482d              LDR      r0,|L8.292|
000070  79c0              LDRB     r0,[r0,#7]  ; Tmy
000072  f0200001          BIC      r0,r0,#1
000076  492b              LDR      r1,|L8.292|
000078  71c8              STRB     r0,[r1,#7]
00007a  e006              B        |L8.138|
                  |L8.124|
;;;273            }else
;;;274            {
;;;275                Tmy.Sensor.bit.bottom = 1; //已触底
00007c  4829              LDR      r0,|L8.292|
00007e  79c0              LDRB     r0,[r0,#7]  ; Tmy
000080  f0200001          BIC      r0,r0,#1
000084  1c40              ADDS     r0,r0,#1
000086  4927              LDR      r1,|L8.292|
000088  71c8              STRB     r0,[r1,#7]
                  |L8.138|
;;;276            }
;;;277            
;;;278            //if( Motor.counter_step > Motor.counter_hx_step-1 ) //触顶检测 //if( bsp_GetKeyState( KID_ZERO ) ) 
;;;279            if( Motor.counter_step >= Motor.max_step )//触顶检测
00008a  482b              LDR      r0,|L8.312|
00008c  6840              LDR      r0,[r0,#4]  ; Motor
00008e  492a              LDR      r1,|L8.312|
000090  6889              LDR      r1,[r1,#8]  ; Motor
000092  4288              CMP      r0,r1
000094  d307              BCC      |L8.166|
;;;280            {
;;;281                Tmy.Sensor.bit.top = 1; //已触顶
000096  4823              LDR      r0,|L8.292|
000098  79c0              LDRB     r0,[r0,#7]  ; Tmy
00009a  f0200002          BIC      r0,r0,#2
00009e  1c80              ADDS     r0,r0,#2
0000a0  4920              LDR      r1,|L8.292|
0000a2  71c8              STRB     r0,[r1,#7]
0000a4  e005              B        |L8.178|
                  |L8.166|
;;;282            }else
;;;283            {
;;;284                Tmy.Sensor.bit.top = 0; //未触顶
0000a6  481f              LDR      r0,|L8.292|
0000a8  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000aa  f0200002          BIC      r0,r0,#2
0000ae  491d              LDR      r1,|L8.292|
0000b0  71c8              STRB     r0,[r1,#7]
                  |L8.178|
;;;285            }
;;;286            
;;;287    //        if( Tmy.State.bit.init ) //初始化完成
;;;288    //        {
;;;289    //            if( Motor.counter_step == 0 )//触低底检测
;;;290    //            {
;;;291    //                Tmy.Sensor.bit.bottom = 1; //已触底
;;;292    //            }else
;;;293    //            {
;;;294    //                Tmy.Sensor.bit.bottom = 0; //未触底
;;;295    //            }
;;;296    //        }
;;;297            
;;;298            if( bsp_GetKeyState( KID_SYRINGE ) ) //注射器类型
0000b2  200a              MOVS     r0,#0xa
0000b4  f7fffffe          BL       bsp_GetKeyState
0000b8  b138              CBZ      r0,|L8.202|
;;;299            {
;;;300                Tmy.Sensor.bit.SyringeType = SYRINGE_2ML2; //2.2ml
0000ba  481a              LDR      r0,|L8.292|
0000bc  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000be  f0200004          BIC      r0,r0,#4
0000c2  1d00              ADDS     r0,r0,#4
0000c4  4917              LDR      r1,|L8.292|
0000c6  71c8              STRB     r0,[r1,#7]
0000c8  e005              B        |L8.214|
                  |L8.202|
;;;301            }else
;;;302            {
;;;303                Tmy.Sensor.bit.SyringeType = SYRINGE_1ML8; //1.8ml
0000ca  4816              LDR      r0,|L8.292|
0000cc  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000ce  f0200004          BIC      r0,r0,#4
0000d2  4914              LDR      r1,|L8.292|
0000d4  71c8              STRB     r0,[r1,#7]
                  |L8.214|
;;;304            }
;;;305            
;;;306            if( bsp_GetKeyState( KID_SYRINGE ) ) //注射器插入状态 XXX
0000d6  200a              MOVS     r0,#0xa
0000d8  f7fffffe          BL       bsp_GetKeyState
0000dc  b138              CBZ      r0,|L8.238|
;;;307            {
;;;308                Tmy.Sensor.bit.SyringeState = SYRINGE_ON; //已插入
0000de  4811              LDR      r0,|L8.292|
0000e0  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000e2  f0200008          BIC      r0,r0,#8
0000e6  3008              ADDS     r0,r0,#8
0000e8  490e              LDR      r1,|L8.292|
0000ea  71c8              STRB     r0,[r1,#7]
0000ec  e005              B        |L8.250|
                  |L8.238|
;;;309            }else
;;;310            {
;;;311                Tmy.Sensor.bit.SyringeState = SYRINGE_OFF; //未插入
0000ee  480d              LDR      r0,|L8.292|
0000f0  79c0              LDRB     r0,[r0,#7]  ; Tmy
0000f2  f0200008          BIC      r0,r0,#8
0000f6  490b              LDR      r1,|L8.292|
0000f8  71c8              STRB     r0,[r1,#7]
                  |L8.250|
;;;312            }
;;;313            
;;;314            if( Tmy.pressure > MAX_PRESSURE ) //过压
0000fa  480a              LDR      r0,|L8.292|
0000fc  68c0              LDR      r0,[r0,#0xc]  ; Tmy
0000fe  f5b07f7a          CMP      r0,#0x3e8
000102  d907              BLS      |L8.276|
;;;315            {
;;;316                Tmy.Sensor.bit.OverPressure = 1; //已插入
000104  4807              LDR      r0,|L8.292|
000106  79c0              LDRB     r0,[r0,#7]  ; Tmy
000108  f0200010          BIC      r0,r0,#0x10
00010c  3010              ADDS     r0,r0,#0x10
00010e  4905              LDR      r1,|L8.292|
000110  71c8              STRB     r0,[r1,#7]
000112  e005              B        |L8.288|
                  |L8.276|
;;;317            }else
;;;318            {
;;;319                Tmy.Sensor.bit.OverPressure = 0; //未插入
000114  4803              LDR      r0,|L8.292|
000116  79c0              LDRB     r0,[r0,#7]  ; Tmy
000118  f0200010          BIC      r0,r0,#0x10
00011c  4901              LDR      r1,|L8.292|
00011e  71c8              STRB     r0,[r1,#7]
                  |L8.288|
000120  e770              B        |L8.4|
;;;320            }
;;;321        }
;;;322    }
;;;323    
                          ENDP

000122  0000              DCW      0x0000
                  |L8.292|
                          DCD      Tmy
                  |L8.296|
000128  d2d1b4a5          DCB      210,209,180,165,181,215,0
00012c  b5d700  
00012f  00                DCB      0
                  |L8.304|
000130  ceb4b4a5          DCB      206,180,180,165,181,215,0
000134  b5d700  
000137  00                DCB      0
                  |L8.312|
                          DCD      Motor

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Tmy
                          %        20

                          AREA ||.data||, DATA, ALIGN=2

                  dg_sta
000000  00                DCB      0x00
                  dev_sta
000001  000000            DCB      0x00,0x00,0x00
                  xHandleTaskLCD
                          DCD      0x00000000
                  xHandleTaskMotorCtrl
                          DCD      0x00000000
                  xHandleTaskSensor
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_251558ba____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_251558ba____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_251558ba____REVSH|
#line 128
|__asm___6_main_c_251558ba____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
