; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_beep.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_beep.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -ID:\MyDoc\MyPrj\MyGitPrj\TmyV01\Project\MDK-ARM(uV4)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_beep.crf ..\..\User\bsp\src\bsp_beep.c]
                          THUMB

                          AREA ||i.BEEP_InitHard||, CODE, READONLY, ALIGN=2

                  BEEP_InitHard PROC
;;;50     */
;;;51     void BEEP_InitHard(void)
000000  b508              PUSH     {r3,lr}
;;;52     {
;;;53     #ifdef	BEEP_HAVE_POWER		/* 有源蜂鸣器 */
;;;54     	GPIO_InitTypeDef GPIO_InitStructure;
;;;55     
;;;56     	/* 打开GPIO的时钟 */
;;;57     	RCC_APB2PeriphClockCmd(GPIO_RCC_BEEP, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;58     
;;;59     	BEEP_DISABLE();
00000a  f44f7080          MOV      r0,#0x100
00000e  4908              LDR      r1,|L1.48|
000010  6008              STR      r0,[r1,#0]
;;;60     
;;;61     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000012  2003              MOVS     r0,#3
000014  f88d0002          STRB     r0,[sp,#2]
;;;62     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	/* 推挽输出模式 */	
000018  2010              MOVS     r0,#0x10
00001a  f88d0003          STRB     r0,[sp,#3]
;;;63     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_BEEP;
00001e  0100              LSLS     r0,r0,#4
000020  f8ad0000          STRH     r0,[sp,#0]
;;;64     	GPIO_Init(GPIO_PORT_BEEP, &GPIO_InitStructure);
000024  4669              MOV      r1,sp
000026  4802              LDR      r0,|L1.48|
000028  3814              SUBS     r0,r0,#0x14
00002a  f7fffffe          BL       GPIO_Init
;;;65     #endif
;;;66     }
00002e  bd08              POP      {r3,pc}
;;;67     
                          ENDP

                  |L1.48|
                          DCD      0x40010814

                          AREA ||i.BEEP_KeyTone||, CODE, READONLY, ALIGN=1

                  BEEP_KeyTone PROC
;;;118    */
;;;119    void BEEP_KeyTone(void)
000000  b500              PUSH     {lr}
;;;120    {
;;;121    	BEEP_Start(5, 1, 1);	/* 鸣叫50ms，停10ms， 1次 */
000002  2201              MOVS     r2,#1
000004  4611              MOV      r1,r2
000006  2005              MOVS     r0,#5
000008  f7fffffe          BL       BEEP_Start
;;;122    }
00000c  bd00              POP      {pc}
;;;123    
                          ENDP


                          AREA ||i.BEEP_Pro||, CODE, READONLY, ALIGN=2

                  BEEP_Pro PROC
;;;131    */
;;;132    void BEEP_Pro(void)
000000  4827              LDR      r0,|L3.160|
;;;133    {
;;;134    	if ((g_tBeep.ucEnalbe == 0) || (g_tBeep.usStopTime == 0))
000002  7800              LDRB     r0,[r0,#0]  ; g_tBeep
000004  b110              CBZ      r0,|L3.12|
000006  4826              LDR      r0,|L3.160|
000008  8880              LDRH     r0,[r0,#4]  ; g_tBeep
00000a  b900              CBNZ     r0,|L3.14|
                  |L3.12|
;;;135    	{
;;;136    		return;
;;;137    	}
;;;138    
;;;139    	if (g_tBeep.ucState == 0)
;;;140    	{
;;;141    		if (g_tBeep.usStopTime > 0)	/* 间断发声 */
;;;142    		{
;;;143    			if (++g_tBeep.usCount >= g_tBeep.usBeepTime)
;;;144    			{
;;;145    				BEEP_DISABLE();		/* 停止发声 */
;;;146    				g_tBeep.usCount = 0;
;;;147    				g_tBeep.ucState = 1;
;;;148    			}
;;;149    		}
;;;150    		else
;;;151    		{
;;;152    			;	/* 不做任何处理，连续发声 */
;;;153    		}
;;;154    	}
;;;155    	else if (g_tBeep.ucState == 1)
;;;156    	{
;;;157    		if (++g_tBeep.usCount >= g_tBeep.usStopTime)
;;;158    		{
;;;159    			/* 连续发声时，直到调用stop停止为止 */
;;;160    			if (g_tBeep.usCycle > 0)
;;;161    			{
;;;162    				if (++g_tBeep.usCycleCount >= g_tBeep.usCycle)
;;;163    				{
;;;164    					/* 循环次数到，停止发声 */
;;;165    					g_tBeep.ucEnalbe = 0;
;;;166    				}
;;;167    
;;;168    				if (g_tBeep.ucEnalbe == 0)
;;;169    				{
;;;170    					g_tBeep.usStopTime = 0;
;;;171    					return;
;;;172    				}
;;;173    			}
;;;174    
;;;175    			g_tBeep.usCount = 0;
;;;176    			g_tBeep.ucState = 0;
;;;177    
;;;178    			BEEP_ENABLE();			/* 开始发声 */
;;;179    		}
;;;180    	}
;;;181    }
00000c  4770              BX       lr
                  |L3.14|
00000e  4824              LDR      r0,|L3.160|
000010  7840              LDRB     r0,[r0,#1]            ;139  ; g_tBeep
000012  b9b0              CBNZ     r0,|L3.66|
000014  4822              LDR      r0,|L3.160|
000016  8880              LDRH     r0,[r0,#4]            ;141  ; g_tBeep
000018  2800              CMP      r0,#0                 ;141
00001a  dd3f              BLE      |L3.156|
00001c  4820              LDR      r0,|L3.160|
00001e  8900              LDRH     r0,[r0,#8]            ;143  ; g_tBeep
000020  1c40              ADDS     r0,r0,#1              ;143
000022  b280              UXTH     r0,r0                 ;143
000024  491e              LDR      r1,|L3.160|
000026  8108              STRH     r0,[r1,#8]            ;143
000028  8849              LDRH     r1,[r1,#2]            ;143  ; g_tBeep
00002a  4288              CMP      r0,r1                 ;143
00002c  db36              BLT      |L3.156|
00002e  f44f7080          MOV      r0,#0x100             ;145
000032  491c              LDR      r1,|L3.164|
000034  6008              STR      r0,[r1,#0]            ;145
000036  2000              MOVS     r0,#0                 ;146
000038  4919              LDR      r1,|L3.160|
00003a  8108              STRH     r0,[r1,#8]            ;146
00003c  2001              MOVS     r0,#1                 ;147
00003e  7048              STRB     r0,[r1,#1]            ;147
000040  e02c              B        |L3.156|
                  |L3.66|
000042  4817              LDR      r0,|L3.160|
000044  7840              LDRB     r0,[r0,#1]            ;155  ; g_tBeep
000046  2801              CMP      r0,#1                 ;155
000048  d128              BNE      |L3.156|
00004a  4815              LDR      r0,|L3.160|
00004c  8900              LDRH     r0,[r0,#8]            ;157  ; g_tBeep
00004e  1c40              ADDS     r0,r0,#1              ;157
000050  b280              UXTH     r0,r0                 ;157
000052  4913              LDR      r1,|L3.160|
000054  8108              STRH     r0,[r1,#8]            ;157
000056  8889              LDRH     r1,[r1,#4]            ;157  ; g_tBeep
000058  4288              CMP      r0,r1                 ;157
00005a  db1f              BLT      |L3.156|
00005c  4810              LDR      r0,|L3.160|
00005e  88c0              LDRH     r0,[r0,#6]            ;160  ; g_tBeep
000060  2800              CMP      r0,#0                 ;160
000062  dd12              BLE      |L3.138|
000064  480e              LDR      r0,|L3.160|
000066  8940              LDRH     r0,[r0,#0xa]          ;162  ; g_tBeep
000068  1c40              ADDS     r0,r0,#1              ;162
00006a  b280              UXTH     r0,r0                 ;162
00006c  490c              LDR      r1,|L3.160|
00006e  8148              STRH     r0,[r1,#0xa]          ;162
000070  88c9              LDRH     r1,[r1,#6]            ;162  ; g_tBeep
000072  4288              CMP      r0,r1                 ;162
000074  db02              BLT      |L3.124|
000076  2000              MOVS     r0,#0                 ;165
000078  4909              LDR      r1,|L3.160|
00007a  7008              STRB     r0,[r1,#0]            ;165
                  |L3.124|
00007c  4808              LDR      r0,|L3.160|
00007e  7800              LDRB     r0,[r0,#0]            ;168  ; g_tBeep
000080  b918              CBNZ     r0,|L3.138|
000082  2000              MOVS     r0,#0                 ;170
000084  4906              LDR      r1,|L3.160|
000086  8088              STRH     r0,[r1,#4]            ;170
000088  e7c0              B        |L3.12|
                  |L3.138|
00008a  2000              MOVS     r0,#0                 ;175
00008c  4904              LDR      r1,|L3.160|
00008e  8108              STRH     r0,[r1,#8]            ;175
000090  7048              STRB     r0,[r1,#1]            ;176
000092  f44f7080          MOV      r0,#0x100             ;178
000096  4903              LDR      r1,|L3.164|
000098  1f09              SUBS     r1,r1,#4              ;178
00009a  6008              STR      r0,[r1,#0]            ;178
                  |L3.156|
00009c  bf00              NOP      
00009e  e7b5              B        |L3.12|
;;;182    
                          ENDP

                  |L3.160|
                          DCD      g_tBeep
                  |L3.164|
                          DCD      0x40010814

                          AREA ||i.BEEP_Start||, CODE, READONLY, ALIGN=2

                  BEEP_Start PROC
;;;77     */
;;;78     void BEEP_Start(uint16_t _usBeepTime, uint16_t _usStopTime, uint16_t _usCycle)
000000  b510              PUSH     {r4,lr}
;;;79     {
;;;80     	if (_usBeepTime == 0)
000002  b900              CBNZ     r0,|L4.6|
                  |L4.4|
;;;81     	{
;;;82     		return;
;;;83     	}
;;;84     
;;;85     	g_tBeep.usBeepTime = _usBeepTime;
;;;86     	g_tBeep.usStopTime = _usStopTime;
;;;87     	g_tBeep.usCycle = _usCycle;
;;;88     	g_tBeep.usCount = 0;
;;;89     	g_tBeep.usCycleCount = 0;
;;;90     	g_tBeep.ucState = 0;
;;;91     	g_tBeep.ucEnalbe = 1;	/* 设置完全局参数后再使能发声标志 */
;;;92     
;;;93     	BEEP_ENABLE();			/* 开始发声 */
;;;94     }
000004  bd10              POP      {r4,pc}
                  |L4.6|
000006  4b08              LDR      r3,|L4.40|
000008  8058              STRH     r0,[r3,#2]            ;85
00000a  8099              STRH     r1,[r3,#4]            ;86
00000c  80da              STRH     r2,[r3,#6]            ;87
00000e  2300              MOVS     r3,#0                 ;88
000010  4c05              LDR      r4,|L4.40|
000012  8123              STRH     r3,[r4,#8]            ;88
000014  8163              STRH     r3,[r4,#0xa]          ;89
000016  7063              STRB     r3,[r4,#1]            ;90
000018  2301              MOVS     r3,#1                 ;91
00001a  7023              STRB     r3,[r4,#0]            ;91
00001c  021b              LSLS     r3,r3,#8              ;93
00001e  4c03              LDR      r4,|L4.44|
000020  6023              STR      r3,[r4,#0]            ;93
000022  bf00              NOP      
000024  e7ee              B        |L4.4|
;;;95     
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      g_tBeep
                  |L4.44|
                          DCD      0x40010810

                          AREA ||i.BEEP_Stop||, CODE, READONLY, ALIGN=2

                  BEEP_Stop PROC
;;;103    */
;;;104    void BEEP_Stop(void)
000000  2000              MOVS     r0,#0
;;;105    {
;;;106    	g_tBeep.ucEnalbe = 0;
000002  4903              LDR      r1,|L5.16|
000004  7008              STRB     r0,[r1,#0]
;;;107    
;;;108    	BEEP_DISABLE();	/* 必须在清控制标志后再停止发声，避免停止后在中断中又开启 */
000006  f44f7080          MOV      r0,#0x100
00000a  4902              LDR      r1,|L5.20|
00000c  6008              STR      r0,[r1,#0]
;;;109    }
00000e  4770              BX       lr
;;;110    
                          ENDP

                  |L5.16|
                          DCD      g_tBeep
                  |L5.20|
                          DCD      0x40010814

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tBeep
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_beep.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_beep_c_471486d3____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REVSH|
#line 128
|__asm___10_bsp_beep_c_471486d3____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
