; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\hx711.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\hx711.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -ID:\MyDoc\MyPrj\MyGitPrj\TmyV01\Project\MDK-ARM(uV4)\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -D__MICROLIB -D__UVISION_VERSION=514 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\hx711.crf ..\..\User\hx711\HX711.c]
                          THUMB

                          AREA ||i.HX711_Init||, CODE, READONLY, ALIGN=2

                  HX711_Init PROC
;;;76     
;;;77     void HX711_Init( void )
000000  b508              PUSH     {r3,lr}
;;;78     {
;;;79         //CLK:PB5  CLR:PE11  Data:PE10
;;;80         GPIO_InitTypeDef        GPIO_InitStructure;
;;;81     
;;;82         GPIO_InitStructure.GPIO_Pin = HX711_PIN_DATA;
000002  f44f7000          MOV      r0,#0x200
000006  f8ad0000          STRH     r0,[sp,#0]
;;;83         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00000a  2004              MOVS     r0,#4
00000c  f88d0003          STRB     r0,[sp,#3]
;;;84         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;85         GPIO_Init(HX711_PORT,&GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  4808              LDR      r0,|L1.60|
00001a  f7fffffe          BL       GPIO_Init
;;;86     
;;;87         GPIO_InitStructure.GPIO_Pin = HX711_PIN_SCK; 
00001e  f44f7080          MOV      r0,#0x100
000022  f8ad0000          STRH     r0,[sp,#0]
;;;88         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000026  2003              MOVS     r0,#3
000028  f88d0002          STRB     r0,[sp,#2]
;;;89         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;           
00002c  2010              MOVS     r0,#0x10
00002e  f88d0003          STRB     r0,[sp,#3]
;;;90         GPIO_Init(HX711_PORT,&GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4801              LDR      r0,|L1.60|
000036  f7fffffe          BL       GPIO_Init
;;;91     
;;;92     }
00003a  bd08              POP      {r3,pc}
;;;93     
                          ENDP

                  |L1.60|
                          DCD      0x40010c00

                          AREA ||i.HX711_Read||, CODE, READONLY, ALIGN=2

                  HX711_Read PROC
;;;126    //unsigned long HX711_Read_B32(void)  //读HX711芯片输出的数据。 
;;;127    unsigned long HX711_Read(void)
000000  b570              PUSH     {r4-r6,lr}
;;;128    { 
;;;129        unsigned long val = 0; 
000002  2400              MOVS     r4,#0
;;;130        unsigned char i = 0; 
000004  2500              MOVS     r5,#0
;;;131        
;;;132        val = 0;
000006  bf00              NOP      
;;;133        
;;;134        HX711_DATA_1;   //DOUT=1 
000008  f44f7100          MOV      r1,#0x200
00000c  4827              LDR      r0,|L2.172|
00000e  f7fffffe          BL       GPIO_SetBits
;;;135        HX711_SCK_0;    //SCK=0
000012  f44f7180          MOV      r1,#0x100
000016  4825              LDR      r0,|L2.172|
000018  f7fffffe          BL       GPIO_ResetBits
;;;136        
;;;137        while( HX711_DATA_CHK ); //等待DOUT=0  
00001c  bf00              NOP      
                  |L2.30|
00001e  f44f7100          MOV      r1,#0x200
000022  4822              LDR      r0,|L2.172|
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  2800              CMP      r0,#0
00002a  d1f8              BNE      |L2.30|
;;;138        delay_us(1); 
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       bsp_DelayUS
;;;139        for(i=0;i<24;i++) 
000032  2500              MOVS     r5,#0
000034  e013              B        |L2.94|
                  |L2.54|
;;;140        { 
;;;141            HX711_SCK_1;    //SCK=1 
000036  f44f7180          MOV      r1,#0x100
00003a  481c              LDR      r0,|L2.172|
00003c  f7fffffe          BL       GPIO_SetBits
;;;142            val=val<<1; 
000040  0064              LSLS     r4,r4,#1
;;;143            //delay_us(1);  
;;;144            HX711_SCK_0;    //SCK=0 
000042  f44f7180          MOV      r1,#0x100
000046  4819              LDR      r0,|L2.172|
000048  f7fffffe          BL       GPIO_ResetBits
;;;145            if( HX711_DATA_CHK ) //DOUT=1 
00004c  f44f7100          MOV      r1,#0x200
000050  4816              LDR      r0,|L2.172|
000052  f7fffffe          BL       GPIO_ReadInputDataBit
000056  b100              CBZ      r0,|L2.90|
;;;146            val++; 
000058  1c64              ADDS     r4,r4,#1
                  |L2.90|
00005a  1c68              ADDS     r0,r5,#1              ;139
00005c  b2c5              UXTB     r5,r0                 ;139
                  |L2.94|
00005e  2d18              CMP      r5,#0x18              ;139
000060  dbe9              BLT      |L2.54|
;;;147           //delay_us(1); 
;;;148        } 
;;;149        HX711_SCK_1; 
000062  f44f7180          MOV      r1,#0x100
000066  4811              LDR      r0,|L2.172|
000068  f7fffffe          BL       GPIO_SetBits
;;;150        delay_us(1); 
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       bsp_DelayUS
;;;151        HX711_SCK_0; //
000072  f44f7180          MOV      r1,#0x100
000076  480d              LDR      r0,|L2.172|
000078  f7fffffe          BL       GPIO_ResetBits
;;;152        delay_us(1); 
00007c  2001              MOVS     r0,#1
00007e  f7fffffe          BL       bsp_DelayUS
;;;153        HX711_SCK_1; 
000082  f44f7180          MOV      r1,#0x100
000086  4809              LDR      r0,|L2.172|
000088  f7fffffe          BL       GPIO_SetBits
;;;154        delay_us(1); 
00008c  2001              MOVS     r0,#1
00008e  f7fffffe          BL       bsp_DelayUS
;;;155        val=val^0x800000;//第25个脉冲下降沿来时，转换数据
000092  f4840400          EOR      r4,r4,#0x800000
;;;156        HX711_SCK_0; //
000096  f44f7180          MOV      r1,#0x100
00009a  4804              LDR      r0,|L2.172|
00009c  f7fffffe          BL       GPIO_ResetBits
;;;157        //HX711_DATA_1; 
;;;158        delay_us(1);  
0000a0  2001              MOVS     r0,#1
0000a2  f7fffffe          BL       bsp_DelayUS
;;;159        
;;;160        return val;
0000a6  4620              MOV      r0,r4
;;;161    }  
0000a8  bd70              POP      {r4-r6,pc}
;;;162    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L2.172|
                          DCD      0x40010c00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  BLE_TxBuf
                          %        100
                  BLE_RxBuf
                          %        100

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\hx711\\HX711.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_HX711_c_1416208a____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_HX711_c_1416208a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_HX711_c_1416208a____REVSH|
#line 128
|__asm___7_HX711_c_1416208a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
