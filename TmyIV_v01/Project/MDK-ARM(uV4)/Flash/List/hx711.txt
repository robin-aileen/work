; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\hx711.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\hx711.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -I..\..\User\delay -I.\RTE\_Flash -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\hx711.crf ..\..\User\hx711\HX711.c]
                          THUMB

                          AREA ||i.HX711_Init||, CODE, READONLY, ALIGN=2

                  HX711_Init PROC
;;;21     
;;;22     void HX711_Init( void )
000000  b508              PUSH     {r3,lr}
;;;23     {
;;;24         //CLK:PB5  CLR:PE11  Data:PE10
;;;25         GPIO_InitTypeDef        GPIO_InitStructure;
;;;26     
;;;27         GPIO_InitStructure.GPIO_Pin = HX711_PIN_DATA;
000002  f44f7000          MOV      r0,#0x200
000006  f8ad0000          STRH     r0,[sp,#0]
;;;28         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00000a  2004              MOVS     r0,#4
00000c  f88d0003          STRB     r0,[sp,#3]
;;;29         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000010  2003              MOVS     r0,#3
000012  f88d0002          STRB     r0,[sp,#2]
;;;30         GPIO_Init(HX711_PORT,&GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  4808              LDR      r0,|L1.60|
00001a  f7fffffe          BL       GPIO_Init
;;;31     
;;;32         GPIO_InitStructure.GPIO_Pin = HX711_PIN_SCK; 
00001e  f44f7080          MOV      r0,#0x100
000022  f8ad0000          STRH     r0,[sp,#0]
;;;33         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000026  2003              MOVS     r0,#3
000028  f88d0002          STRB     r0,[sp,#2]
;;;34         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;           
00002c  2010              MOVS     r0,#0x10
00002e  f88d0003          STRB     r0,[sp,#3]
;;;35         GPIO_Init(HX711_PORT,&GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4801              LDR      r0,|L1.60|
000036  f7fffffe          BL       GPIO_Init
;;;36     
;;;37     }
00003a  bd08              POP      {r3,pc}
;;;38     
                          ENDP

                  |L1.60|
                          DCD      0x40010c00

                          AREA ||i.HX711_Read||, CODE, READONLY, ALIGN=2

                  HX711_Read PROC
;;;39     //unsigned long HX711_Read_B32(void)  //读HX711芯片输出的数据。 
;;;40     unsigned long HX711_Read(void)
000000  b570              PUSH     {r4-r6,lr}
;;;41     { 
;;;42         unsigned long val = 0; 
000002  2400              MOVS     r4,#0
;;;43         unsigned char i = 0; 
000004  2500              MOVS     r5,#0
;;;44         
;;;45         val = 0;
000006  bf00              NOP      
;;;46         
;;;47         HX711_DATA_1;   //DOUT=1 
000008  f44f7100          MOV      r1,#0x200
00000c  481f              LDR      r0,|L2.140|
00000e  f7fffffe          BL       GPIO_SetBits
;;;48         HX711_SCK_0;    //SCK=0
000012  f44f7180          MOV      r1,#0x100
000016  481d              LDR      r0,|L2.140|
000018  f7fffffe          BL       GPIO_ResetBits
;;;49         
;;;50         while( HX711_DATA_CHK ); //等待DOUT=0  
00001c  bf00              NOP      
                  |L2.30|
00001e  f44f7100          MOV      r1,#0x200
000022  481a              LDR      r0,|L2.140|
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  2800              CMP      r0,#0
00002a  d1f8              BNE      |L2.30|
;;;51         delay_us(1); 
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       delay_us
;;;52         for(i=0;i<24;i++) 
000032  2500              MOVS     r5,#0
000034  e013              B        |L2.94|
                  |L2.54|
;;;53         { 
;;;54             HX711_SCK_1;    //SCK=1 
000036  f44f7180          MOV      r1,#0x100
00003a  4814              LDR      r0,|L2.140|
00003c  f7fffffe          BL       GPIO_SetBits
;;;55             val=val<<1;   
000040  0064              LSLS     r4,r4,#1
;;;56             HX711_SCK_0;    //SCK=0 
000042  f44f7180          MOV      r1,#0x100
000046  4811              LDR      r0,|L2.140|
000048  f7fffffe          BL       GPIO_ResetBits
;;;57             if( HX711_DATA_CHK ) //DOUT=1 
00004c  f44f7100          MOV      r1,#0x200
000050  480e              LDR      r0,|L2.140|
000052  f7fffffe          BL       GPIO_ReadInputDataBit
000056  b100              CBZ      r0,|L2.90|
;;;58             val++; 
000058  1c64              ADDS     r4,r4,#1
                  |L2.90|
00005a  1c68              ADDS     r0,r5,#1              ;52
00005c  b2c5              UXTB     r5,r0                 ;52
                  |L2.94|
00005e  2d18              CMP      r5,#0x18              ;52
000060  dbe9              BLT      |L2.54|
;;;59         } 
;;;60         HX711_SCK_1; 
000062  f44f7180          MOV      r1,#0x100
000066  4809              LDR      r0,|L2.140|
000068  f7fffffe          BL       GPIO_SetBits
;;;61         delay_us(1); 
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       delay_us
;;;62         val=val^0x800000;//第25个脉冲下降沿来时，转换数据
000072  f4840400          EOR      r4,r4,#0x800000
;;;63         HX711_SCK_0; //
000076  f44f7180          MOV      r1,#0x100
00007a  4804              LDR      r0,|L2.140|
00007c  f7fffffe          BL       GPIO_ResetBits
;;;64         //HX711_DATA_1; 
;;;65         delay_us(1);  
000080  2001              MOVS     r0,#1
000082  f7fffffe          BL       delay_us
;;;66         
;;;67         return val;
000086  4620              MOV      r0,r4
;;;68     }  
000088  bd70              POP      {r4-r6,pc}
;;;69     //
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      0x40010c00

                          AREA ||i.PRE_Adjust||, CODE, READONLY, ALIGN=2

                  PRE_Adjust PROC
;;;120    //设置压力校准值
;;;121    void PRE_Adjust( uint8_t n, unsigned long p )
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;123        PressureTable[ n ] = p;
000006  4804              LDR      r0,|L3.24|
000008  f8405024          STR      r5,[r0,r4,LSL #2]
;;;124        //save2flash
;;;125        data_saved.data.Pressure[n] = p;
00000c  4803              LDR      r0,|L3.28|
00000e  f8405024          STR      r5,[r0,r4,LSL #2]
;;;126        
;;;127        SaveToFlash();
000012  f7fffffe          BL       SaveToFlash
;;;128    }
000016  bd70              POP      {r4-r6,pc}
;;;129    
                          ENDP

                  |L3.24|
                          DCD      PressureTable
                  |L3.28|
                          DCD      data_saved+0x34

                          AREA ||i.PRE_GetLevel||, CODE, READONLY, ALIGN=2

                  PRE_GetLevel PROC
;;;131    //得到压力所在等级
;;;132    uint8_t PRE_GetLevel( unsigned long p )
000000  4602              MOV      r2,r0
;;;133    {
;;;134        uint8_t i;
;;;135        
;;;136        for(i=0; i<7; i++)
000002  2100              MOVS     r1,#0
000004  e008              B        |L4.24|
                  |L4.6|
;;;137        {
;;;138            if( *( PressureTable + i ) >= p ) return i;
000006  4806              LDR      r0,|L4.32|
000008  f8500021          LDR      r0,[r0,r1,LSL #2]
00000c  4290              CMP      r0,r2
00000e  d301              BCC      |L4.20|
000010  4608              MOV      r0,r1
                  |L4.18|
;;;139        }
;;;140        
;;;141        return 6;
;;;142    }
000012  4770              BX       lr
                  |L4.20|
000014  1c48              ADDS     r0,r1,#1              ;136
000016  b2c1              UXTB     r1,r0                 ;136
                  |L4.24|
000018  2907              CMP      r1,#7                 ;136
00001a  dbf4              BLT      |L4.6|
00001c  2006              MOVS     r0,#6                 ;141
00001e  e7f8              B        |L4.18|
                          ENDP

                  |L4.32|
                          DCD      PressureTable

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PressureTable
                          %        28
                  BLE_TxBuf
                          %        100
                  BLE_RxBuf
                          %        100

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\hx711\\HX711.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_HX711_c_1416208a____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_HX711_c_1416208a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_HX711_c_1416208a____REVSH|
#line 128
|__asm___7_HX711_c_1416208a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
