; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\hw_config.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\hw_config.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\app -I..\..\User\lcd\inc -I..\..\User\hx711 -I..\..\User\delay -I.\RTE\_Flash -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=525 -D_RTE_ -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\hw_config.crf ..\..\User\lcd\src\hw_config.c]
                          THUMB

                          AREA ||i.Interrupts_Config||, CODE, READONLY, ALIGN=1

                  Interrupts_Config PROC
;;;95     *******************************************************************************/
;;;96     void Interrupts_Config(void)
000000  b508              PUSH     {r3,lr}
;;;97     {
;;;98         NVIC_InitTypeDef NVIC_InitStructure;
;;;99         NVIC_PriorityGroupConfig(NVIC_PriorityGroup_1);
000002  f44f60c0          MOV      r0,#0x600
000006  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;100        /* Enable USART Interrupt */
;;;101        NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
00000a  2025              MOVS     r0,#0x25
00000c  f88d0000          STRB     r0,[sp,#0]
;;;102        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000010  2001              MOVS     r0,#1
000012  f88d0001          STRB     r0,[sp,#1]
;;;103        NVIC_Init(&NVIC_InitStructure);
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       NVIC_Init
;;;104    }
00001c  bd08              POP      {r3,pc}
;;;105    
                          ENDP


                          AREA ||i.Set_System||, CODE, READONLY, ALIGN=1

                  Set_System PROC
;;;38     *******************************************************************************/
;;;39     void Set_System(void)
000000  b510              PUSH     {r4,lr}
;;;40     {
;;;41     
;;;42     
;;;43         //* SYSCLK, HCLK, PCLK2 and PCLK1 configuration 
;;;44         //* RCC system reset(for debug purpose) 
;;;45         RCC_DeInit();
000002  f7fffffe          BL       RCC_DeInit
;;;46         //*使用内部的晶振
;;;47         RCC_HSICmd(ENABLE);
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       RCC_HSICmd
;;;48         while(RCC_GetFlagStatus(RCC_FLAG_HSIRDY) == RESET)
00000c  bf00              NOP      
                  |L2.14|
00000e  2021              MOVS     r0,#0x21
000010  f7fffffe          BL       RCC_GetFlagStatus
000014  2800              CMP      r0,#0
000016  d0fa              BEQ      |L2.14|
;;;49         {
;;;50         }
;;;51         if(1)
;;;52         {
;;;53     
;;;54             FLASH_PrefetchBufferCmd(FLASH_PrefetchBuffer_Enable);
000018  2010              MOVS     r0,#0x10
00001a  f7fffffe          BL       FLASH_PrefetchBufferCmd
;;;55             FLASH_SetLatency(FLASH_Latency_2);
00001e  2002              MOVS     r0,#2
000020  f7fffffe          BL       FLASH_SetLatency
;;;56     
;;;57             RCC_HCLKConfig(RCC_SYSCLK_Div1);                              //AHB时钟
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       RCC_HCLKConfig
;;;58     
;;;59             RCC_PCLK2Config(RCC_HCLK_Div1);                                  //APB2时钟
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       RCC_PCLK2Config
;;;60     
;;;61             RCC_PCLK1Config(RCC_HCLK_Div2);                                  //ABP1时钟
000030  f44f6080          MOV      r0,#0x400
000034  f7fffffe          BL       RCC_PCLK1Config
;;;62     
;;;63             //设置 PLL 时钟源及倍频系数
;;;64             RCC_PLLConfig(RCC_PLLSource_HSI_Div2, RCC_PLLMul_12);          //4M*12 =48M
000038  f44f1120          MOV      r1,#0x280000
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       RCC_PLLConfig
;;;65     
;;;66     
;;;67             //使能或者失能 PLL,这个参数可以取：ENABLE或者DISABLE
;;;68             RCC_PLLCmd(ENABLE);//如果PLL被用于系统时钟,那么它不能被失能
000042  2001              MOVS     r0,#1
000044  f7fffffe          BL       RCC_PLLCmd
;;;69             //等待指定的 RCC 标志位设置成功 等待PLL初始化成功
;;;70             while(RCC_GetFlagStatus(RCC_FLAG_PLLRDY) == RESET)
000048  bf00              NOP      
                  |L2.74|
00004a  2039              MOVS     r0,#0x39
00004c  f7fffffe          BL       RCC_GetFlagStatus
000050  2800              CMP      r0,#0
000052  d0fa              BEQ      |L2.74|
;;;71             {
;;;72             }
;;;73     
;;;74             //设置系统时钟（SYSCLK） 设置PLL为系统时钟源
;;;75             RCC_SYSCLKConfig(RCC_SYSCLKSource_PLLCLK);
000054  2002              MOVS     r0,#2
000056  f7fffffe          BL       RCC_SYSCLKConfig
;;;76     
;;;77             //等待PLL成功用作于系统时钟的时钟源
;;;78             //  0x00：HSI 作为系统时钟
;;;79             //  0x04：HSE作为系统时钟
;;;80             //  0x08：PLL作为系统时钟
;;;81             while(RCC_GetSYSCLKSource() != 0x08)
00005a  bf00              NOP      
                  |L2.92|
00005c  f7fffffe          BL       RCC_GetSYSCLKSource
000060  2808              CMP      r0,#8
000062  d1fb              BNE      |L2.92|
;;;82             {
;;;83             }
;;;84         }
;;;85     #
;;;86     }
000064  bd10              POP      {r4,pc}
;;;87     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  USART_InitStructure
                          %        16

                          AREA ||.data||, DATA, ALIGN=0

                  HSEStartUpStatus
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\lcd\\src\\hw_config.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_hw_config_c_25f922fc____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_hw_config_c_25f922fc____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_hw_config_c_25f922fc____REVSH|
#line 128
|__asm___11_hw_config_c_25f922fc____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
